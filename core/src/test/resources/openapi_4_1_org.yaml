---
openapi: 3.0.3
info:
  title: Smart Manufacturing Operation Management Service API (development)
  description: "Smart Manufacturing Operation Management Service provide a REST-API\
    \ to access and modify the resources via restful API [GET, POST, PUT, DELETE,\
    \ PATCH] using the path .../api/resources/...<BR>"
  contact:
    name: Contact and Support
    url: https://gec.io/kontakt/
    email: support@gec.io
  license:
    name: Commercial
    url: https://gec.io/
  version: 4.1.0
security:
- keycloak_auth: []
tags: []
paths:
  /smartmom-svc/api/analysis/prediction-run/{id}/result:
    get:
      tags:
      - prediction prediction-run analysis (private)
      summary: PRIVATE API get the Analysis-Results for a Prediction Run
      description: |
        ### Required roles
        * prediction_admin
        * prediction_user
      operationId: io.gec.smom.prediction.boundary.AnalysisResource_readAnalysisResult
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysisResultType:
                    description: Result Type
                    type: string
                  qtyFailure:
                    format: int64
                    description: Quantity Failure
                    type: integer
                  qtyUsed:
                    format: int64
                    description: Quantity Used
                    type: integer
                  failurePercent:
                    format: double
                    description: Failure Percent
                    type: number
                  fromDate:
                    format: date-time
                    description: From Date
                    type: string
                  toDate:
                    format: date-time
                    description: To Date
                    type: string
                  location:
                    description: Location
                    type: string
                  partId:
                    format: int64
                    description: Id of the Part(Product)
                    type: integer
                  partName:
                    description: Name of the Part(Product)
                    type: string
                  materialBinId:
                    format: int64
                    description: Id of the MaterialBin
                    type: integer
                  materialBinName:
                    description: Name of the MaterialBin
                    type: string
                  equipmentId:
                    format: int64
                    description: Id of the Equipment
                    type: integer
                  equipmentName:
                    description: Name of the Equipment
                    type: string
                readOnly: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - prediction_admin
        - prediction_user
      - keycloak_auth:
        - prediction_admin
        - prediction_user
  /smartmom-svc/api/audit/objects:
    get:
      tags:
      - audit-trail (private)
      summary: PRIVATE API Get names of all audited objects
      operationId: io.gec.smom.audit.boundary.AuditResource_getAllAuditedEntityNames
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/audit/{object}/{id}/history:
    get:
      tags:
      - audit-trail (private)
      summary: PRIVATE API Get history of an object
      description: Return history for the given object-type and id
      operationId: io.gec.smom.audit.boundary.AuditResource_getHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: UUID of the Object
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: object
        in: path
        description: Object for which the history should be gathered
        required: true
        schema:
          type: string
        example: Part
      - name: changedFieldName
        in: query
        description: "If given, only those history-entries will be selected, where\
          \ at least one of given field-values has changed"
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryUUIdentifiableObject'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/builds/version:
    get:
      tags:
      - system info (private)
      summary: PRIVATE API Get Build-Version/Date of the artifact
      operationId: io.gec.smom.build.boundary.BuildResource_getVersion
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/enumerations:
    get:
      tags:
      - Enumeration Resource enumerations (private)
      summary: PRIVATE API Get all possible Enumeration-Classes
      operationId: io.gec.smom.common.enumeration.boundary.EnumerationResource_getEnums
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/enumerations/level2:
    get:
      tags:
      - mdc level2 enumerations (private)
      summary: "PRIVATE API Get all possible Values for the Enumeration Level2 with\
        \ included Childrens (Level3, Level4)"
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.Level2Resource_getLevel2
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: "Return possible Values for the Enumeration Level2 with included\
            \ Childrens (Level3, Level4)"
          content:
            application/json:
              schema:
                description: "SEMI E 10 Level2 with included Childrens (Level3, Level4)"
                type: array
                items:
                  enum:
                  - NonScheduledUse
                  - Downtime
                  - Uptime
                  type: string
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/enumerations/{enumName}:
    get:
      tags:
      - Enumeration Resource enumerations (private)
      summary: PRIVATE API Get all possible Values for the Enumeration
      operationId: io.gec.smom.common.enumeration.boundary.EnumerationResource_getEnumConstants
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: enumName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/imports/equipments:
    post:
      tags:
      - smom equipments imports (public)
      summary: Import/Load Equipment
      description: |
        Import a Equipment <BR>If the Equipment doesn't exists, it will be created<BR>If the Equipment already exists, changes in the materialBin will be updated<BR>
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT LOCKED* Equipment Object is locked
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOEquipmentDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *EQUIPMENT CANNOT_BE_CREATED* Equipment Object cannot be created due missing or inconsistent data
            * *EQUIPMENT DATA_MISMATCH* Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT REQUIRED_VALUE_MISSING* Equipment A require value is missing
            * *EQUIPMENT_PART DATA_MISMATCH* Part of the Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT_PART NOT_FOUND* Part of the Equipment Object Not found
            * *EQUIPMENT_PART REQUIRED_VALUE_MISSING* Part of the Equipment A require value is missing
            * *EQUIPMENT_TYPE NOT_FOUND* Equipment type Object Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOEquipmentDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/equipments/loadBulk:
    post:
      tags:
      - smom equipments imports (public)
      summary: Import/Load Equipment via BULK
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EquipmentDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT LOCKED* Equipment Object is locked
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOEquipmentDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOEquipmentDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *EQUIPMENT CANNOT_BE_CREATED* Equipment Object cannot be created due missing or inconsistent data
            * *EQUIPMENT DATA_MISMATCH* Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT REQUIRED_VALUE_MISSING* Equipment A require value is missing
            * *EQUIPMENT_PART DATA_MISMATCH* Part of the Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT_PART NOT_FOUND* Part of the Equipment Object Not found
            * *EQUIPMENT_PART REQUIRED_VALUE_MISSING* Part of the Equipment A require value is missing
            * *EQUIPMENT_TYPE NOT_FOUND* Equipment type Object Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOEquipmentDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/materialbindata:
    post:
      tags:
      - smom materialbindata imports (public)
      summary: Import/Load MaterialBinData
      description: |
        Import a materialBin with optional sections and measurements<BR>If the materialBin doesn't exists, it will be created with its sections and measurements<BR>If the materialBin already exists, changes in the materialBin will be updated, also changes on sections will be updated. Measurements will be stored as is.<BR>
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.material.boundary.MaterialBinDataImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialBinDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *MATERIAL_CHARGE REQUIRED_VALUE_MISSING* MaterialCharge A require value is missing
                * *MATERIAL_CHARGE REQUIRED_VALUE_MISSING_USE_DEFAULT* MaterialCharge A required value is missing, use a default instead
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOMaterialBinDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT ID_MISMATCH* Contact for an organization, company, association, division, group Id in path and id in body don't match
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *MATERIAL_BIN DATA_MISMATCH* MaterialBin Given Data don't match with the data in the Persistence
            * *MATERIAL_BIN EXCEPTION* MaterialBin Exception occured. See Message for further details
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN REQUIRED_VALUE_MISSING* MaterialBin A require value is missing
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_BIN STORED* MaterialBin Object is stored in
            * *MATERIAL_BIN_PART DATA_MISMATCH* Part of the MaterialBin Given Data don't match with the data in the Persistence
            * *MATERIAL_BIN_PART ID_MISMATCH* Part of the MaterialBin Id in path and id in body don't match
            * *MATERIAL_BIN_PART NOT_FOUND* Part of the MaterialBin Object Not found
            * *MATERIAL_BIN_PART REQUIRED_VALUE_MISSING* Part of the MaterialBin A require value is missing
            * *MATERIAL_BIN_SECTION CANNOT_BE_CREATED* Section of the MaterialBin Object cannot be created due missing or inconsistent data
            * *MATERIAL_BIN_SECTION ILLEGAL_ARGUMENT* Section of the MaterialBin A argument is not acceptable
            * *MATERIAL_BIN_SECTION NOT_FOUND* Section of the MaterialBin Object Not found
            * *MATERIAL_BIN_SECTION REQUIRED_VALUE_MISSING* Section of the MaterialBin A require value is missing
            * *MATERIAL_CHARGE DATA_MISMATCH* MaterialCharge Given Data don't match with the data in the Persistence
            * *MATERIAL_CHARGE NOT_FOUND* MaterialCharge Object Not found
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOMaterialBinDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/materialbindata/loadBulk:
    post:
      tags:
      - smom materialbindata imports (public)
      summary: Import/Load MaterialBinData via BULK
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.material.boundary.MaterialBinDataImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MaterialBinDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *MATERIAL_CHARGE REQUIRED_VALUE_MISSING* MaterialCharge A require value is missing
                * *MATERIAL_CHARGE REQUIRED_VALUE_MISSING_USE_DEFAULT* MaterialCharge A required value is missing, use a default instead
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOMaterialBinDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOMaterialBinDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT ID_MISMATCH* Contact for an organization, company, association, division, group Id in path and id in body don't match
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *MATERIAL_BIN DATA_MISMATCH* MaterialBin Given Data don't match with the data in the Persistence
            * *MATERIAL_BIN EXCEPTION* MaterialBin Exception occured. See Message for further details
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN REQUIRED_VALUE_MISSING* MaterialBin A require value is missing
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_BIN STORED* MaterialBin Object is stored in
            * *MATERIAL_BIN_PART DATA_MISMATCH* Part of the MaterialBin Given Data don't match with the data in the Persistence
            * *MATERIAL_BIN_PART ID_MISMATCH* Part of the MaterialBin Id in path and id in body don't match
            * *MATERIAL_BIN_PART NOT_FOUND* Part of the MaterialBin Object Not found
            * *MATERIAL_BIN_PART REQUIRED_VALUE_MISSING* Part of the MaterialBin A require value is missing
            * *MATERIAL_BIN_SECTION CANNOT_BE_CREATED* Section of the MaterialBin Object cannot be created due missing or inconsistent data
            * *MATERIAL_BIN_SECTION ILLEGAL_ARGUMENT* Section of the MaterialBin A argument is not acceptable
            * *MATERIAL_BIN_SECTION NOT_FOUND* Section of the MaterialBin Object Not found
            * *MATERIAL_BIN_SECTION REQUIRED_VALUE_MISSING* Section of the MaterialBin A require value is missing
            * *MATERIAL_CHARGE DATA_MISMATCH* MaterialCharge Given Data don't match with the data in the Persistence
            * *MATERIAL_CHARGE NOT_FOUND* MaterialCharge Object Not found
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOMaterialBinDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/multipanels:
    post:
      tags:
      - smom multipanels imports (public)
      summary: Import/Load Multipanel
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.MultipanelDataImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipanelDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT NOT_VALID_USE_DEFAULT* Serialunit a value is invalid, the serverside default is used instead
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOMultipanelDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *MULTIPANEL CANNOT_BE_CREATED* Multipanel Object cannot be created due missing or inconsistent data
            * *MULTIPANEL REQUIRED_VALUE_MISSING* Multipanel A require value is missing
            * *SERIALUNIT CANNOT_BE_CREATED* Serialunit Object cannot be created due missing or inconsistent data
            * *SERIALUNIT ID_NAME_MISMATCH* Serialunit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER REQUIRED_VALUE_MISSING* Workorder A require value is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOMultipanelDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/multipanels/loadBulk:
    post:
      tags:
      - smom multipanels imports (public)
      summary: Import/Load MultipanelData via BULK
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.MultipanelDataImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MultipanelDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT NOT_VALID_USE_DEFAULT* Serialunit a value is invalid, the serverside default is used instead
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOMultipanelDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOMultipanelDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *MULTIPANEL CANNOT_BE_CREATED* Multipanel Object cannot be created due missing or inconsistent data
            * *MULTIPANEL REQUIRED_VALUE_MISSING* Multipanel A require value is missing
            * *SERIALUNIT CANNOT_BE_CREATED* Serialunit Object cannot be created due missing or inconsistent data
            * *SERIALUNIT ID_NAME_MISMATCH* Serialunit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER REQUIRED_VALUE_MISSING* Workorder A require value is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOMultipanelDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/multipanels/serialunitbookings/states:
    post:
      tags:
      - smom multipanels imports (public)
      summary: Import/Load MultipanelSerialUnitBookingState
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.MultipanelSerialunitBookingStateDataImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipanelSerialUnitBookingStateDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
                * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
                * *MATERIAL_BIN_SECTION SECTION_REFERENCE_DO_NOT_MATCH_ANY_MATERIAL_BIN_SECTION* Section of the MaterialBin The given sectionReference don't match any section of the materialBin
                * *PART INSUFFICIENT_QUANTITY* Part Insufficient quantity, not usable
                * *PART NOT_SETUP* Part the given Object is not set up
                * *WORKORDER_BOM_ITEM LOCATION_IS_NOT_UNIQUE* WorkorderBomItem Location of all BomItem has to be unique within the BOM.
                * *WORKORDER_MATERIAL_BIN_SETUP UNABLE_TO_DECREMENT_QUANTITY_AUTOMATICALLY* WorkorderMaterialBinSetup Multiple alternative setups found. Unable to decrement automatically. Please provide booking-quantities for exact material-consumption bookings.
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_EXISTS_HAS_TO_BE_CREATED* WorkorderWorkstepOrganizationUnit Object doesn't exists and has to be created
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOMultipanelSerialUnitBookingStateDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *MATERIAL_BIN CANNOT_BE_CREATED* MaterialBin Object cannot be created due missing or inconsistent data
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MULTIPANEL NOT_FOUND* Multipanel Object Not found
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *ORGANIZATIONUNIT REQUIRED_VALUE_MISSING* OrganizationUnit A require value is missing
            * *SERIALUNIT CANNOT_BE_CREATED* Serialunit Object cannot be created due missing or inconsistent data
            * *SERIALUNIT DATA_MISMATCH* Serialunit Given Data don't match with the data in the Persistence
            * *SERIALUNIT ID_NAME_MISMATCH* Serialunit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT LOCKED* Serialunit Object is locked
            * *SERIALUNIT_BOOKING REQUIRED_VALUE_MISSING* Booking of a Serialunit A require value is missing
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP ID_NAME_MISMATCH* WorkorderWorkstep Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP REQUIRED_VALUE_MISSING* WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER DATA_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Data don't match with the data in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER ID_NAME_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires only ONE OrganizationUnit assigned at the Workstep, but multiple are assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires one OrganizationUnit assigned at the Workstep, but none is assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT ORGANIZATION_UNIT_IS_NOT_ASSIGNED_THE_WORKSTEP* WorkorderWorkstepOrganizationUnit OrganizationUnit is not assigned to the workstep
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOMultipanelSerialUnitBookingStateDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/multipanels/serialunitbookings/states/loadBulk:
    post:
      tags:
      - smom multipanels imports (public)
      summary: Import/Load MultipanelSerialUnitBookingStateDTO via BULK
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.MultipanelSerialunitBookingStateDataImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MultipanelSerialUnitBookingStateDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
                * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
                * *MATERIAL_BIN_SECTION SECTION_REFERENCE_DO_NOT_MATCH_ANY_MATERIAL_BIN_SECTION* Section of the MaterialBin The given sectionReference don't match any section of the materialBin
                * *PART INSUFFICIENT_QUANTITY* Part Insufficient quantity, not usable
                * *PART NOT_SETUP* Part the given Object is not set up
                * *WORKORDER_BOM_ITEM LOCATION_IS_NOT_UNIQUE* WorkorderBomItem Location of all BomItem has to be unique within the BOM.
                * *WORKORDER_MATERIAL_BIN_SETUP UNABLE_TO_DECREMENT_QUANTITY_AUTOMATICALLY* WorkorderMaterialBinSetup Multiple alternative setups found. Unable to decrement automatically. Please provide booking-quantities for exact material-consumption bookings.
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_EXISTS_HAS_TO_BE_CREATED* WorkorderWorkstepOrganizationUnit Object doesn't exists and has to be created
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOMultipanelSerialUnitBookingStateDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOMultipanelSerialUnitBookingStateDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *MATERIAL_BIN CANNOT_BE_CREATED* MaterialBin Object cannot be created due missing or inconsistent data
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MULTIPANEL NOT_FOUND* Multipanel Object Not found
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *ORGANIZATIONUNIT REQUIRED_VALUE_MISSING* OrganizationUnit A require value is missing
            * *SERIALUNIT CANNOT_BE_CREATED* Serialunit Object cannot be created due missing or inconsistent data
            * *SERIALUNIT DATA_MISMATCH* Serialunit Given Data don't match with the data in the Persistence
            * *SERIALUNIT ID_NAME_MISMATCH* Serialunit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT LOCKED* Serialunit Object is locked
            * *SERIALUNIT_BOOKING REQUIRED_VALUE_MISSING* Booking of a Serialunit A require value is missing
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP ID_NAME_MISMATCH* WorkorderWorkstep Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP REQUIRED_VALUE_MISSING* WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER DATA_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Data don't match with the data in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER ID_NAME_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires only ONE OrganizationUnit assigned at the Workstep, but multiple are assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires one OrganizationUnit assigned at the Workstep, but none is assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT ORGANIZATION_UNIT_IS_NOT_ASSIGNED_THE_WORKSTEP* WorkorderWorkstepOrganizationUnit OrganizationUnit is not assigned to the workstep
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOMultipanelSerialUnitBookingStateDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/organizationunitmessages:
    post:
      tags:
      - mdc organizationunitmessages imports (public)
      summary: Import/Load OrganizationUnitMessageDTO
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUnitMessageDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *ORGANIZATION_UNIT_MESSAGE INVALID_STATE* OrganizationUnitMessage State is not acceptable
                * *ORGANIZATION_UNIT_MESSAGE NOT_FOUND* OrganizationUnitMessage Object Not found
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOUnidentifiableOrganizationUnitMessageDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *MESSAGE ID_NAME_MISMATCH* Message Given Id and Name, don't match to the existing name for the id in the Persistence
            * *MESSAGE NOT_FOUND* Message Object Not found
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *ORGANIZATION_UNIT_MESSAGE ILLEGAL_ARGUMENT* OrganizationUnitMessage A argument is not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOUnidentifiableOrganizationUnitMessageDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/imports/organizationunitmessages/loadBulk:
    post:
      tags:
      - mdc organizationunitmessages imports (public)
      summary: Import/Load OrganizationUnitMessageDTO via BULK
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationUnitMessageDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *ORGANIZATION_UNIT_MESSAGE INVALID_STATE* OrganizationUnitMessage State is not acceptable
                * *ORGANIZATION_UNIT_MESSAGE NOT_FOUND* OrganizationUnitMessage Object Not found
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableOrganizationUnitMessageDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableOrganizationUnitMessageDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *MESSAGE ID_NAME_MISMATCH* Message Given Id and Name, don't match to the existing name for the id in the Persistence
            * *MESSAGE NOT_FOUND* Message Object Not found
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *ORGANIZATION_UNIT_MESSAGE ILLEGAL_ARGUMENT* OrganizationUnitMessage A argument is not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableOrganizationUnitMessageDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/imports/processmeasurementbooking:
    post:
      tags:
      - smom processmeasurementbooking imports (public)
      summary: Import/Load MeasurementProcessData
      description: |
        Load MeasurementProcessData into the Track&Trace system corresponding to a module of a production line.  An Array of MeasurementPCBData must given.  The PCB'S (serialunits) in the MeasurementPCBData - PCBBookingData Array are booked with the given state and bookDate.  If the PCB don't exists it's created based on the given product-object and workorder-Object. If the product-Object or the workorder-Object is not given a Default-Product and a defaulr workorder is used.
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.organizationunit.boundary.ProcessMeasurementBookingDataImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessMeasurementBookingDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOUnidentifiableProcessMeasurementBookingDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *PART ID_NAME_MISMATCH* Part Given Id and Name, don't match to the existing name for the id in the Persistence
            * *PART NOT_FOUND* Part Object Not found
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOUnidentifiableProcessMeasurementBookingDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/processmeasurementbooking/loadBulk:
    post:
      tags:
      - smom processmeasurementbooking imports (public)
      summary: Import/Load MeasurementProcessData via Bulk
      description: |
        Load MeasurementProcessData into the Track&Trace system corresponding to a module of a production line.  An Array of MeasurementData must given.  The PCB'S (serialunits) in the MeasurementPCBData - PCBBookingData Array are booked with the given state and bookDate.  If the PCB don't exists it's created based on the given product-object and workorder-Object. If the product-Object or the workorder-Object is not given a Default-Product and a defaulr workorder is used.
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.organizationunit.boundary.ProcessMeasurementBookingDataImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProcessMeasurementBookingDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableProcessMeasurementBookingDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableProcessMeasurementBookingDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *PART ID_NAME_MISMATCH* Part Given Id and Name, don't match to the existing name for the id in the Persistence
            * *PART NOT_FOUND* Part Object Not found
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableProcessMeasurementBookingDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/serialunitbookingdata:
    post:
      tags:
      - smom serialunitbookingdata imports (public)
      summary: Import/Load SerialunitBookingData
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingDataImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialunitBookingDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT LOCKED* Equipment Object is locked
                * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
                * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
                * *MATERIAL_BIN_SECTION SECTION_REFERENCE_DO_NOT_MATCH_ANY_MATERIAL_BIN_SECTION* Section of the MaterialBin The given sectionReference don't match any section of the materialBin
                * *PART INSUFFICIENT_QUANTITY* Part Insufficient quantity, not usable
                * *PART NOT_SETUP* Part the given Object is not set up
                * *WORKORDER_BOM_ITEM LOCATION_IS_NOT_UNIQUE* WorkorderBomItem Location of all BomItem has to be unique within the BOM.
                * *WORKORDER_MATERIAL_BIN_SETUP UNABLE_TO_DECREMENT_QUANTITY_AUTOMATICALLY* WorkorderMaterialBinSetup Multiple alternative setups found. Unable to decrement automatically. Please provide booking-quantities for exact material-consumption bookings.
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_EXISTS_HAS_TO_BE_CREATED* WorkorderWorkstepOrganizationUnit Object doesn't exists and has to be created
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOUnidentifiableSerialunitBookingDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *EQUIPMENT CANNOT_BE_CREATED* Equipment Object cannot be created due missing or inconsistent data
            * *EQUIPMENT DATA_MISMATCH* Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT REQUIRED_VALUE_MISSING* Equipment A require value is missing
            * *EQUIPMENT_PART DATA_MISMATCH* Part of the Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT_PART NOT_FOUND* Part of the Equipment Object Not found
            * *EQUIPMENT_PART REQUIRED_VALUE_MISSING* Part of the Equipment A require value is missing
            * *EQUIPMENT_TYPE NOT_FOUND* Equipment type Object Not found
            * *MATERIAL_BIN CANNOT_BE_CREATED* MaterialBin Object cannot be created due missing or inconsistent data
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *ORGANIZATIONUNIT REQUIRED_VALUE_MISSING* OrganizationUnit A require value is missing
            * *SERIALUNIT CANNOT_BE_CREATED* Serialunit Object cannot be created due missing or inconsistent data
            * *SERIALUNIT DATA_MISMATCH* Serialunit Given Data don't match with the data in the Persistence
            * *SERIALUNIT ID_NAME_MISMATCH* Serialunit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT LOCKED* Serialunit Object is locked
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP ID_NAME_MISMATCH* WorkorderWorkstep Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER DATA_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Data don't match with the data in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER ID_NAME_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires only ONE OrganizationUnit assigned at the Workstep, but multiple are assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires one OrganizationUnit assigned at the Workstep, but none is assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT ORGANIZATION_UNIT_IS_NOT_ASSIGNED_THE_WORKSTEP* WorkorderWorkstepOrganizationUnit OrganizationUnit is not assigned to the workstep
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOUnidentifiableSerialunitBookingDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *EQUIPMENT LOCKED* Equipment Object is locked
            * *EQUIPMENT STORED* Equipment Object is stored in
            * *SERIALUNIT_BOOKING REQUIRED_VALUE_MISSING* Booking of a Serialunit A require value is missing
            * *WORKORDER_WORKSTEP REQUIRED_VALUE_MISSING* WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/serialunitbookingdata/check:
    put:
      tags:
      - smom serialunitbookingdata imports (public)
      summary: Check upfront of the production step if the data for SerialunitBookingData
        is valid.
      description: |
        Check upfront of the production step if the data for SerialunitBookingData is valid.<BR />Additionally the given Serialunit, MaterialBin and MaterialCharge are checked for LockRestrictions.<BR />Hint: Measurements and Failures aren't checked, because they are only available after processing the serialunit.<BR /> For any Failure found a Failure will be added to the returned Failure-Array
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingDataImportResource_check
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialunitBookingDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT LOCKED* Equipment Object is locked
                * *SERIALUNIT NOT_EXISTS_HAS_TO_BE_CREATED* Serialunit Object doesn't exists and has to be created
                * *WORKORDER_WORKSTEP NOT_EXISTS_HAS_TO_BE_CREATED* WorkorderWorkstep Object doesn't exists and has to be created
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_EXISTS_HAS_TO_BE_CREATED* WorkorderWorkstepOrganizationUnit Object doesn't exists and has to be created
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Check finished successfully
        "417":
          description: |-
            Expectation Failed

            The Check found invalid conditions
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *EQUIPMENT CANNOT_BE_CREATED* Equipment Object cannot be created due missing or inconsistent data
            * *EQUIPMENT DATA_MISMATCH* Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT REQUIRED_VALUE_MISSING* Equipment A require value is missing
            * *EQUIPMENT_PART DATA_MISMATCH* Part of the Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT_PART NOT_FOUND* Part of the Equipment Object Not found
            * *EQUIPMENT_PART REQUIRED_VALUE_MISSING* Part of the Equipment A require value is missing
            * *MATERIAL_BIN DATA_MISMATCH* MaterialBin Given Data don't match with the data in the Persistence
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN REQUIRED_VALUE_MISSING* MaterialBin A require value is missing
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_BIN_PART DATA_MISMATCH* Part of the MaterialBin Given Data don't match with the data in the Persistence
            * *MATERIAL_BIN_PART NOT_FOUND* Part of the MaterialBin Object Not found
            * *MATERIAL_BIN_PART REQUIRED_VALUE_MISSING* Part of the MaterialBin A require value is missing
            * *MATERIAL_CHARGE DATA_MISMATCH* MaterialCharge Given Data don't match with the data in the Persistence
            * *MATERIAL_CHARGE NOT_FOUND* MaterialCharge Object Not found
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *ORGANIZATIONUNIT REQUIRED_VALUE_MISSING* OrganizationUnit A require value is missing
            * *SERIALUNIT CANNOT_BE_CREATED* Serialunit Object cannot be created due missing or inconsistent data
            * *SERIALUNIT DATA_MISMATCH* Serialunit Given Data don't match with the data in the Persistence
            * *SERIALUNIT ID_NAME_MISMATCH* Serialunit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT LOCKED* Serialunit Object is locked
            * *SERIALUNIT_BOOKING REQUIRED_VALUE_MISSING* Booking of a Serialunit A require value is missing
            * *SMT_EQUIPMENT_TYPE NOT_FOUND* Type of the SmtEquipment (predefinied enum) Object Not found
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP ID_NAME_MISMATCH* WorkorderWorkstep Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP REQUIRED_VALUE_MISSING* WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires only ONE OrganizationUnit assigned at the Workstep, but multiple are assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires one OrganizationUnit assigned at the Workstep, but none is assigned
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that point to the invalid Condition"
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/serialunitbookingdata/loadBulk:
    post:
      tags:
      - smom serialunitbookingdata imports (public)
      summary: Import/Load SerialunitData via BULK
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingDataImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SerialunitBookingDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT LOCKED* Equipment Object is locked
                * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
                * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
                * *MATERIAL_BIN_SECTION SECTION_REFERENCE_DO_NOT_MATCH_ANY_MATERIAL_BIN_SECTION* Section of the MaterialBin The given sectionReference don't match any section of the materialBin
                * *PART INSUFFICIENT_QUANTITY* Part Insufficient quantity, not usable
                * *PART NOT_SETUP* Part the given Object is not set up
                * *WORKORDER_BOM_ITEM LOCATION_IS_NOT_UNIQUE* WorkorderBomItem Location of all BomItem has to be unique within the BOM.
                * *WORKORDER_MATERIAL_BIN_SETUP UNABLE_TO_DECREMENT_QUANTITY_AUTOMATICALLY* WorkorderMaterialBinSetup Multiple alternative setups found. Unable to decrement automatically. Please provide booking-quantities for exact material-consumption bookings.
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_EXISTS_HAS_TO_BE_CREATED* WorkorderWorkstepOrganizationUnit Object doesn't exists and has to be created
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableSerialunitBookingDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableSerialunitBookingDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *EQUIPMENT CANNOT_BE_CREATED* Equipment Object cannot be created due missing or inconsistent data
            * *EQUIPMENT DATA_MISMATCH* Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT REQUIRED_VALUE_MISSING* Equipment A require value is missing
            * *EQUIPMENT_PART DATA_MISMATCH* Part of the Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT_PART NOT_FOUND* Part of the Equipment Object Not found
            * *EQUIPMENT_PART REQUIRED_VALUE_MISSING* Part of the Equipment A require value is missing
            * *EQUIPMENT_TYPE NOT_FOUND* Equipment type Object Not found
            * *MATERIAL_BIN CANNOT_BE_CREATED* MaterialBin Object cannot be created due missing or inconsistent data
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *ORGANIZATIONUNIT REQUIRED_VALUE_MISSING* OrganizationUnit A require value is missing
            * *SERIALUNIT CANNOT_BE_CREATED* Serialunit Object cannot be created due missing or inconsistent data
            * *SERIALUNIT DATA_MISMATCH* Serialunit Given Data don't match with the data in the Persistence
            * *SERIALUNIT ID_NAME_MISMATCH* Serialunit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT LOCKED* Serialunit Object is locked
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP ID_NAME_MISMATCH* WorkorderWorkstep Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER DATA_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Data don't match with the data in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER ID_NAME_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires only ONE OrganizationUnit assigned at the Workstep, but multiple are assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires one OrganizationUnit assigned at the Workstep, but none is assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT ORGANIZATION_UNIT_IS_NOT_ASSIGNED_THE_WORKSTEP* WorkorderWorkstepOrganizationUnit OrganizationUnit is not assigned to the workstep
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableSerialunitBookingDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *EQUIPMENT LOCKED* Equipment Object is locked
            * *EQUIPMENT STORED* Equipment Object is stored in
            * *SERIALUNIT_BOOKING REQUIRED_VALUE_MISSING* Booking of a Serialunit A require value is missing
            * *WORKORDER_WORKSTEP REQUIRED_VALUE_MISSING* WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/serialunitdata:
    post:
      tags:
      - smom serialunitdata imports (public)
      summary: Import/Load SerialunitData
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitDataImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialunitDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT NOT_VALID_USE_DEFAULT* Serialunit a value is invalid, the serverside default is used instead
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOSerialunitDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *SERIALUNIT ID_NAME_MISMATCH* Serialunit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT REQUIRED_VALUE_MISSING* Serialunit A require value is missing
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER REQUIRED_VALUE_MISSING* Workorder A require value is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOSerialunitDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/serialunitdata/loadBulk:
    post:
      tags:
      - smom serialunitdata imports (public)
      summary: Import/Load SerialunitData via BULK
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitDataImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SerialunitDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT NOT_VALID_USE_DEFAULT* Serialunit a value is invalid, the serverside default is used instead
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOSerialunitDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOSerialunitDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *SERIALUNIT ID_NAME_MISMATCH* Serialunit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT REQUIRED_VALUE_MISSING* Serialunit A require value is missing
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER REQUIRED_VALUE_MISSING* Workorder A require value is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOSerialunitDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/workorderdata:
    post:
      tags:
      - smom workorderdata imports (public)
      summary: Import/Load one WorkorderDTO  into the Smom
      description: "Create or update a workorder. If the workorder is to be released,\
        \ a consistency check is done. Workorders can use workplans and boms defined\
        \ in masterdata or provide workorder-specific worksteps and bomItems. If workplan\
        \ from masterdata is to be used, the bom has to be given from masterdata,\
        \ too (and vice versa). A mix of a masterdata bom/workplan and workorder-specific\
        \ bom/workplan is not supported.\n\nIf no bom-items are defined in smom on\
        \ release of the workorder, the bom will be fetched from masterdata and it's\
        \ definition copied.\n * If a MasterBomId is given (see Workorder-Resource-API):\
        \ Load Bom from mdata for id. Else \n * If a Bom-name is given: Load newest\
        \ Bom from mdata for name and erpVersion. Else \n * Load newest Bom from mdata\
        \ for workorder's partId and erpVersion.\n\nIf no worksteps are defined in\
        \ smom on release of the workorder, the workplan will be fetched from masterdata\
        \ and it's definition copied.\n * If a MasterWorkplanId is given (see Workorder-Resource-API):\
        \ Load Workplan from mdata for id. Else \n * If a Workplan-name is given:\
        \ Load newest Workplan from mdata for name and erpVersion. Else \n * Load\
        \ newest Workplan from mdata for workorder's partId and erpVersion.\n\nOn\
        \ Release-Checks done:\n * Workplan and bom are well defined (if from masterdata:\
        \ they exist and WorkorderType and partId are same as defined in workorder)\n\
        \ * At least one mandatory workstep is defined\n * Workstep-names are unique\n\
        \ * Workstep-confirmationNumbers are unique\n * Each workstep has at least\
        \ one OrganizationUnit assigned\n * Each bomItem references an existing workstep\
        \ by it's name \n\n### Required roles\n* smom_admin\n"
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *WORKORDER IGNORE_DELETE_FOR_A_NONE_EXISTING_ITEM* Workorder A Delete Request is send for a none existing Item, ignore Delete Request
                * *WORKORDER_WORKSTEP_BOM_ITEM BOM_ITEM_WORKSTEPNAME_MUST_MATCH_TO_WORKPLAN_WORKSTEP_NAME* BomItem required at a WorkorderWorkstep Bom - The BomItems WorkstepName must match a Workstepname in the Workplan.
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOWorkorderDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *BOM ILLEGAL_ARGUMENT* Bill of material A argument is not acceptable
            * *BOM NOT_FOUND* Bill of material Object Not found
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *PART NOT_FOUND* Part Object Not found
            * *UNIT NOT_FOUND* Unit of quantities (piece, gramm, liter, ...) Object Not found
            * *WORKCENTER NOT_FOUND* Workcenter Object Not found
            * *WORKCENTER MUST_CONTAIN_AT_LEAST_ONE_ORGANIZATION_UNIT* Workcenter Workplan - The Workcenter must contain at least one OrganizationUnit.
            * *WORKORDER ILLEGAL_ARGUMENT* Workorder A argument is not acceptable
            * *WORKORDER INVALID_STATE* Workorder State is not acceptable
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_BOM_ITEM LOCATION_IS_NOT_UNIQUE* WorkorderBomItem Location of all BomItem has to be unique within the BOM.
            * *WORKORDER_WORKSTEP LESS_WORKSTEPS_TO_IMPORT_FOR_RELEASED_WORKORDER* WorkorderWorkstep There a less Worksteps given in the Import than the current amount of Workorder Worksteps for the Released Workorder
            * *WORKORDER_WORKSTEP NO_POSITION_CHANGE_OF_WORKSTEP_TO_IMPORT_FOR_RELEASED_WORKORDER* WorkorderWorkstep The Worksteps given in the Import must not be change the  postions during Import for the Released Workorder
            * *WORKORDER_WORKSTEP WORKSTEP_CONFIRMATION_NUMBER_HAS_TO_BE_UNIQUE* WorkorderWorkstep The confirmationNumber of a Workstep has to be unique or null
            * *WORKORDER_WORKSTEP WORKSTEP_NAME_AT_A_POSITION_Of_RELEASED_WORKORDER_MUST_NOT_BE_CHANGED* WorkorderWorkstep Change the Name of Worksteps for a Position is not allowed
            * *WORKORDER_WORKSTEP WORKSTEP_NAME_HAS_TO_BE_UNIQUE* WorkorderWorkstep The Name of a WorkorderWorkstep has to be unique within a Workorder
            * *WORKORDER_WORKSTEP_BOM_ITEM BOM_ITEM_WORKSTEPNAME_MUST_MATCH_TO_WORKPLAN_WORKSTEP_NAME* BomItem required at a WorkorderWorkstep Bom - The BomItems WorkstepName must match a Workstepname in the Workplan.
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *WORKPLAN ILLEGAL_ARGUMENT* Workplan A argument is not acceptable
            * *WORKPLAN NOT_FOUND* Workplan Object Not found
            * *WORKPLAN WORKPLAN_MUST_CONTAIN_AT_LEAST_ONE_MANDATORY_WORKSTEP* Workplan The Workplan must contain at least one mandatory Workstep.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOWorkorderDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *PART MATERIALTYPE_PRODUCT_REQUIRED_FOR_THIS_OPERATION* Part The Part has to have MaterialType:PRODUCT to create a BOM, Workplan or Workorder
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/workorderdata/loadBulk:
    post:
      tags:
      - smom workorderdata imports (public)
      summary: Import/Load a List of WorkorderDTO's via BULK into the Smom system
      description: "Create or update multiple workorders. If the workorder is to be\
        \ released, a consistency check is done. Workorders can use workplans and\
        \ boms defined in masterdata or provide workorder-specific worksteps and bomItems.\
        \ If workplan from masterdata is to be used, the bom has to be given from\
        \ masterdata, too (and vice versa). A mix of a masterdata bom/workplan and\
        \ workorder-specific bom/workplan is not supported.\n\nIf no bom-items are\
        \ defined in smom on release of the workorder, the bom will be fetched from\
        \ masterdata and it's definition copied.\n * If a MasterBomId is given (see\
        \ Workorder-Resource-API): Load Bom from mdata for id. Else \n * If a Bom-name\
        \ is given: Load newest Bom from mdata for name and erpVersion. Else \n *\
        \ Load newest Bom from mdata for workorder's partId and erpVersion.\n\nIf\
        \ no worksteps are defined in smom on release of the workorder, the workplan\
        \ will be fetched from masterdata and it's definition copied.\n * If a MasterWorkplanId\
        \ is given (see Workorder-Resource-API): Load Workplan from mdata for id.\
        \ Else \n * If a Workplan-name is given: Load newest Workplan from mdata for\
        \ name and erpVersion. Else \n * Load newest Workplan from mdata for workorder's\
        \ partId and erpVersion.\n\nOn Release-Checks done:\n * Workplan and bom are\
        \ well defined (if from masterdata: they exist and WorkorderType and partId\
        \ are same as defined in workorder)\n * At least one mandatory workstep is\
        \ defined\n * Workstep-names are unique\n * Workstep-confirmationNumbers are\
        \ unique\n * Each workstep has at least one OrganizationUnit assigned\n *\
        \ Each bomItem references an existing workstep by it's name \n\n### Required\
        \ roles\n* smom_admin\n"
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WorkorderDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *WORKORDER IGNORE_DELETE_FOR_A_NONE_EXISTING_ITEM* Workorder A Delete Request is send for a none existing Item, ignore Delete Request
                * *WORKORDER_WORKSTEP_BOM_ITEM BOM_ITEM_WORKSTEPNAME_MUST_MATCH_TO_WORKPLAN_WORKSTEP_NAME* BomItem required at a WorkorderWorkstep Bom - The BomItems WorkstepName must match a Workstepname in the Workplan.
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOWorkorderDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOWorkorderDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *BOM ILLEGAL_ARGUMENT* Bill of material A argument is not acceptable
            * *BOM NOT_FOUND* Bill of material Object Not found
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *PART NOT_FOUND* Part Object Not found
            * *UNIT NOT_FOUND* Unit of quantities (piece, gramm, liter, ...) Object Not found
            * *WORKCENTER NOT_FOUND* Workcenter Object Not found
            * *WORKCENTER MUST_CONTAIN_AT_LEAST_ONE_ORGANIZATION_UNIT* Workcenter Workplan - The Workcenter must contain at least one OrganizationUnit.
            * *WORKORDER ILLEGAL_ARGUMENT* Workorder A argument is not acceptable
            * *WORKORDER INVALID_STATE* Workorder State is not acceptable
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_BOM_ITEM LOCATION_IS_NOT_UNIQUE* WorkorderBomItem Location of all BomItem has to be unique within the BOM.
            * *WORKORDER_WORKSTEP LESS_WORKSTEPS_TO_IMPORT_FOR_RELEASED_WORKORDER* WorkorderWorkstep There a less Worksteps given in the Import than the current amount of Workorder Worksteps for the Released Workorder
            * *WORKORDER_WORKSTEP NO_POSITION_CHANGE_OF_WORKSTEP_TO_IMPORT_FOR_RELEASED_WORKORDER* WorkorderWorkstep The Worksteps given in the Import must not be change the  postions during Import for the Released Workorder
            * *WORKORDER_WORKSTEP WORKSTEP_CONFIRMATION_NUMBER_HAS_TO_BE_UNIQUE* WorkorderWorkstep The confirmationNumber of a Workstep has to be unique or null
            * *WORKORDER_WORKSTEP WORKSTEP_NAME_AT_A_POSITION_Of_RELEASED_WORKORDER_MUST_NOT_BE_CHANGED* WorkorderWorkstep Change the Name of Worksteps for a Position is not allowed
            * *WORKORDER_WORKSTEP WORKSTEP_NAME_HAS_TO_BE_UNIQUE* WorkorderWorkstep The Name of a WorkorderWorkstep has to be unique within a Workorder
            * *WORKORDER_WORKSTEP_BOM_ITEM BOM_ITEM_WORKSTEPNAME_MUST_MATCH_TO_WORKPLAN_WORKSTEP_NAME* BomItem required at a WorkorderWorkstep Bom - The BomItems WorkstepName must match a Workstepname in the Workplan.
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *WORKPLAN ILLEGAL_ARGUMENT* Workplan A argument is not acceptable
            * *WORKPLAN NOT_FOUND* Workplan Object Not found
            * *WORKPLAN WORKPLAN_MUST_CONTAIN_AT_LEAST_ONE_MANDATORY_WORKSTEP* Workplan The Workplan must contain at least one mandatory Workstep.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOWorkorderDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *PART MATERIALTYPE_PRODUCT_REQUIRED_FOR_THIS_OPERATION* Part The Part has to have MaterialType:PRODUCT to create a BOM, Workplan or Workorder
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/workorderworkstepbookings:
    post:
      tags:
      - smom workorderworkstepbookings imports (public)
      summary: Import/Load WorkorderWorkstepBooking
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBookingImportResource_load
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstepBookingDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT LOCKED* Equipment Object is locked
                * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
                * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
                * *MATERIAL_BIN_SECTION LOCKED* Section of the MaterialBin Object is locked
                * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
                * *PART INSUFFICIENT_QUANTITY* Part Insufficient quantity, not usable
                * *PART NOT_SETUP* Part the given Object is not set up
                * *WORKORDER_BOM_ITEM LOCATION_IS_NOT_UNIQUE* WorkorderBomItem Location of all BomItem has to be unique within the BOM.
                * *WORKORDER_MATERIAL_BIN_SETUP UNABLE_TO_DECREMENT_QUANTITY_AUTOMATICALLY* WorkorderMaterialBinSetup Multiple alternative setups found. Unable to decrement automatically. Please provide booking-quantities for exact material-consumption bookings.
                * *WORKORDER_WORKSTEP BOOKINFO_IS_TOO_LONG_CUT_IT* WorkorderWorkstep the given BookInfo is too long, so cut it
                * *WORKORDER_WORKSTEP_BOOKING BOOKINFO_IS_TOO_LONG_CUT_IT* Booking of a WorkorderWorkstep the given BookInfo is too long, so cut it
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_EXISTS_HAS_TO_BE_CREATED* WorkorderWorkstepOrganizationUnit Object doesn't exists and has to be created
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOUnidentifiableWorkorderWorkstepBookingDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *EQUIPMENT CANNOT_BE_CREATED* Equipment Object cannot be created due missing or inconsistent data
            * *EQUIPMENT DATA_MISMATCH* Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT REQUIRED_VALUE_MISSING* Equipment A require value is missing
            * *EQUIPMENT_PART DATA_MISMATCH* Part of the Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT_PART NOT_FOUND* Part of the Equipment Object Not found
            * *EQUIPMENT_PART REQUIRED_VALUE_MISSING* Part of the Equipment A require value is missing
            * *EQUIPMENT_TYPE NOT_FOUND* Equipment type Object Not found
            * *MATERIAL_BIN CANNOT_BE_CREATED* MaterialBin Object cannot be created due missing or inconsistent data
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *UNIT ID_NAME_MISMATCH* Unit of quantities (piece, gramm, liter, ...) Given Id and Name, don't match to the existing name for the id in the Persistence
            * *UNIT NOT_FOUND* Unit of quantities (piece, gramm, liter, ...) Object Not found
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_CLUSTER_ITEM NOT_FOUND* Defines workorder that is part of an WorkorderCluster Object Not found
            * *WORKORDER_WORKSTEP ID_NAME_MISMATCH* WorkorderWorkstep Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP REQUIRED_VALUE_MISSING* WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP ORGANIZATION_UNIT_IS_NOT_ASSIGNED_THE_WORKSTEP* WorkorderWorkstep OrganizationUnit is not assigned to the workstep
            * *WORKORDER_WORKSTEP_BOOKING REQUIRED_VALUE_MISSING* Booking of a WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP_BOOKING INVALID_QUANTITY* Booking of a WorkorderWorkstep invalid quantity
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER DATA_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Data don't match with the data in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER ID_NAME_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT ID_MISMATCH* WorkorderWorkstepOrganizationUnit Id in path and id in body don't match
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires only ONE OrganizationUnit assigned at the Workstep, but multiple are assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires one OrganizationUnit assigned at the Workstep, but none is assigned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportRTOUnidentifiableWorkorderWorkstepBookingDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *EQUIPMENT LOCKED* Equipment Object is locked
            * *EQUIPMENT STORED* Equipment Object is stored in
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/workorderworkstepbookings/check:
    put:
      tags:
      - smom workorderworkstepbookings imports (public)
      summary: Check upfront of the production step if the data for WorkorderWorkstepBookingDTO
        is valid.
      description: |
        Check upfront of the production step if the data for WorkorderWorkstepBookingDTO is valid.<BR />Additionally the given MaterialBin and MaterialCharge are checked for LockRestrictions.<BR /> For any Failure found a Failure will be added to the returned Failure-Array
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBookingImportResource_check
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstepBookingDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT LOCKED* Equipment Object is locked
                * *MATERIAL_CHARGE REQUIRED_VALUE_MISSING* MaterialCharge A require value is missing
                * *MATERIAL_CHARGE REQUIRED_VALUE_MISSING_USE_DEFAULT* MaterialCharge A required value is missing, use a default instead
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_EXISTS_HAS_TO_BE_CREATED* WorkorderWorkstepOrganizationUnit Object doesn't exists and has to be created
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Check finished successfully
        "417":
          description: |-
            Expectation Failed

            The Check found invalid conditions
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *EQUIPMENT CANNOT_BE_CREATED* Equipment Object cannot be created due missing or inconsistent data
            * *EQUIPMENT DATA_MISMATCH* Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT REQUIRED_VALUE_MISSING* Equipment A require value is missing
            * *EQUIPMENT_PART DATA_MISMATCH* Part of the Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT_PART NOT_FOUND* Part of the Equipment Object Not found
            * *EQUIPMENT_PART REQUIRED_VALUE_MISSING* Part of the Equipment A require value is missing
            * *IMPORT_OBJECT CANNOT_BE_CREATED* Object for importing data Object cannot be created due missing or inconsistent data
            * *MATERIAL_BIN DATA_MISMATCH* MaterialBin Given Data don't match with the data in the Persistence
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN REQUIRED_VALUE_MISSING* MaterialBin A require value is missing
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_BIN_PART DATA_MISMATCH* Part of the MaterialBin Given Data don't match with the data in the Persistence
            * *MATERIAL_BIN_PART NOT_FOUND* Part of the MaterialBin Object Not found
            * *MATERIAL_BIN_PART REQUIRED_VALUE_MISSING* Part of the MaterialBin A require value is missing
            * *MATERIAL_CHARGE DATA_MISMATCH* MaterialCharge Given Data don't match with the data in the Persistence
            * *MATERIAL_CHARGE NOT_FOUND* MaterialCharge Object Not found
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *UNIT ID_NAME_MISMATCH* Unit of quantities (piece, gramm, liter, ...) Given Id and Name, don't match to the existing name for the id in the Persistence
            * *UNIT NOT_FOUND* Unit of quantities (piece, gramm, liter, ...) Object Not found
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP ID_NAME_MISMATCH* WorkorderWorkstep Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP REQUIRED_VALUE_MISSING* WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP ORGANIZATION_UNIT_IS_NOT_ASSIGNED_THE_WORKSTEP* WorkorderWorkstep OrganizationUnit is not assigned to the workstep
            * *WORKORDER_WORKSTEP_BOOKING REQUIRED_VALUE_MISSING* Booking of a WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER DATA_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Data don't match with the data in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER ID_NAME_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires only ONE OrganizationUnit assigned at the Workstep, but multiple are assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires one OrganizationUnit assigned at the Workstep, but none is assigned
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that point to the invalid Condition"
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/imports/workorderworkstepbookings/loadBulk:
    post:
      tags:
      - smom workorderworkstepbookings imports (public)
      summary: Import/Load WorkorderWorkstepBookings via BULK
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBookingImportResource_loadBulk
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WorkorderWorkstepBookingDTO'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT LOCKED* Equipment Object is locked
                * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
                * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
                * *MATERIAL_BIN_SECTION LOCKED* Section of the MaterialBin Object is locked
                * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
                * *PART INSUFFICIENT_QUANTITY* Part Insufficient quantity, not usable
                * *PART NOT_SETUP* Part the given Object is not set up
                * *WORKORDER_BOM_ITEM LOCATION_IS_NOT_UNIQUE* WorkorderBomItem Location of all BomItem has to be unique within the BOM.
                * *WORKORDER_MATERIAL_BIN_SETUP UNABLE_TO_DECREMENT_QUANTITY_AUTOMATICALLY* WorkorderMaterialBinSetup Multiple alternative setups found. Unable to decrement automatically. Please provide booking-quantities for exact material-consumption bookings.
                * *WORKORDER_WORKSTEP BOOKINFO_IS_TOO_LONG_CUT_IT* WorkorderWorkstep the given BookInfo is too long, so cut it
                * *WORKORDER_WORKSTEP_BOOKING BOOKINFO_IS_TOO_LONG_CUT_IT* Booking of a WorkorderWorkstep the given BookInfo is too long, so cut it
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_EXISTS_HAS_TO_BE_CREATED* WorkorderWorkstepOrganizationUnit Object doesn't exists and has to be created
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableWorkorderWorkstepBookingDTO'
        "206":
          description: Partial Content - Import of some Import Items failed. See Code
            422 for possible Return-Codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableWorkorderWorkstepBookingDTO'
        "422":
          description: |-
            Unprocessable Entity - Import of all Import Items failed.
            * *CONTACT DATA_MISMATCH* Contact for an organization, company, association, division, group Given Data don't match with the data in the Persistence
            * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
            * *EQUIPMENT CANNOT_BE_CREATED* Equipment Object cannot be created due missing or inconsistent data
            * *EQUIPMENT DATA_MISMATCH* Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT REQUIRED_VALUE_MISSING* Equipment A require value is missing
            * *EQUIPMENT_PART DATA_MISMATCH* Part of the Equipment Given Data don't match with the data in the Persistence
            * *EQUIPMENT_PART NOT_FOUND* Part of the Equipment Object Not found
            * *EQUIPMENT_PART REQUIRED_VALUE_MISSING* Part of the Equipment A require value is missing
            * *EQUIPMENT_TYPE NOT_FOUND* Equipment type Object Not found
            * *MATERIAL_BIN CANNOT_BE_CREATED* MaterialBin Object cannot be created due missing or inconsistent data
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *ORGANIZATIONUNIT ID_NAME_MISMATCH* OrganizationUnit Given Id and Name, don't match to the existing name for the id in the Persistence
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *UNIT ID_NAME_MISMATCH* Unit of quantities (piece, gramm, liter, ...) Given Id and Name, don't match to the existing name for the id in the Persistence
            * *UNIT NOT_FOUND* Unit of quantities (piece, gramm, liter, ...) Object Not found
            * *WORKORDER ID_NAME_MISMATCH* Workorder Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_CLUSTER_ITEM NOT_FOUND* Defines workorder that is part of an WorkorderCluster Object Not found
            * *WORKORDER_WORKSTEP ID_NAME_MISMATCH* WorkorderWorkstep Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP REQUIRED_VALUE_MISSING* WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP ORGANIZATION_UNIT_IS_NOT_ASSIGNED_THE_WORKSTEP* WorkorderWorkstep OrganizationUnit is not assigned to the workstep
            * *WORKORDER_WORKSTEP_BOOKING REQUIRED_VALUE_MISSING* Booking of a WorkorderWorkstep A require value is missing
            * *WORKORDER_WORKSTEP_BOOKING INVALID_QUANTITY* Booking of a WorkorderWorkstep invalid quantity
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER DATA_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Data don't match with the data in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER ID_NAME_MISMATCH* WorkorderWorkstep ConfirmationNumber Given Id and Name, don't match to the existing name for the id in the Persistence
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT ID_MISMATCH* WorkorderWorkstepOrganizationUnit Id in path and id in body don't match
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires only ONE OrganizationUnit assigned at the Workstep, but multiple are assigned
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT* WorkorderWorkstepOrganizationUnit Automatic OrganizationUnit detection, requires one OrganizationUnit assigned at the Workstep, but none is assigned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBulkRTOUnidentifiableWorkorderWorkstepBookingDTO'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *EQUIPMENT LOCKED* Equipment Object is locked
            * *EQUIPMENT STORED* Equipment Object is stored in
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/reports/dims/mdc:
    get:
      tags:
      - mdc dims reports (public)
      summary: get the MdcDim for the given FromDate/ToDate
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.reports.dims.mdc.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* mdc_admin\n* mdc_user\n"
      operationId: io.gec.smom.mdc.condition.boundary.MdcReportResource_readMdcDimension
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 10000
          maximum: 100000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MdcDim'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/reports/facts/mdc:
    get:
      tags:
      - mdc facts reports (public)
      summary: get the MdcFacts for the FromDate/ToDate
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.reports.facts.mdc.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* mdc_admin\n* mdc_user\n"
      operationId: io.gec.smom.mdc.condition.boundary.MdcReportResource_readMdcFacts
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 10000
          maximum: 100000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: ouName
        in: query
        description: Name of the organization unit (optional)
        required: true
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MdcFact'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/resources/assignments:
    get:
      tags:
      - mdc assignments resources (private)
      summary: PRIVATE API get Conditions by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assignment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc assignments resources (private)
      summary: PRIVATE API Create a new Assignment
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/assignments/{assignmentId}/condition/{conditionId}:
    post:
      tags:
      - mdc assignments resources (private)
      summary: PRIVATE API Create a new AssignmentCondition
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentConditionResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: assignmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: conditionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc assignments resources (private)
      summary: PRIVATE API remove the AssignmentCondition for the given ids
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentConditionResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: assignmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: conditionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/assignments/{assignmentId}/history:
    get:
      tags:
      - mdc assignments resources (private)
      summary: PRIVATE API Get the History of the Assignment
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentConditionResource_getHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: assignmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryAssignmentCondition'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/assignments/{id}:
    get:
      tags:
      - mdc assignments resources (private)
      summary: PRIVATE API get the Assignment for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    put:
      tags:
      - mdc assignments resources (private)
      summary: PRIVATE API Update a Assignment
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc assignments resources (private)
      summary: PRIVATE API remove the Assignment for the given id
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/conditiongroups:
    get:
      tags:
      - mdc conditiongroups resources (private)
      summary: PRIVATE API get ConditionGroups by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConditionGroupResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConditionGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc conditiongroups resources (private)
      summary: PRIVATE API create a new ConditionGroup
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.ConditionGroupResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionGroup'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionGroup'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/conditiongroups/{id}:
    get:
      tags:
      - mdc conditiongroups resources (private)
      summary: PRIVATE API get the ConditionGroup for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConditionGroupResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    put:
      tags:
      - mdc conditiongroups resources (private)
      summary: PRIVATE API update a ConditionGroup
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.ConditionGroupResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionGroup'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc conditiongroups resources (private)
      summary: PRIVATE API remove the ConditionGroup for the given id
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.ConditionGroupResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/conditions:
    get:
      tags:
      - mdc conditions resources (private)
      summary: PRIVATE API get Conditions by Filter
      description: |
        Level2 and Level3 can be used as a filter criteria, but not as sort criteria
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConditionResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: color
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/GecColor'
            - description: "Color to be used, on display"
      - name: conditionGroupId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "If the condition is member of a group, this is this ID\
                \ of the group."
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: level2
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Level2'
            - description: MDC-Level2 according to SEMI E 10
              readOnly: true
      - name: level3
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Level3'
            - description: MDC-Level3 according to SEMI E 10
              readOnly: true
      - name: level4
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Level4'
            - description: MDC-Level4 according to SEMI E 10
              nullable: false
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc conditions resources (private)
      summary: PRIVATE API create a new Condition
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.ConditionResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/conditions/{id}:
    get:
      tags:
      - mdc conditions resources (private)
      summary: PRIVATE API get the Condition for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConditionResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    put:
      tags:
      - mdc conditions resources (private)
      summary: PRIVATE API update a Condition
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.ConditionResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc conditions resources (private)
      summary: PRIVATE API remove the Condition for the given id
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.ConditionResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/countercomponents:
    get:
      tags:
      - idgenerator countercomponents resources (private)
      summary: PRIVATE API get CounterComponent by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.CounterComponentResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: counterType
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/CounterType'
            - description: Counter-Type of the counter
              default: DECIMAL
              nullable: false
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: fillMode
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/FillMode'
            - description: "If minimal length is not reached, fill with this mode"
              default: LEFT
              nullable: false
      - name: fillWith
        in: query
        schema:
          type: array
          items:
            description: "If minimal length is not reached, fill with this string"
            default: ' '
            minLength: 1
            type: string
            nullable: false
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: incrementBy
        in: query
        schema:
          type: array
          items:
            description: Increment counter by this value for each new ID
            default: "1"
            type: string
            nullable: false
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: max
        in: query
        schema:
          type: array
          items:
            description: Maximal value of the counter
            default: "2147483647"
            type: string
            nullable: false
      - name: minLength
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Minimal length of the generated ID-Part
            maximum: 1000
            minimum: 1
            type: integer
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: start
        in: query
        schema:
          type: array
          items:
            description: Start of the counter
            default: "0"
            type: string
            nullable: false
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CounterComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    post:
      tags:
      - idgenerator countercomponents resources (private)
      summary: PRIVATE API create a new CounterComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.CounterComponentResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterComponent'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterComponent'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/countercomponents/{id}:
    get:
      tags:
      - idgenerator countercomponents resources (private)
      summary: PRIVATE API get the CounterComponent for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.CounterComponentResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    put:
      tags:
      - idgenerator countercomponents resources (private)
      summary: PRIVATE API update a CounterComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.CounterComponentResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterComponent'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    delete:
      tags:
      - idgenerator countercomponents resources (private)
      summary: PRIVATE API remove the CounterComponent for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.CounterComponentResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/countercomponents/{id}/preview:
    get:
      tags:
      - idgenerator countercomponents resources (private)
      summary: PRIVATE API get a Preview for the CounterComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.CounterComponentResource_preview
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of the CounterComponent for Preview
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreviewResult'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/countercomponents/{id}/version/{version}/archive:
    put:
      tags:
      - idgenerator countercomponents resources (private)
      summary: PRIVATE API Archive CounterComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.CounterComponentResource_archive
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/countercomponents/{id}/version/{version}/release:
    put:
      tags:
      - idgenerator countercomponents resources (private)
      summary: PRIVATE API Release CounterComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.CounterComponentResource_release
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/datetimecomponents:
    get:
      tags:
      - idgenerator datetimecomponents resources (private)
      summary: PRIVATE API get DateTimeComponent by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.DateTimeComponentResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: dateTimeFormat
        in: query
        schema:
          type: array
          items:
            description: DateTimeFormat-String defining a Date/Time-String as part
              of the generated ID
            type: string
            nullable: false
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: fillMode
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/FillMode'
            - description: "If minimal length is not reached, fill with this mode"
              default: LEFT
              nullable: false
      - name: fillWith
        in: query
        schema:
          type: array
          items:
            description: "If minimal length is not reached, fill with this string"
            default: ' '
            minLength: 1
            type: string
            nullable: false
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: minLength
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Minimal length of the generated ID-Part
            maximum: 1000
            minimum: 1
            type: integer
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: zoneId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ZoneId'
            - description: "Id of the TimeZone, if not provided, configured default\
                \ will be used"
              example: Europe/Berlin
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DateTimeComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    post:
      tags:
      - idgenerator datetimecomponents resources (private)
      summary: PRIVATE API create a new DateTimeComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.DateTimeComponentResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateTimeComponent'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeComponent'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/datetimecomponents/{id}:
    get:
      tags:
      - idgenerator datetimecomponents resources (private)
      summary: PRIVATE API get the DateTimeComponent for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.DateTimeComponentResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    put:
      tags:
      - idgenerator datetimecomponents resources (private)
      summary: PRIVATE API update a DateTimeComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.DateTimeComponentResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateTimeComponent'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    delete:
      tags:
      - idgenerator datetimecomponents resources (private)
      summary: PRIVATE API remove the DateTimeComponent for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.DateTimeComponentResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/datetimecomponents/{id}/preview:
    get:
      tags:
      - idgenerator datetimecomponents resources (private)
      summary: PRIVATE API get a Preview for the DateTimeComponentResource
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.DateTimeComponentResource_preview
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offsetDateTime
        in: query
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewResult'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/datetimecomponents/{id}/version/{version}/archive:
    put:
      tags:
      - idgenerator datetimecomponents resources (private)
      summary: PRIVATE API Archive DateTimeComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.DateTimeComponentResource_archive
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/datetimecomponents/{id}/version/{version}/release:
    put:
      tags:
      - idgenerator datetimecomponents resources (private)
      summary: PRIVATE API Release DateTimeComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.DateTimeComponentResource_release
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/equipments:
    get:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API get Equipment by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: equipmentTypeId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - nullable: false
      - name: failures
        in: query
        schema:
          type: array
          items:
            format: int32
            type: integer
            readOnly: true
      - name: failuresTotal
        in: query
        schema:
          type: array
          items:
            format: int32
            type: integer
            readOnly: true
      - name: finalExpiration
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/FinalMaintenanceInterval'
            - description: "Final Expiration. If expired, the Object must be discarded,\
                \ should not longer be used!"
      - name: firstBookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
            readOnly: true
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: lastBookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
            readOnly: true
      - name: lockedState
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/LockedState'
            - description: if at least one lockGroup is assigned to this materialBinSection
              default: NEVER_LOCKED
              nullable: false
      - name: maintenanceIntervalGroups
        in: query
        schema:
          type: array
          items:
            description: each MaintenanceIntervalGroup-name has to be unique
            type: array
            items:
              $ref: '#/components/schemas/MaintenanceIntervalGroup'
            nullable: false
      - name: maintenanceState
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/MaintenanceState'
            - readOnly: true
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: nextDurationMaintenance
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Available for duration-based MaintenanceInterval only
            type: string
            readOnly: true
      - name: nextDurationMaintenanceName
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/MaintenanceName'
            - description: Available for duration-based MaintenanceInterval only
              readOnly: true
      - name: nextFailureMaintenance
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Available for failure-based MaintenanceInterval only
            type: integer
            readOnly: true
      - name: nextFailureMaintenanceName
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/MaintenanceName'
            - description: Available for failure-based MaintenanceInterval only
              readOnly: true
      - name: nextUsageMaintenance
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Available for usage-based MaintenanceInterval only
            type: integer
            readOnly: true
      - name: nextUsageMaintenanceName
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/MaintenanceName'
            - description: Available for usage-based MaintenanceInterval only
              readOnly: true
      - name: partId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - nullable: false
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: producerContactId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "id of the producer, null if there is no producer"
      - name: storagePlaceId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "If the materialBin is stored: ID of the storagePlace"
              readOnly: true
      - name: storagePlaceName
        in: query
        schema:
          type: array
          items:
            description: "If the materialBin is stored: Name of the storagePlace"
            type: string
            readOnly: true
      - name: supplierContactId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "id of the supplier, null if there is no supplier"
      - name: usageFactor
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Factor describes the factor of wear. Should be considered
              when reporting usages.
            minimum: 1
            type: integer
            nullable: false
      - name: usages
        in: query
        schema:
          type: array
          items:
            format: int32
            type: integer
            readOnly: true
      - name: usagesTotal
        in: query
        schema:
          type: array
          items:
            format: int32
            type: integer
            readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Equipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
    post:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API create a new Equipment Entity
      description: |
        Recalculates next maintenances. If any maintenances have to be done, it will reported in warning-header.
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equipment'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT SHOULD_BE_IN_MAINTENANCE* Equipment Should be in maintenance
                * *EQUIPMENT SHOULD_BE_IN_MAINTENANCE_SOON* Equipment Should be in maintenance soon (warn reached)
                * *EQUIPMENT IN_MAINTENANCE* Equipment in maintenance
                * *EQUIPMENT FINALLY_EXPIRED* Equipment finaly expired
                * *EQUIPMENT FINALLY_EXPIRED_SOON* Equipment will soon be finaly expired
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/equipments/maintenance:
    get:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API Get equipment for maintenanceFilter
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_getByMaintainableFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: failuresMax
        in: query
        schema:
          format: int32
          type: integer
      - name: failuresMin
        in: query
        schema:
          format: int32
          type: integer
      - name: failuresTotalMax
        in: query
        schema:
          format: int32
          type: integer
      - name: failuresTotalMin
        in: query
        schema:
          format: int32
          type: integer
      - name: getNextUsageMaintenanceFrom
        in: query
        description: Available for usage-based MaintenanceInterval only
        schema:
          format: int32
          type: integer
      - name: getNextUsageMaintenanceTo
        in: query
        description: Available for usage-based MaintenanceInterval only
        schema:
          format: int32
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: maintenanceStates
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceState'
      - name: name
        in: query
        description: may contain wildcards
        schema:
          type: string
      - name: nextDurationMaintenanceFrom
        in: query
        description: Available for duration-based MaintenanceInterval only
        schema:
          format: date-time
          type: string
      - name: nextDurationMaintenanceName
        in: query
        description: Available for duration-based MaintenanceInterval only
        schema:
          $ref: '#/components/schemas/MaintenanceName'
      - name: nextDurationMaintenanceTo
        in: query
        description: Available for duration-based MaintenanceInterval only
        schema:
          format: date-time
          type: string
      - name: nextFailureMaintenanceFrom
        in: query
        description: Available for failure-based MaintenanceInterval only
        schema:
          format: int32
          type: integer
      - name: nextFailureMaintenanceName
        in: query
        description: Available for failure-based MaintenanceInterval only
        schema:
          $ref: '#/components/schemas/MaintenanceName'
      - name: nextFailureMaintenanceTo
        in: query
        description: Available for failure-based MaintenanceInterval only
        schema:
          format: int32
          type: integer
      - name: nextUsageMaintenanceName
        in: query
        description: Available for usage-based MaintenanceInterval only
        schema:
          $ref: '#/components/schemas/MaintenanceName'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: usagesMax
        in: query
        schema:
          format: int32
          type: integer
      - name: usagesMin
        in: query
        schema:
          format: int32
          type: integer
      - name: usagesTotalMax
        in: query
        schema:
          format: int32
          type: integer
      - name: usagesTotalMin
        in: query
        schema:
          format: int32
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Equipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/equipments/name/{name}:
    get:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API get Equipment for a unique name
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_readByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/equipments/{id}:
    get:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API get the Equipment for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
    put:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API update equipment
      description: |
        Recalculates next maintenances. If any maintenances have to be done, it will reported in warning-header.
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equipment'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT SHOULD_BE_IN_MAINTENANCE* Equipment Should be in maintenance
                * *EQUIPMENT SHOULD_BE_IN_MAINTENANCE_SOON* Equipment Should be in maintenance soon (warn reached)
                * *EQUIPMENT IN_MAINTENANCE* Equipment in maintenance
                * *EQUIPMENT FINALLY_EXPIRED* Equipment finaly expired
                * *EQUIPMENT FINALLY_EXPIRED_SOON* Equipment will soon be finaly expired
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/equipments/{id}/maintenance/check:
    get:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API Check Maintenance of equipment
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_checkMaintenance
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Check finished successfully
        "417":
          description: The Check found invalid conditions
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that point to the invalid Condition"
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/equipments/{id}/maintenance/end/group/{groupName}/interval/{intervalName}:
    put:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API End Maintenance of equipment
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_endMaintenance
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: groupName
        in: path
        required: true
        schema:
          description: Name of the maintenanceIntervalGroup
          type: string
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: intervalName
        in: path
        required: true
        schema:
          description: Name of the MaintenanceInterval in the group
          type: string
      - name: comment
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/equipments/{id}/maintenance/protocol:
    get:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API Get maintenanceProtocol for equipment with given Id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_getMaintenanceProtocol
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceProtocolViewEquipmentEquipmentMaintenanceProtocol'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/equipments/{id}/maintenance/start/group/{groupName}/interval/{intervalName}:
    put:
      tags:
      - smom equipments resources (private)
      summary: PRIVATE API Start Maintenance of equipment
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentResource_startMaintenance
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: groupName
        in: path
        required: true
        schema:
          description: Name of the maintenanceIntervalGroup
          type: string
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: intervalName
        in: path
        required: true
        schema:
          description: Name of the MaintenanceInterval in the group
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/failureactions:
    get:
      tags:
      - smom failureactions resources (private)
      summary: PRIVATE API get FailureAction by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureActionResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FailureAction'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom failureactions resources (private)
      summary: PRIVATE API create a new FailureAction
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureActionResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailureAction'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureAction'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failureactions/{id}:
    get:
      tags:
      - smom failureactions resources (private)
      summary: PRIVATE API get the failure for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureActionResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureAction'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom failureactions resources (private)
      summary: PRIVATE API update FailureAction
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureActionResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailureAction'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureAction'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failurecauses:
    get:
      tags:
      - smom failurecauses resources (private)
      summary: PRIVATE API get FailureCause by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureCauseResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FailureCause'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom failurecauses resources (private)
      summary: PRIVATE API create a new FailureCause
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureCauseResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailureCause'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureCause'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failurecauses/{id}:
    get:
      tags:
      - smom failurecauses resources (private)
      summary: PRIVATE API get the failure for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureCauseResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureCause'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom failurecauses resources (private)
      summary: PRIVATE API update equipment
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureCauseResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailureCause'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureCause'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failurepatterns:
    get:
      tags:
      - smom failurepatterns resources (private)
      summary: PRIVATE API get FailurePatterns by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailurePatternResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FailurePattern'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom failurepatterns resources (private)
      summary: PRIVATE API create a new FailurePattern
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailurePatternResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailurePattern'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailurePattern'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failurepatterns/{id}:
    get:
      tags:
      - smom failurepatterns resources (private)
      summary: PRIVATE API get the failurePattern for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailurePatternResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailurePattern'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom failurepatterns resources (private)
      summary: PRIVATE API update a failurePattern
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailurePatternResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailurePattern'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailurePattern'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failurerisks:
    get:
      tags:
      - smom failurerisks resources (private)
      summary: PRIVATE API get FailureRisk by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureRiskResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FailureRisk'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom failurerisks resources (private)
      summary: PRIVATE API create a new FailureRisk
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureRiskResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailureRisk'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureRisk'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failurerisks/{id}:
    get:
      tags:
      - smom failurerisks resources (private)
      summary: PRIVATE API get the failure for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureRiskResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureRisk'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom failurerisks resources (private)
      summary: PRIVATE API update equipment
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureRiskResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailureRisk'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureRisk'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failures:
    get:
      tags:
      - smom failures resources (private)
      summary: PRIVATE API get Failure by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: isPseudo
        in: query
        description: Pseudo failure
        schema:
          type: boolean
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Failure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom failures resources (private)
      summary: PRIVATE API create a new Failure
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Failure'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Failure'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failures/{id}:
    get:
      tags:
      - smom failures resources (private)
      summary: PRIVATE API get the failure for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Failure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom failures resources (private)
      summary: PRIVATE API update equipment
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Failure'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Failure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failuresymptoms:
    get:
      tags:
      - smom failuresymptoms resources (private)
      summary: PRIVATE API get FailureSymptom by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureSymptomResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FailureSymptom'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom failuresymptoms resources (private)
      summary: PRIVATE API create a new FailureSymptom
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureSymptomResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailureSymptom'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureSymptom'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/failuresymptoms/{id}:
    get:
      tags:
      - smom failuresymptoms resources (private)
      summary: PRIVATE API get the failure for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureSymptomResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureSymptom'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom failuresymptoms resources (private)
      summary: PRIVATE API update equipment
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureSymptomResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailureSymptom'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureSymptom'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/handlingunitdefinitions:
    get:
      tags:
      - masterdata handlingunitdefinitions resources (private)
      summary: "PRIVATE API get Handling Unit Definition by Filter (deprecated, use\
        \ masterdata-method)"
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_user
        * smom_admin
      operationId: io.gec.smom.masterdata.boundary.HandlingUnitDefinitionResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: hasDocuments
        in: query
        description: True when the Entity has documents in the DocumentSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: singleVarietyRequired
        in: query
        description: Single Variety Required
        schema:
          type: boolean
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HandlingUnitDefinition'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_user
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
  /smartmom-svc/api/resources/handlingunitdefinitions/{id}:
    get:
      tags:
      - masterdata handlingunitdefinitions resources (private)
      summary: "PRIVATE API get the Handling Unit Definition for the given id (deprecated,\
        \ use masterdata-method)"
      description: |
        ### Required roles
        * smom_user
        * smom_admin
      operationId: io.gec.smom.masterdata.boundary.HandlingUnitDefinitionResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandlingUnitDefinition'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_user
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
  /smartmom-svc/api/resources/handlingunits:
    get:
      tags:
      - smom handlingunits resources (private)
      summary: PRIVATE API get Handling Unit by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: handlingUnitDefinitionId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Reference to the HandlingUnitDefinition
              nullable: false
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: hasDocuments
        in: query
        description: True when the Entity has documents in the DocumentSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: singleVarietyRequired
        in: query
        description: Single Variety Required
        schema:
          type: boolean
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HandlingUnit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom handlingunits resources (private)
      summary: PRIVATE API create a new Handling Unit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandlingUnit'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandlingUnit'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/handlingunits/{id}:
    get:
      tags:
      - smom handlingunits resources (private)
      summary: PRIVATE API get the Handling Unit for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandlingUnit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom handlingunits resources (private)
      summary: PRIVATE API update a Handling Unit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandlingUnit'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandlingUnit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom handlingunits resources (private)
      summary: PRIVATE API remove the Handling Unit for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/handlingunits/{id}/serialunits:
    post:
      tags:
      - smom handlingunits resources (private)
      summary: PRIVATE API add multiple SerialUnits to the Handling Unit for the given
        id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_addSerialUnits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HandlingUnitSerialunit'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom handlingunits resources (private)
      summary: PRIVATE API remove multiple SerialUnits from the Handling Unit for
        the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_removeSerialUnits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HandlingUnitSerialunit'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/handlingunits/{id}/serialunits/history:
    get:
      tags:
      - smom handlingunits resources (private)
      summary: PRIVATE API history of all SerialUnits that have been assigned to Handling
        Unit with the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_getSerialUnitHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistorySerialunit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/handlingunits/{id}/serialunits/{serialUnitId}:
    post:
      tags:
      - smom handlingunits resources (public)
      summary: add a SerialUnit to the Handling Unit for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_addSerialUnit
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: handlingUnitPosition
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT SERIALUNIT_ALREADY_ASSIGNED_TO_GIVEN_HANDLING_UNIT* Serialunit Serialunit is already assigned to given HandlingUnit
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *HANDLING_UNIT NOT_FOUND* Handling Unit Object Not found
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *HANDLING_UNIT HANDLING_UNIT_IS_SINGLE_VARIETY_REQUIRED_SERIALUNIT_IS_NOT_MATCHING* Handling Unit Handling Unit is single variety required. Serialunit is not matching!
            * *SERIALUNIT SERIALUNIT_ALREADY_ASSIGNED_TO_ANOTHER_HANDLING_UNIT* Serialunit Serialunit is already assigned to another HandlingUnit
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom handlingunits resources (public)
      summary: remove a SerialUnit from the Handling Unit for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitResource_removeSerialUnit
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT SERIALUNIT_NOT_ASSIGNED_TO_A_HANDLINGUNIT* Serialunit Serialunit is not assigned to a HandlingUnit
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *HANDLING_UNIT NOT_FOUND* Handling Unit Object Not found
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *SERIALUNIT SERIALUNIT_NOT_ASSIGNED_TO_GIVEN_HANDLINGUNIT* Serialunit Serialunit is not assigned to given HandlingUnit
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/idgeneratorassignments/{id}:
    delete:
      tags:
      - idgenerator idgeneratorassignments resources (private)
      summary: PRIVATE API remove the IdGeneratorAssignment for the given IdGeneratorAssignmentId
      description: |
        ### Required roles
        * idgenerator_admin
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorAssignmentResource_deleteForId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of the IdGeneratorAssignment
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
  /smartmom-svc/api/resources/idgeneratorassignments/{masterDataType}/name/{masterDataName}/types/{idGeneratorTypeName}:
    get:
      tags:
      - idgenerator idgeneratorassignments resources (public)
      summary: Generate the next Id(s) for the given MasterDataName and Type
      description: |
        ### Required roles
        * idgenerator_admin
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorAssignmentResource_generateIdsByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: idGeneratorTypeName
        in: path
        description: Type of the IdGenerator
        required: true
        schema:
          type: string
      - name: masterDataName
        in: path
        description: Name of the MasterData the generator is assigned to
        required: true
        schema:
          type: string
      - name: masterDataType
        in: path
        description: Type of the MasterData the generator is assigned to
        required: true
        schema:
          $ref: '#/components/schemas/MasterDataType'
      - name: numberOfIds
        in: query
        description: Number Of Ids
        required: false
        schema:
          format: int32
          default: 1
          minimum: 1
          type: integer
      - name: organizationUnitName
        in: query
        description: |-
          Name of a OrganizationUnit. Required if
          * IdGenerator contains MasterDataComponents of type ORGANIZATION_UNIT and masterDataType is not ORGANIZATION_UNIT or
          * IdGenerator should use infos of a different organizationUnit than assignment or
          * CounterBase is ORGANIZATION_UNIT and masterDataType is not ORGANIZATION_UNIT
        schema:
          type: string
      - name: partName
        in: query
        description: |-
          Name of a Part. Required if
           * IdGenerator contains MasterDataComponents of type PART and masterDataType is not PART or WORKORDER or
          * IdGenerator should use infos of a different part than assignment or
          * CounterBase is PART and masterDataType is not PART or WORKORDER
        schema:
          type: string
      - name: workorderName
        in: query
        description: |-
          Name of a Workorder. Required if
           * IdGenerator contains MasterDataComponents of type WORKORDER and masterDataType is not WORKORDER or
          * IdGenerator should use infos of a different workorder than assignment or
          * CounterBase is WORKORDER and masterDataType is not WORKORDER
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *COUNTER_COMPONENT UNIQUE_KEY_ALREADY_EXISTS* CounterComponent There is a unique key violation, because a key defintion already exists.
        "404":
          description: |-
            Not Found

            * *COUNTER_COMPONENT NOT_FOUND* CounterComponent Object Not found
            * *DATE_TIME_COMPONENT NOT_FOUND* DateTimeComponent Object Not found
            * *ID_GENERATOR NOT_FOUND* IdGenerator Object Not found
            * *ID_GENERATOR_ASSIGNMENT NOT_FOUND* IdGeneratorAssignment Object Not found
            * *ID_GENERATOR_COMPONENT NOT_FOUND* IdGeneratorComponent Object Not found
            * *ID_GENERATOR_TYPE NOT_FOUND* IdGeneratorType Object Not found
            * *MASTER_DATA_COMPONENT NOT_FOUND* MasterDataComponent Object Not found
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *PART NOT_FOUND* Part Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *COUNTER_COMPONENT REQUIRED_VALUE_MISSING* CounterComponent A require value is missing
            * *COUNTER_COMPONENT MAXIMUM_EXCEEDED* CounterComponent Maximal value exceeded
            * *DATE_TIME_COMPONENT DATA_MISMATCH* DateTimeComponent Given Data don't match with the data in the Persistence
            * *DATE_TIME_COMPONENT ILLEGAL_ARGUMENT* DateTimeComponent A argument is not acceptable
            * *MASTER_DATA_COMPONENT REQUIRED_VALUE_MISSING* MasterDataComponent A require value is missing
            * *MASTER_DATA_COMPONENT FIELD_UNKNOWN* MasterDataComponent Field not found in masterData
            * *MASTER_DATA_COMPONENT WRONG_MASTERDATA_TYPE* MasterDataComponent Field not found in masterData
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
  /smartmom-svc/api/resources/idgeneratorassignments/{masterDataType}/{masterDataId}/idgenerators/{idGeneratorId}:
    put:
      tags:
      - idgenerator idgeneratorassignments resources (private)
      summary: PRIVATE API Update a IdGeneratorAssignment
      description: |
        ### Required roles
        * idgenerator_admin
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorAssignmentResource_updateIdGeneratorAssignment
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: idGeneratorId
        in: path
        description: Id of the IdGenerator
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: masterDataId
        in: path
        description: Id of the MasterData
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: masterDataType
        in: path
        description: Type of the MasterData
        required: true
        schema:
          $ref: '#/components/schemas/MasterDataType'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGeneratorAssignment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
    post:
      tags:
      - idgenerator idgeneratorassignments resources (private)
      summary: PRIVATE API Create a IdGeneratorAssignment
      description: |
        ### Required roles
        * idgenerator_admin
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorAssignmentResource_createIdGeneratorAssignment
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: idGeneratorId
        in: path
        description: Id of the IdGenerator
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: masterDataId
        in: path
        description: Id of the MasterData
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: masterDataType
        in: path
        description: Type of the MasterData
        required: true
        schema:
          $ref: '#/components/schemas/MasterDataType'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGeneratorAssignment'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
  /smartmom-svc/api/resources/idgeneratorassignments/{masterDataType}/{masterDataId}/types/{idGeneratorTypeName}:
    get:
      tags:
      - idgenerator idgeneratorassignments resources (private)
      summary: PRIVATE API Generate the next Id(s) for the given MasterDataId and
        Type
      description: |
        ### Required roles
        * idgenerator_admin
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorAssignmentResource_generateIds
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: idGeneratorTypeName
        in: path
        description: Type of the IdGenerator
        required: true
        schema:
          type: string
      - name: masterDataId
        in: path
        description: Id of the MasterData the generator is assigned to
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: masterDataType
        in: path
        description: Type of the MasterData the generator is assigned to
        required: true
        schema:
          $ref: '#/components/schemas/MasterDataType'
      - name: numberOfIds
        in: query
        description: Number Of Ids
        required: false
        schema:
          format: int32
          default: 1
          minimum: 1
          type: integer
      - name: organizationUnitId
        in: query
        description: |-
          Id of a OrganizationUnit. Required if
          * IdGenerator contains MasterDataComponents of type ORGANIZATION_UNIT and masterDataType is not ORGANIZATION_UNIT or
          * IdGenerator should use infos of a different organizationUnit than assignment or
          * CounterBase is ORGANIZATION_UNIT and masterDataType is not ORGANIZATION_UNIT
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partId
        in: query
        description: |-
          Id of a Part.Required if
           * IdGenerator contains MasterDataComponents of type PART and masterDataType is not PART or WORKORDER or
          * IdGenerator should use infos of a different part than assignment or
          * CounterBase is PART and masterDataType is not PART or WORKORDER
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderId
        in: query
        description: |-
          Id of a Workorder. Required if
           * IdGenerator contains MasterDataComponents of type WORKORDER and masterDataType is not WORKORDER or
          * IdGenerator should use infos of a different workorder than assignment or
          * CounterBase is WORKORDER and masterDataType is not WORKORDER
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
    delete:
      tags:
      - idgenerator idgeneratorassignments resources (private)
      summary: PRIVATE API remove the IdGeneratorAssignment for the given masterDataId
      description: |
        ### Required roles
        * idgenerator_admin
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorAssignmentResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: idGeneratorTypeName
        in: path
        description: Type of the IdGenerator
        required: true
        schema:
          type: string
      - name: masterDataId
        in: path
        description: Id of the MasterData
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: masterDataType
        in: path
        description: Type of the MasterData
        required: true
        schema:
          $ref: '#/components/schemas/MasterDataType'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
  /smartmom-svc/api/resources/idgenerators:
    get:
      tags:
      - idgenerator idgenerators resources (private)
      summary: PRIVATE API get IdGenerator by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: counterBase
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/CounterBase'
            - description: Counter of this IdGenerator will be attachted to MasterData
                of this type
              nullable: false
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: idGeneratorTypeId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Type of IdGenerator
              nullable: false
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdGenerator'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    post:
      tags:
      - idgenerator idgenerators resources (private)
      summary: PRIVATE API create a new IdGenerator
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdGenerator'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGenerator'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/idgenerators/{id}:
    get:
      tags:
      - idgenerator idgenerators resources (private)
      summary: PRIVATE API get the IdGenerator for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGenerator'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    put:
      tags:
      - idgenerator idgenerators resources (private)
      summary: PRIVATE API update a IdGenerator
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdGenerator'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGenerator'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    delete:
      tags:
      - idgenerator idgenerators resources (private)
      summary: PRIVATE API remove the IdGenerator for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/idgenerators/{id}/preview:
    get:
      tags:
      - idgenerator idgenerators resources (private)
      summary: PRIVATE API get a Preview for the IdGenerator
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorResource_preview
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreviewResult'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/idgenerators/{id}/version/{version}/archive:
    put:
      tags:
      - idgenerator idgenerators resources (private)
      summary: PRIVATE API Archive IdGenerator
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorResource_archive
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGenerator'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/idgenerators/{id}/version/{version}/release:
    put:
      tags:
      - idgenerator idgenerators resources (private)
      summary: PRIVATE API Release IdGenerator
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorResource_release
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGenerator'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/idgenerators/{id}/version/{version}/setComponents:
    put:
      tags:
      - idgenerator idgenerators resources (private)
      summary: PRIVATE API Sets the given Components to the IdGenerator
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorResource_setComponents
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdGeneratorComponents'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/idgeneratortypes:
    get:
      tags:
      - idgenerator idgeneratortypes resources (private)
      summary: PRIVATE API get IdGeneratorType by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorTypeResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdGeneratorType'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    post:
      tags:
      - idgenerator idgeneratortypes resources (private)
      summary: PRIVATE API create a new IdGeneratorType
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorTypeResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdGeneratorType'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGeneratorType'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/idgeneratortypes/{id}:
    get:
      tags:
      - idgenerator idgeneratortypes resources (private)
      summary: PRIVATE API get the IdGeneratorType for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorTypeResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGeneratorType'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    put:
      tags:
      - idgenerator idgeneratortypes resources (private)
      summary: PRIVATE API update a IdGeneratorType
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorTypeResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdGeneratorType'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGeneratorType'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    delete:
      tags:
      - idgenerator idgeneratortypes resources (private)
      summary: PRIVATE API remove the IdGeneratorType for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorTypeResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/idgeneratortypes/{id}/version/{version}/archive:
    put:
      tags:
      - idgenerator idgeneratortypes resources (private)
      summary: PRIVATE API Archive IdGeneratorType
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorTypeResource_archive
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGeneratorType'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/idgeneratortypes/{id}/version/{version}/release:
    put:
      tags:
      - idgenerator idgeneratortypes resources (private)
      summary: PRIVATE API Release IdGeneratorType
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorTypeResource_release
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGeneratorType'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/level4datas:
    get:
      tags:
      - mdc level4datas resources (private)
      summary: PRIVATE API get Level4Datas by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.Level4DataResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: level4
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Level4'
            - description: Level4
      - name: payload
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Level4Data'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc level4datas resources (private)
      summary: PRIVATE API create a new Level4Data
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.Level4DataResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level4Data'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level4Data'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/level4datas/{id}:
    get:
      tags:
      - mdc level4datas resources (private)
      summary: PRIVATE API get the Level4Data for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.Level4DataResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level4Data'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    put:
      tags:
      - mdc level4datas resources (private)
      summary: PRIVATE API update a Level4Data
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.Level4DataResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level4Data'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level4Data'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc level4datas resources (private)
      summary: PRIVATE API remove the Level4Data for the given id
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.Level4DataResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/locks/types:
    get:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API get LockType by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockTypeResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockType'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API create a new Type
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockTypeResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockType'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockType'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/locks/types/groups:
    get:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API get LockGroup by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockGroupResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: lockTypeId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the LockType
              nullable: false
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API create a new LockGroup
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockGroupResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockGroup'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockGroup'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/locks/types/groups/{id}:
    get:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API get the LockGroup for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockGroupResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API update a LockGroup
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockGroupResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockGroup'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API remove the LockGroup for the given id
      description: |
        Deletes all assigned Locks of this group and the group itself
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockGroupResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/locks/types/groups/{id}/entities:
    get:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API get all EntityLocks for the given lockGroupId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockGroupResource_list
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockEntity'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/locks/types/groups/{id}/move/{newLockGroupId}:
    put:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API Move all Entities from Lockgroup to a new Lockgroup
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockGroupResource_move
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: newLockGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockEntity'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/locks/types/restrictions/definitions:
    get:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API get all available LockRestrictions
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockTypeLockRestrictionResource_readAllRestrictions
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockRestrictionDefinition'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/locks/types/{id}:
    get:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API get the LockType for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockTypeResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockType'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API Update a LockType
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockTypeResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockType'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockType'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API Delete the Type for the given id
      description: |
        Delete is only possible, if the type is not used by any LockGroup or Lock
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockTypeResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/locks/types/{id}/restrictions:
    get:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API get the lockRestrictions for a LockType
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockTypeLockRestrictionResource_readForLockTypeId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of the lockType to which restrictions are assigned
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockTypeLockRestriction'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API Save the lockRestrications of a lockType. LockType must
        not be released.
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockTypeLockRestrictionResource_save
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of the lockType to which restrictions are to be assigned
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LockTypeLockRestriction'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockTypeLockRestriction'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/locks/types/{id}/version/{version}/release:
    put:
      tags:
      - smom locks resources (private)
      summary: PRIVATE API Release a lockType. No modifications are allowed for released
        lockTypes
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.lock.boundary.LockTypeResource_release
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockType'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/masterdatacomponents:
    get:
      tags:
      - idgenerator masterdatacomponents resources (private)
      summary: PRIVATE API get MasterDataComponent by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.MasterDataComponentResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: fillMode
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/FillMode'
            - description: "If minimal length is not reached, fill with this mode"
              default: LEFT
              nullable: false
      - name: fillWith
        in: query
        schema:
          type: array
          items:
            description: "If minimal length is not reached, fill with this string"
            default: ' '
            minLength: 1
            type: string
            nullable: false
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: masterDataField
        in: query
        schema:
          type: array
          items:
            description: Field of masterdata (e.g. name)
            type: string
            nullable: false
      - name: masterDataType
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/MasterDataType'
            - description: Type of masterdata (e.g. PART)
              nullable: false
      - name: minLength
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Minimal length of the generated ID-Part
            maximum: 1000
            minimum: 1
            type: integer
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MasterDataComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    post:
      tags:
      - idgenerator masterdatacomponents resources (private)
      summary: PRIVATE API create a new MasterDataComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.MasterDataComponentResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterDataComponent'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterDataComponent'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/masterdatacomponents/{id}:
    get:
      tags:
      - idgenerator masterdatacomponents resources (private)
      summary: PRIVATE API get the MasterDataComponent for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.MasterDataComponentResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterDataComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    put:
      tags:
      - idgenerator masterdatacomponents resources (private)
      summary: PRIVATE API update a MasterDataComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.MasterDataComponentResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterDataComponent'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterDataComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    delete:
      tags:
      - idgenerator masterdatacomponents resources (private)
      summary: PRIVATE API remove the MasterDataComponent for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.MasterDataComponentResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/masterdatacomponents/{id}/preview:
    get:
      tags:
      - idgenerator masterdatacomponents resources (private)
      summary: PRIVATE API get a Preview for the MasterDataComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.MasterDataComponentResource_preview
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewResult'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/masterdatacomponents/{id}/version/{version}/archive:
    put:
      tags:
      - idgenerator masterdatacomponents resources (private)
      summary: PRIVATE API Archive MasterDataComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.MasterDataComponentResource_archive
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterDataComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/masterdatacomponents/{id}/version/{version}/release:
    put:
      tags:
      - idgenerator masterdatacomponents resources (private)
      summary: PRIVATE API Release MasterDataComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.MasterDataComponentResource_release
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterDataComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/materialbins:
    get:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API get MaterialBin by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_readMaterialBinByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: currentQuantity
        in: query
        schema:
          type: array
          items:
            format: double
            description: "Current MaterialBin Quantity. Must be given on creation,\
              \ but should no be updated. Will be decremented by material-bookings\
              \ only."
            minimum: 0
            type: number
            nullable: false
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: lastBookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Last BookDate the MaterialBin was used for a Serialunit or
              WorkorderWorkstep-Booking
            type: string
            readOnly: true
      - name: lastMeasurementBookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Last BookDate a MeasurementBooking was done for the MaterialBin
            type: string
            readOnly: true
      - name: lockedState
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/LockedState'
            - description: if at least one lockGroup is assigned to this materialBinSection
              default: NEVER_LOCKED
              nullable: false
      - name: materialChargeId
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/UUID'
      - name: minBookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Min Booking Date of bookings for the MaterialBin. Null if
              no booking was done so far.
            type: string
            readOnly: true
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: partId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Reference to the part. Will be set to the partId of the
                materialCharge
              readOnly: true
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: producerContactId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "Reference to the producer-contact,stored in address-service."
      - name: sectionized
        in: query
        description: MaterialBin consists of multiple sections (see MaterialBinSection).
          Only set by the server when sections are added/removed
        schema:
          type: boolean
      - name: storagePlaceId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "If the materialBin is stored: ID of the storagePlace"
              readOnly: true
      - name: storagePlaceName
        in: query
        schema:
          type: array
          items:
            description: "If the materialBin is stored: Name of the storagePlace"
            type: string
            readOnly: true
      - name: supplierContactId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "Reference to the supplier-contact, stored in address-service"
      - name: totalQuantity
        in: query
        schema:
          type: array
          items:
            format: double
            description: Total MaterialBin Quantity
            minimum: 0
            type: number
            nullable: false
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBin'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API create a new MaterialBin
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_createMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialBin'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBin'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/name/{name}:
    get:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API get MaterialBin by name
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_readMaterialBinByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBin'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/sections/{sectionId}:
    get:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API get the MaterialBinSection for the given Id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_findMaterialBinSection
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: sectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBinSection'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API update MaterialBinSection
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_updateMaterialBinSection
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: sectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialBinSection'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBinSection'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API Delete the MaterialBinSection for the given Id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_deleteMaterialBinSection
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: sectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/sections/{sectionId}/lockgroups:
    get:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API get lockGroups assigned to a materialBinSection with the
        given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_readLockGroups
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: sectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API remove all assigned lockGroups from a materialBinSection
        with the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_removeAllEntityLocks
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: sectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/sections/{sectionId}/lockgroups/histories:
    get:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API get historical locks for the materialBinSection
      description: |
        Get lockGroups that were assigned in the past and then removed from the materialBinSection with the given id
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_readLockEntityHistories
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: sectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockEntityHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/sections/{sectionId}/lockgroups/{lockGroupId}:
    post:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API assign lockGroup to a materialBinSection with the given
        id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_createEntityLock
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: sectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBinSection'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API remove assignment of lockGroup from a materialBinSection
        with the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_removeEntiyLock
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: sectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/{id}:
    get:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API get the materialBin for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_readMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBin'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API update MaterialBin
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_updateMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialBin'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBin'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/{id}/lockgroups:
    get:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API get lockGroups assigned to a materialBin with the given
        id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_readLockGroups
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API remove all assigned lockGroups from a materialBin with
        the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_removeAllEntityLocks
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/{id}/lockgroups/histories:
    get:
      tags:
      - smom materialbins resources (private)
      summary: "PRIVATE API get historical locks for the materialBin, that were removed\
        \ from the materialBin"
      description: |
        Get lockGroups that were assigned in the past and then removed from the materialBin with the given id
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_readLockEntityHistories
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockEntityHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/{id}/lockgroups/{lockGroupId}:
    post:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API assign lockGroup to a materialBin with the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_createEntityLock
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBin'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API remove assignment of lockGroup from a materialBin with
        the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_removeEntiyLock
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/{id}/measurements/numeric:
    post:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API create a new MaterialBin measurement (numeric)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_createMaterialBinMeasurementBookingNumeric
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialBinMeasurementBookingNumeric'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                description: The created MaterialBinMeasurement
                required:
                - name
                - measurementUnit
                - bookDate
                - materialBinId
                - sourceType
                - partId
                - value
                type: object
                properties:
                  testboardName:
                    type: string
                  name:
                    type: string
                    nullable: false
                  measurementUnit:
                    type: string
                    nullable: false
                  bookDate:
                    format: date-time
                    type: string
                    nullable: false
                  state:
                    description: State of the measured characteristic
                    type: string
                  calculatedState:
                    type: string
                  created:
                    format: date-time
                    type: string
                    readOnly: true
                  stamp:
                    format: date-time
                    type: string
                    readOnly: true
                  materialBinId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: Measurement for materialBin with this ID
                      nullable: false
                  sourceType:
                    allOf:
                    - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
                    - nullable: false
                  materialBinSectionReference:
                    format: double
                    description: Measurement referencing a certain section of the
                      materialBin
                    type: number
                  partId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: Measurement for materialBin of part with this ID
                      nullable: false
                  organizationUnitId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: Measurement done by a organizationUnit with this
                        ID
                  value:
                    format: double
                    description: Value
                    type: number
                    nullable: false
                  minimum:
                    format: double
                    description: Minimum
                    type: number
                  maximum:
                    format: double
                    description: Maximum
                    type: number
                  nominal:
                    format: double
                    description: Nominal
                    type: number
                  tolerance:
                    format: double
                    description: Tolerance
                    type: number
                  toleranceMinimum:
                    format: double
                    description: Tolerance minimum value
                    type: number
                  toleranceMaximum:
                    format: double
                    description: Tolerance maximum value
                    type: number
                  lowerActionLimit:
                    format: double
                    description: Lower action limit value
                    type: number
                  upperActionLimit:
                    format: double
                    description: Upper action limit value
                    type: number
                  lowerScrapLimit:
                    format: double
                    description: Lower scrap limit value
                    type: number
                  upperScrapLimit:
                    format: double
                    description: Upper scrap limit value
                    type: number
                  characteristicId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ID of the Characteristic (Testplan) for this Booking
                  testboardId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ID of the SMOM-Testboard the measurement references
                        to
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/{id}/measurements/numeric/{name}:
    get:
      tags:
      - smom materialbins resources (public)
      summary: read newest MaterialBin measurements (numeric)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_getMaterialBinMeasurementBookingNumeric
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: days
        in: query
        description: Maximal number of days to be looked into the past
        schema:
          format: int32
          minimum: 1
          type: integer
      - name: limit
        in: query
        description: Maximal number of measurements to be loaded
        schema:
          format: int32
          minimum: 1
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBinMeasurementBookingNumeric'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/{id}/measurements/textual:
    post:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API create a new MaterialBin measurement (textual)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_createMaterialBinMeasurementBookingTextual
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialBinMeasurementBookingTextual'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                description: The created MaterialBinMeasurement
                required:
                - name
                - measurementUnit
                - bookDate
                - materialBinId
                - sourceType
                - partId
                - value
                type: object
                properties:
                  name:
                    type: string
                    nullable: false
                  measurementUnit:
                    type: string
                    nullable: false
                  bookDate:
                    format: date-time
                    type: string
                    nullable: false
                  state:
                    description: State of the measured characteristic
                    type: string
                  calculatedState:
                    type: string
                  created:
                    format: date-time
                    type: string
                    readOnly: true
                  stamp:
                    format: date-time
                    type: string
                    readOnly: true
                  materialBinId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: Measurement for materialBin with this ID
                      nullable: false
                  sourceType:
                    allOf:
                    - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
                    - nullable: false
                  materialBinSectionReference:
                    format: double
                    description: Measurement referencing a certain section of the
                      materialBin
                    type: number
                  partId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: Measurement for materialBin of part with this ID
                      nullable: false
                  organizationUnitId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: Measurement done by a organizationUnit with this
                        ID
                  testboardName:
                    description: Name of an external Testboard the measurement references
                      to
                    type: string
                  value:
                    description: Value
                    type: string
                    nullable: false
                  minimum:
                    description: Minimun
                    type: string
                  maximum:
                    description: Maximun
                    type: string
                  nominal:
                    description: Nominal
                    type: string
                  tolerance:
                    description: Tolerance
                    type: string
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/{id}/measurements/textual/{name}:
    get:
      tags:
      - smom materialbins resources (public)
      summary: read MaterialBin measurements (textual)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinResource_getMaterialBinMeasurementBookingTextual
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: days
        in: query
        description: Maximal number of days to be looked into the past
        schema:
          format: int32
          minimum: 1
          type: integer
      - name: limit
        in: query
        description: Maximal number of measurements to be loaded
        schema:
          format: int32
          minimum: 1
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBinMeasurementBookingTextual'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialbins/{materialBinId}/sections:
    get:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API get all Sections of a MaterialBin with the given Id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_readMaterialBinSections
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBinSection'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom materialbins resources (private)
      summary: PRIVATE API create a new MaterialBinSection
      description: |
        Create a new section for a materialbin
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinSectionResource_createMaterialBinSection
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialBinSection'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBinSection'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/materialcharges:
    get:
      tags:
      - smom materialcharges resources (private)
      summary: PRIVATE API get MaterialCharge by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_user
        * smom_admin
      operationId: io.gec.smom.smom.material.boundary.MaterialChargeResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: datecode
        in: query
        schema:
          type: array
          items:
            type: string
            nullable: false
      - name: description
        in: query
        schema:
          type: array
          items:
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            type: string
      - name: lockedState
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/LockedState'
            - description: if at least one lockGroup is assigned to this materialBinSection
              default: NEVER_LOCKED
              nullable: false
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: partId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - nullable: false
      - name: payload
        in: query
        schema:
          type: array
          items:
            type: string
      - name: producerContactId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "id of the contact of the producer of this material-charge,\
                \ stored in address-service"
              nullable: false
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialCharge'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_user
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
    post:
      tags:
      - smom materialcharges resources (private)
      summary: PRIVATE API create a new MaterialCharge
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialChargeResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialCharge'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialCharge'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
  /smartmom-svc/api/resources/materialcharges/{id}:
    get:
      tags:
      - smom materialcharges resources (private)
      summary: PRIVATE API get the MaterialCharge for the given id
      description: |
        ### Required roles
        * smom_user
        * smom_admin
      operationId: io.gec.smom.smom.material.boundary.MaterialChargeResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialCharge'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_user
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
    put:
      tags:
      - smom materialcharges resources (private)
      summary: PRIVATE API update MaterialCharge
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialChargeResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialCharge'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialCharge'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
  /smartmom-svc/api/resources/materialcharges/{id}/lockgroups:
    get:
      tags:
      - smom materialcharges resources (private)
      summary: PRIVATE API get lockGroups assigned to a materialCharge with the given
        id
      description: |
        ### Required roles
        * smom_user
        * smom_admin
      operationId: io.gec.smom.smom.material.boundary.MaterialChargeResource_readLockGroups
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_user
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
    delete:
      tags:
      - smom materialcharges resources (private)
      summary: PRIVATE API remove all assigned lockGroups from a materialCharge with
        the given id
      description: |
        ### Required roles
        * smom_user
        * smom_admin
      operationId: io.gec.smom.smom.material.boundary.MaterialChargeResource_removeAllEntityLocks
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_user
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
  /smartmom-svc/api/resources/materialcharges/{id}/lockgroups/histories:
    get:
      tags:
      - smom materialcharges resources (private)
      summary: PRIVATE API get historical locks for the materialCharge
      description: |
        Get lockGroups that were assigned in the past and then removed from the materialCharge with the given id
        ### Required roles
        * smom_user
        * smom_admin
      operationId: io.gec.smom.smom.material.boundary.MaterialChargeResource_readLockEntityHistories
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockEntityHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_user
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
  /smartmom-svc/api/resources/materialcharges/{id}/lockgroups/{lockGroupId}:
    post:
      tags:
      - smom materialcharges resources (private)
      summary: PRIVATE API assign lockGroup to a materialCharge with the given id
      description: |
        ### Required roles
        * smom_user
        * smom_admin
      operationId: io.gec.smom.smom.material.boundary.MaterialChargeResource_createEntityLock
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialCharge'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_user
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
    delete:
      tags:
      - smom materialcharges resources (private)
      summary: PRIVATE API remove assignment of lockGroup from a materialCharge with
        the given id
      description: |
        ### Required roles
        * smom_user
        * smom_admin
      operationId: io.gec.smom.smom.material.boundary.MaterialChargeResource_removeEntiyLock
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_user
        - smom_admin
      - keycloak_auth:
        - smom_user
        - smom_admin
  /smartmom-svc/api/resources/messagecategories:
    get:
      tags:
      - mdc messagecategories resources (private)
      summary: PRIVATE API get MessageCategorys by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageCategoryResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageCategory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc messagecategories resources (private)
      summary: PRIVATE API create a new MessageCategory
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageCategoryResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCategory'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageCategory'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messagecategories/{id}:
    get:
      tags:
      - mdc messagecategories resources (private)
      summary: PRIVATE API get the MessageCategory for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageCategoryResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageCategory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    put:
      tags:
      - mdc messagecategories resources (private)
      summary: PRIVATE API update a MessageCategory
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageCategoryResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCategory'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageCategory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc messagecategories resources (private)
      summary: PRIVATE API remove the MessageCategory for the given id
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageCategoryResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messageclasses:
    get:
      tags:
      - mdc messageclasses resources (private)
      summary: PRIVATE API get MessageClasss by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageClassResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageClass'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc messageclasses resources (private)
      summary: PRIVATE API create a new MessageClass
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageClassResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageClass'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageClass'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messageclasses/{id}:
    get:
      tags:
      - mdc messageclasses resources (private)
      summary: PRIVATE API get the MessageClass for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageClassResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageClass'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    put:
      tags:
      - mdc messageclasses resources (private)
      summary: PRIVATE API update a MessageClass
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageClassResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageClass'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageClass'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc messageclasses resources (private)
      summary: PRIVATE API remove the MessageClass for the given id
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageClassResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messagegroups:
    get:
      tags:
      - mdc messagegroups resources (private)
      summary: PRIVATE API get MessageGroups by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageGroupResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc messagegroups resources (private)
      summary: PRIVATE API create a new MessageGroup
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageGroupResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageGroup'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageGroup'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messagegroups/{id}:
    get:
      tags:
      - mdc messagegroups resources (private)
      summary: PRIVATE API get the MessageGroup for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageGroupResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    put:
      tags:
      - mdc messagegroups resources (private)
      summary: PRIVATE API update a MessageGroup
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageGroupResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageGroup'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc messagegroups resources (private)
      summary: PRIVATE API remove the MessageGroup for the given id
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageGroupResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messagegroups/{id}/message/{messageId}:
    put:
      tags:
      - mdc messagegroups resources (private)
      summary: PRIVATE API add a Message to MessageGroup
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageGroupResource_addMessage
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc messagegroups resources (private)
      summary: PRIVATE API remove a Message from MessageGroup
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageGroupResource_removeMessage
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messages:
    get:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API get Messages by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: cause
        in: query
        schema:
          type: array
          items:
            description: Cause
            type: string
      - name: consequence
        in: query
        schema:
          type: array
          items:
            description: Consequence
            type: string
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: messageCategoryId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the Message Category
      - name: messageClassId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the Message Class
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: priority
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Priority value
            type: integer
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API create a new Message
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messages/{id}:
    get:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API get the Message for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
    put:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API update a Message
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API remove the Message for the given id
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.MessageResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messages/{messageId}/organizationunits/{organizationUnitId}:
    put:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API confirm a message for a organizationUnit for default ItemId
        ('-')
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageResource_confirmForDefaultItem
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: confirmedInfo
        in: query
        schema:
          type: string
      - name: confirmedSince
        in: query
        schema:
          format: date-time
          default: NOW
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitMessage'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API open a message for a organizationUnit for default ItemId
        ('-')
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageResource_openForDefautlItem
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: actions
        in: query
        schema:
          type: string
      - name: equipmentName
        in: query
        schema:
          type: string
      - name: lossFactor
        in: query
        description: Lost pieces per hour while the message is not closed
        schema:
          format: double
          type: number
      - name: openSince
        in: query
        schema:
          format: date-time
          default: NOW
          type: string
      - name: responsibleUser
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitMessage'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API close a message for a organizationUnit for default ItemId
        ('-')
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageResource_closeForDefaultItem
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: closedInfo
        in: query
        schema:
          type: string
      - name: closedSince
        in: query
        schema:
          format: date-time
          default: NOW
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitMessageHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/messages/{messageId}/organizationunits/{organizationUnitId}/item/{itemId}:
    put:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API confirm a message for a organizationUnit
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageResource_confirm
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: itemId
        in: path
        required: true
        schema:
          default: "-"
          type: string
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: confirmedInfo
        in: query
        schema:
          type: string
      - name: confirmedSince
        in: query
        schema:
          format: date-time
          default: NOW
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitMessage'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API open a message for a organizationUnit
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageResource_open
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: itemId
        in: path
        required: true
        schema:
          default: "-"
          type: string
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: actions
        in: query
        schema:
          type: string
      - name: equipmentName
        in: query
        schema:
          type: string
      - name: lossFactor
        in: query
        description: Lost pieces per hour while the message is not closed
        schema:
          format: double
          type: number
      - name: openSince
        in: query
        schema:
          format: date-time
          default: NOW
          type: string
      - name: responsibleUser
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitMessage'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc messages resources (private)
      summary: PRIVATE API close a message for a organizationUnit
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageResource_close
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: itemId
        in: path
        required: true
        schema:
          default: "-"
          type: string
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: closedInfo
        in: query
        schema:
          type: string
      - name: closedSince
        in: query
        schema:
          format: date-time
          default: NOW
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitMessageHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/multipanels/{id}:
    delete:
      tags:
      - smom multipanels resources (public)
      summary: remove the Multipanel
      description: |
        Deletes the Multipanel (seperate Serialunits) and unset MultipanelId, -position in Serialunit
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.MultipanelResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MULTIPANEL NOT_FOUND* Multipanel Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/organizationunits:
    get:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API get OrganizationUnit by Filter
      description: |
        Per default only non-plant OrganizationUnits will be returned. (Use only if BookDate-Info is needed, otherwise use masterdata-method)
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: hasDocuments
        in: query
        description: True when the Entity has documents in the DocumentSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: lastBookDateProcess
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
            readOnly: true
      - name: lastBookDateSerialunit
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
            readOnly: true
      - name: lastBookDateWorkstep
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
            readOnly: true
      - name: latitude
        in: query
        schema:
          type: array
          items:
            format: double
            description: GEO-Location - Latitude
            type: number
      - name: longitude
        in: query
        schema:
          type: array
          items:
            format: double
            description: GEO-Location - Longitude
            type: number
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: parentId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "the id of the parent organizationUnit, e.g. the id of\
                \ the line for a station"
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: "State of the OrganizationUnit (IN_PROCESS, RELEASED, ARCHIVED)<BR>IN_PROCESS\
                \ is only used in Masterdata, so we will only see: RELEASED and ARCHIVED\
                \ in this Service."
              nullable: false
      - name: type
        in: query
        schema:
          type: array
          items:
            description: "Type of the OrganizationUnit. TYPES:PLANT, LINE, STATION,\
              \ ..."
            type: string
      - name: zoneId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ZoneId'
            - description: Id of the TimeZone of the station
              example: Europe/Berlin
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/conditions:
    get:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API get OrganizationUnits with booked MDC-Conditions
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionResource_getBookedOrganizationUnits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitName
        in: query
        description: "Name of the OrganizationUnit, allows wildcards"
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FirstLastOrganizationUnitBooking'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    post:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API create a new condition for an OrganizationUnit
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUnitCondition'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitCondition'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/organizationunits/conditions/condition/{conditionId}:
    put:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API Update all OrganizationUnitConditions at once
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionResource_updateMultipleConditions
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: conditionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitConditionIds
        in: query
        description: Update all OrganizationUnitConditions at once
        required: true
        schema:
          minItems: 1
          type: array
          items:
            format: uuid
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/organizationunits/conditions/{id}/condition/{conditionId}:
    put:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API update a station's Condition ConditionId
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: conditionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/organizationunits/organizationUnitName/{organizationUnitName}/workorderName/{workorderName}:
    put:
      tags:
      - smom organizationunits resources (public)
      summary: activate the organizationUnit for a workorder.
      description: |
        activates an organizationUnit for a workorder.
        *Hint*: Worksteps with State: FINISHED or NOT_READY are not activated.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_activateByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivation'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_ACTIVATION NO_VALID_WORKSTEPS_FOUND* WorkorderActivation No valid worksteps found, either the worksteps don't exists or the worksteps are finished
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *WORKORDER INVALID_STATE* Workorder State is not acceptable
            * *WORKORDER_ACTIVATION INVALID_STATE* WorkorderActivation State is not acceptable
            * *WORKORDER_WORKSTEP INVALID_STATE* WorkorderWorkstep State is not acceptable
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom organizationunits resources (public)
      summary: remove the activation of OrganizationUnits from a Workorder
      description: |
        deactivates a organizationUnit. Optional the workorder can be passed to deactivate the organizationUnit for
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_deactivateByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivationHistory'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/organizationUnitName/{organizationUnitName}/workorders:
    get:
      tags:
      - smom organizationunits resources (public)
      summary: get a List of Workorder/worksteps that are activated for the given
        OrganizationUnitId and its children
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_readByOrganizationUnitName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivation'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/registrations/currentworker:
    get:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API get all registrations at organizationUnits (stations) the
        current worker(user) is currently registered at.
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationResource_readRegistrationForCurrentWorker
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerRegistration'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/registrations/workers/{workername}:
    get:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API get the organizationUnit (stations) a worker is currently
        registered at.
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationResource_readRegistrationForWorker
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workername
        in: path
        description: "Read the station registrations for the given worker. If no workoder\
          \ is given, the current worker is used."
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerRegistration'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/{id}:
    get:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API get the OrganizationUnit for the given id
      description: |
        (Use only if BookDate-Info is needed, otherwise use masterdata-method)
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/{id}/workorders:
    get:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API get a List of Workorder/worksteps that are activated for
        the given OrganizationUnitId and its children
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_readByOrganizationUnitId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivation'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/{id}/workorders/next:
    get:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API Get the next workorder for given organizationUnitId.
      description: |
        If the id is from Type LINE all child-organization-units are used to select the next workorders. Only workorders with workorderstate (NEW OR STARTED) are returned.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitResource_readNextWorkorders
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        description: Limit the Result
        schema:
          format: int32
          type: integer
      - name: processState
        in: query
        description: "Filter for WorkorderState. Valid Values are (NEW, STARTED).\
          \ If not set explicit NEW and STARTED will be returned"
        required: false
        schema:
          $ref: '#/components/schemas/WorkorderState'
      - name: workorderName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workorder'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/{organizationUnitId}/assignment/history:
    get:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API Get the History of the Assignment
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitAssignmentResource_getHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryOrganizationUnitAssignment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/organizationunits/{organizationUnitId}/assignment/{assignmentId}:
    post:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API Create a new OrganizationUnitAssignment
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitAssignmentResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: assignmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API remove the OrganizationUnitAssignment for the given ids
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitAssignmentResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: assignmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/organizationunits/{organizationUnitId}/message/{messageId}:
    put:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API Add a Message to a OrganizationUnit
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageAssignmentResource_addMessage
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API Remove a Message from a OrganizationUnit
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageAssignmentResource_removeMessage
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/organizationunits/{organizationUnitId}/messagegroup/{messageGroupId}:
    put:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API Add all Messages of a MessageGroup to a OrganizationUnit
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageAssignmentResource_addMessageGroup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
    delete:
      tags:
      - mdc organizationunits resources (private)
      summary: PRIVATE API Remove a Message of a MessageGroup from a OrganizationUnit
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageAssignmentResource_removeMessageGroup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  ? /smartmom-svc/api/resources/organizationunits/{organizationUnitId}/workorderClusterName/{workorderClusterName}/workstepName/{workstepName}
  : put:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API activate a organizationUnit for workstep of a workorderCluster.
      description: |
        activates a organizationUnit for a workstep of a workorderCluster.
        *Hint*:  Worksteps with States: FINISHED or NOT_READY are not activated.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_activateWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivation'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API deactivate a organizationUnit for workstep of a workorderCluster.
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_deactivateWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivationHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/{organizationUnitId}/workorders/worksteps/{workstepId}:
    put:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API activate a organizationUnit for workstep of a workorder.
      description: |
        activates an organizationUnit at a workstep of a workorder.
        if the Workstep has State: FINISHED or NOT_READY a failure is returned.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_activateWorkstep
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workstepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivation'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API remove the activation of OrganizationUnits from the Workorder
      description: |
        deactivates a organizationUnit for a given workstep.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_deactivateOrganizationUnitAtWorkstep
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workstepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivationHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/{organizationUnitId}/workorders/{workorderId}:
    put:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API activate the organizationUnit for a workorder.
      description: |
        activates an organizationUnit for a workorder.
        *Hint*: Worksteps with State: FINISHED or NOT_READY are not activated.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_activate
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivation'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API remove the activation of OrganizationUnits from a Workorder
      description: |
        deactivates a organizationUnit. Optional the workorder can be passed to deactivate the organizationUnit for
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationResource_deactivate
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivationHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/{organizationUnitNameOrId}/conditions/{conditionNameOrId}:
    post:
      tags:
      - mdc organizationunits resources (public)
      summary: create a new condition for a OrganizationUnit
      description: |
        ### Required roles
        * mdc_admin
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionResource_createWithName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: conditionNameOrId
        in: path
        description: Name or UUID of the Condition
        required: true
        schema:
          type: string
      - name: organizationUnitNameOrId
        in: path
        description: Name or UUID of the OrganizationUnit
        required: true
        schema:
          type: string
      - name: bookDate
        in: query
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitCondition'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *CONDITION NOT_FOUND* Condition Object Not found
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - mdc_admin
      - keycloak_auth:
        - mdc_admin
  /smartmom-svc/api/resources/organizationunits/{organizationunitid}/registrations:
    get:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API get the registered workers for a organizationUnit. OrganizationUnit
        may be a station or a line
      description: |
        get all registered workers for the given organizationUnit. OrganizationUnit with Type station or a line or supported. When a line is given all stations of the line are read
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationResource_readRegistrationForStation
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationunitid
        in: path
        description: Id of an organizationUnit of type STATION or LINE
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerRegistration'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/{organizationunitid}/registrations/currentworker:
    post:
      tags:
      - smom organizationunits resources (private)
      summary: "PRIVATE API Register the current worker at a OrganizationUnit Type:\
        \ STATION or LINE."
      description: "Register the current worker (logged User) at a OrganizationUnit\
        \ Type: STATION or LINE.\n If a line is given then the Worker is registered\
        \ at all stations of the line.\n# Hint:\n* If the worker should be registered\
        \ at a station, but the station is already registered to him, a 406 with an\
        \ GecFailure returned \n* If the worker should be registered at a line, but\
        \ has is already registred at SOME but not all station, the already regsitered\
        \ stations are ignored, and will not be returned in the Response-List\n* If\
        \ the worker should be registered at a line, but he is already registered\
        \ at ALL stations of this line, a 406 with an GecFailure returned \n\n###\
        \ Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationResource_registerCurrentWorker
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationunitid
        in: path
        description: The unique id of a OrganizationUnit from Type STATION or LINE
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerRegistration'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom organizationunits resources (private)
      summary: "PRIVATE API Deregister the current Worker from a OrganizationUnit\
        \ Type: STATION or LINE. "
      description: |
        Deregister the current Worker(logged in User) from a OrganizationUnit Type: STATION or LINE.
        If a line is given then the worker is deregistered from all stations of the line.
        # Hint:
        * If he worker should be deregistered from a station, but has no active registered for the station, a 406 with an GecFailure returned.
        * If he worker should be deregistered from a line, but has only active registration for SOME stations of the line, the unregsitered stations are ignored, and will not be returned in the Response-List.
        * If he worker should be deregistered from a line, but no active registration for ANY stations of this line, a 406 with an GecFailure returned.

        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationResource_deregisterCurrentWorker
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationunitid
        in: path
        description: Id of a OrganizationUnit from Type STATION or LINE
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: deregisterdate
        in: query
        description: Optional DeregisterDate. When not given the current servertime
          is used. Passing a deregisterDate older than a registraterDate causes an
          exception.
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerDeregistration'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/organizationunits/{organizationunitid}/registrations/workers:
    delete:
      tags:
      - smom organizationunits resources (private)
      summary: PRIVATE API Deregister all workers from a organizationUnit
      description: |
        Deregister all workers from a organizationUnit Type: STATION or LINE.If a line is given then all workers are deregistered from all stations of the line.
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationResource_deregisterAllWorker
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationunitid
        in: path
        description: Id of a organizationUnit from Type STATION or LINE
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: deregisterdate
        in: query
        description: Optional DeregisterDate. When not given the current servertime
          is used. Passing a deregisterDate older than a registraterDate causes an
          exception
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerDeregistration'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/organizationunits/{organizationunitid}/registrations/workers/{workername}:
    post:
      tags:
      - smom organizationunits resources (private)
      summary: "PRIVATE API Register a worker from a OrganizationUnit Type: STATION\
        \ or LINE."
      description: "Register a worker from a OrganizationUnit Type: STATION or LINE.\
        \ If a line is given then the Worker is registered at all stations of the\
        \ line.\n# Hint:\n* If the worker should be registered at a station, but the\
        \ station is already registered to him, a 406 with an GecFailure returned\
        \ \n* If the worker should be registered at a line, but has is already registred\
        \ at SOME but not all station, the already regsitered stations are ignored,\
        \ and will not be returned in the Response-List\n* If the worker should be\
        \ registered at a line, but he is already registered at ALL stations of this\
        \ line, a 406 with an GecFailure returned \n\n### Required roles\n* smom_admin\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationResource_registerWorker
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationunitid
        in: path
        description: Id of a OrganizationUnit from Type STATION or LINE
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workername
        in: path
        description: Workername for deregister
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerRegistration'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
    delete:
      tags:
      - smom organizationunits resources (private)
      summary: "PRIVATE API Deregister a worker from a OrganizationUnit Type: STATION\
        \ or LINE."
      description: |
        Deregister a worker from a OrganizationUnit Type: STATION or LINE. If a line is given then the worker is deregistered from all stations of the line.
        # Hint:
        * If the worker should be deregistered from a station, but has no active registered for the station, a 406 with an GecFailure returned
        * If the worker should be deregistered from a line, but has only active registration for SOME stations of the line, the unregsitered stations are ignored, and will not be returned in the Response-List
        * If the worker should be deregistered from a line, but no active registration for ANY stations of this line, a 406 with an GecFailure returned

        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationResource_deregisterWorker
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationunitid
        in: path
        description: Id of a OrganizationUnit from Type STATION or LINE
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workername
        in: path
        description: Workername for deregister
        required: true
        schema:
          type: string
      - name: deregisterdate
        in: query
        description: Optional DeregisterDate. When not given the current servertime
          is used. Passing a deregisterDate older than a registraterDate causes an
          exception.
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerDeregistration'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/prediction-run:
    get:
      tags:
      - prediction prediction-run resources (private)
      summary: "PRIVATE API get Prediction by Filter: name, description"
      description: |
        ### Required roles
        * prediction_admin
        * prediction_user
      operationId: io.gec.smom.prediction.boundary.PredictionResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: description
        in: query
        description: Filter for Description
        schema:
          type: string
      - name: name
        in: query
        description: Filter for Name
        schema:
          type: string
      responses:
        default:
          description: Returns a List of PredictionRun for the given filter
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - prediction_admin
        - prediction_user
      - keycloak_auth:
        - prediction_admin
        - prediction_user
    post:
      tags:
      - prediction prediction-run resources (private)
      summary: PRIVATE API create a new Prediction
      description: |
        Create a new Prediction
        ### Required roles
        * prediction_admin
      operationId: io.gec.smom.prediction.boundary.PredictionResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionRun'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
        "409":
          description: "Conflict, caused by Constraint violation"
        "400":
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
      security:
      - keycloak_auth:
        - prediction_admin
      - keycloak_auth:
        - prediction_admin
  /smartmom-svc/api/resources/prediction-run/{id}:
    get:
      tags:
      - prediction prediction-run resources (private)
      summary: PRIVATE API get the PredictionRun for the given id
      description: |
        ### Required roles
        * prediction_admin
        * prediction_user
      operationId: io.gec.smom.prediction.boundary.PredictionResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "404":
          description: Not Found
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - prediction_admin
        - prediction_user
      - keycloak_auth:
        - prediction_admin
        - prediction_user
    delete:
      tags:
      - prediction prediction-run resources (private)
      summary: PRIVATE API Stop the Prediction Run
      description: |
        ### Required roles
        * prediction_admin
      operationId: io.gec.smom.prediction.boundary.PredictionResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "404":
          description: Not Found
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - prediction_admin
      - keycloak_auth:
        - prediction_admin
  /smartmom-svc/api/resources/prediction-run/{id}/result:
    get:
      tags:
      - prediction prediction-run resources (private)
      summary: PRIVATE API get the Results for a Prediction Run
      description: |
        ### Required roles
        * prediction_admin
        * prediction_user
      operationId: io.gec.smom.prediction.boundary.PredictionResource_readPredictionRunResult
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: Prediction Run Result
                required:
                - predictionRunId
                - created
                - stamp
                - type
                - typePayload
                - fromDate
                - toDate
                type: object
                properties:
                  id:
                    format: int64
                    type: integer
                  predictionRunId:
                    format: int64
                    type: integer
                    nullable: false
                  created:
                    format: date-time
                    type: string
                    nullable: false
                  stamp:
                    format: date-time
                    type: string
                    nullable: false
                  type:
                    type: string
                    nullable: false
                  typePayload:
                    type: string
                    readOnly: true
                    nullable: false
                  qtyUsed:
                    format: int64
                    type: integer
                  qtyUsedWithFailure:
                    format: int64
                    type: integer
                  qtyUsedTotal:
                    format: int64
                    type: integer
                  qtyUsedTotalWithFailure:
                    format: int64
                    type: integer
                  fromDate:
                    format: date-time
                    type: string
                    nullable: false
                  toDate:
                    format: date-time
                    type: string
                    nullable: false
                readOnly: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - prediction_admin
        - prediction_user
      - keycloak_auth:
        - prediction_admin
        - prediction_user
  ? /smartmom-svc/api/resources/serialunitbookings/multipanels/id/{id}/workstepId/{workstepId}/organizationUnitId/{organizationUnitId}/check
  : get:
      tags:
      - smom serialunitbookings resources (public)
      summary: Checks if the Serialunits of a Multipanel can be processed at an OrganizationUnit
        in a given Workstep
      description: |
        check if all Serialunits of a Multipanel can be processed at an OrganizationUnit in a given Workstep<BR/> To Identify the Multipanel, Workstep and OrganizationUnit the Id's has to be given.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingResource_checkMultipanelById
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workstepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT LOCKED* Serialunit Object is locked
                * *SERIALUNIT_BOOKING BOOK_STATE_IN_CURRENT_WORKSTEP_IS_FAIL* Booking of a Serialunit the BookState in the current workstep is FAIL
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT LOCKED* WorkorderWorkstepOrganizationUnit Object is locked
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "404":
          description: |-
            Not Found

            No Data Found for a given Parameter
            * *MULTIPANEL NOT_FOUND* Multipanel Object Not found
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that shows what was not found"
                type: object
                properties:
                  object:
                    description: The ObjectType where the failure occured
                    type: string
                    nullable: false
                  failure:
                    description: The FailureType that occured (see ResponseCodeMapping-
                      & Warning-Schema)
                    type: string
                    nullable: false
                  message:
                    description: Additonal Message of that failure
                    type: string
                    nullable: true
                  apiCallHash:
                    description: Unique identifier for logs
                    type: string
                    nullable: true
        "406":
          description: |-
            Not Acceptable

            The Check found invalid conditions
            * *SERIALUNIT INVALID_STATE* Serialunit State is not acceptable
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
          content:
            application/json:
              schema:
                description: "SerialunitCheckFailureResult Entity, that point to the\
                  \ invalid Condition"
                type: array
                items:
                  description: "Failure-Result of checkSerialunit used for Multipanel\
                    \ check, to get an individual Failure-Result for each Serialunits\
                    \ of the Panel"
                  type: object
                  properties:
                    serialunit:
                      allOf:
                      - $ref: '#/components/schemas/Serialunit'
                      - description: The Serialunit the Check founds failures for
                    failures:
                      description: List of GecFailures found during the Check of this
                        Serialunit
                      type: array
                      items:
                        $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "417":
          description: |-
            Expectation Failed

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT_BOOKING SERIALUNIT_IS_SCRAP* Booking of a Serialunit The Serialunit is booked as SCRAP
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_PREVIOUS_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for a previous mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_PREVIOUS_WORKSTEP* Booking of a Serialunit A previous workstep has an invalid bookstate
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for the last mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit Workstep has an invalid bookstate at the last mandatory Workstep
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the current Workstep reached
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_ORGANIZATIONUNIT_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the OrganizatioUnit for the current Workstep reached
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/serialunitbookings/multipanels/name/{name}/confirmationNumber/{confirmationNumber}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom serialunitbookings resources (public)
      summary: Checks if the Serialunits of a Multipanel can be processed at an OrganizationUnit
        in a given Workstep
      description: |
        check if all Serialunits of a Multipanel can be processed at an OrganizationUnit in a given Workstep. To Identify the Multipanel/Serialunit and OrganizationUnit the names has to be given, the Workstep is identified by the unique confirmationNumber.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingResource_checkMultipanelByNameAndConfirmationNumber
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: confirmationNumber
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT LOCKED* Serialunit Object is locked
                * *SERIALUNIT_BOOKING BOOK_STATE_IN_CURRENT_WORKSTEP_IS_FAIL* Booking of a Serialunit the BookState in the current workstep is FAIL
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT LOCKED* WorkorderWorkstepOrganizationUnit Object is locked
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "404":
          description: |-
            Not Found

            No Data Found for a given Parameter
            * *MULTIPANEL NOT_FOUND* Multipanel Object Not found
            * *MULTIPANEL_SERIALUNIT NOT_FOUND* Serialunit in a Multipanel Object Not found
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
          content:
            application/json:
              schema:
                description: "GecFailure, that shows what was not found"
                type: object
                properties:
                  object:
                    description: The ObjectType where the failure occured
                    type: string
                    nullable: false
                  failure:
                    description: The FailureType that occured (see ResponseCodeMapping-
                      & Warning-Schema)
                    type: string
                    nullable: false
                  message:
                    description: Additonal Message of that failure
                    type: string
                    nullable: true
                  apiCallHash:
                    description: Unique identifier for logs
                    type: string
                    nullable: true
        "406":
          description: |-
            Not Acceptable

            The Check found invalid conditions
            * *SERIALUNIT INVALID_STATE* Serialunit State is not acceptable
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
          content:
            application/json:
              schema:
                description: "SerialunitCheckFailureResult Entity, that point to the\
                  \ invalid Condition"
                type: array
                items:
                  description: "Failure-Result of checkSerialunit used for Multipanel\
                    \ check, to get an individual Failure-Result for each Serialunits\
                    \ of the Panel"
                  type: object
                  properties:
                    serialunit:
                      allOf:
                      - $ref: '#/components/schemas/Serialunit'
                      - description: The Serialunit the Check founds failures for
                    failures:
                      description: List of GecFailures found during the Check of this
                        Serialunit
                      type: array
                      items:
                        $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "417":
          description: |-
            Expectation Failed

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT_BOOKING SERIALUNIT_IS_SCRAP* Booking of a Serialunit The Serialunit is booked as SCRAP
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_PREVIOUS_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for a previous mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_PREVIOUS_WORKSTEP* Booking of a Serialunit A previous workstep has an invalid bookstate
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for the last mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit Workstep has an invalid bookstate at the last mandatory Workstep
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the current Workstep reached
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_ORGANIZATIONUNIT_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the OrganizatioUnit for the current Workstep reached
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/serialunitbookings/multipanels/name/{name}/workorderName/{workorderName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom serialunitbookings resources (public)
      summary: Checks if the Serialunits of a Multipanel can be processed at an OrganizationUnit
        in a given Workstep
      description: |
        check if all Serialunits of a Multipanel can be processed at an OrganizationUnit in a given Workstep. To Identify the Multipanel/Serialunit, Workorder, OrganizationUnit and Workstep the names has to be given.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingResource_checkMultipanelByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT LOCKED* Serialunit Object is locked
                * *SERIALUNIT_BOOKING BOOK_STATE_IN_CURRENT_WORKSTEP_IS_FAIL* Booking of a Serialunit the BookState in the current workstep is FAIL
                * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT LOCKED* WorkorderWorkstepOrganizationUnit Object is locked
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "404":
          description: |-
            Not Found

            No Data Found for a given Parameter
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that shows what was not found"
                type: object
                properties:
                  object:
                    description: The ObjectType where the failure occured
                    type: string
                    nullable: false
                  failure:
                    description: The FailureType that occured (see ResponseCodeMapping-
                      & Warning-Schema)
                    type: string
                    nullable: false
                  message:
                    description: Additonal Message of that failure
                    type: string
                    nullable: true
                  apiCallHash:
                    description: Unique identifier for logs
                    type: string
                    nullable: true
        "406":
          description: |-
            Not Acceptable

            The Check found invalid conditions
            * *SERIALUNIT INVALID_STATE* Serialunit State is not acceptable
            * *SERIALUNIT_BOOKING SERIALUNIT_IS_SCRAP* Booking of a Serialunit The Serialunit is booked as SCRAP
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_PREVIOUS_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for a previous mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_PREVIOUS_WORKSTEP* Booking of a Serialunit A previous workstep has an invalid bookstate
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for the last mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit Workstep has an invalid bookstate at the last mandatory Workstep
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the current Workstep reached
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_ORGANIZATIONUNIT_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the OrganizatioUnit for the current Workstep reached
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
          content:
            application/json:
              schema:
                description: "SerialunitCheckFailureResult Entity, that point to the\
                  \ invalid Condition"
                type: array
                items:
                  description: "Failure-Result of checkSerialunit used for Multipanel\
                    \ check, to get an individual Failure-Result for each Serialunits\
                    \ of the Panel"
                  type: object
                  properties:
                    serialunit:
                      allOf:
                      - $ref: '#/components/schemas/Serialunit'
                      - description: The Serialunit the Check founds failures for
                    failures:
                      description: List of GecFailures found during the Check of this
                        Serialunit
                      type: array
                      items:
                        $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/serialunitbookings/serialunitId/{serialunitId}/workstepId/{workstepId}/organizationUnitId/{organizationUnitId}/check
  : get:
      tags:
      - smom serialunitbookings resources (public)
      summary: Checks if a Serialunit can be processed at an OrganizationUnit in a
        given Workstep
      description: |
        check if a Serialunit can be processed at an OrganizationUnit in a given Workstep. To Identify the Serialunit, OrganizationUnit and Workstep Id's has to be given.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingResource_checkById
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workstepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT LOCKED* Serialunit Object is locked
                * *SERIALUNIT_BOOKING BOOK_STATE_IN_CURRENT_WORKSTEP_IS_FAIL* Booking of a Serialunit the BookState in the current workstep is FAIL
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "404":
          description: |-
            Not Found

            No data found for a given Parameter
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that shows what was not found"
                type: object
                properties:
                  object:
                    description: The ObjectType where the failure occured
                    type: string
                    nullable: false
                  failure:
                    description: The FailureType that occured (see ResponseCodeMapping-
                      & Warning-Schema)
                    type: string
                    nullable: false
                  message:
                    description: Additonal Message of that failure
                    type: string
                    nullable: true
                  apiCallHash:
                    description: Unique identifier for logs
                    type: string
                    nullable: true
        "406":
          description: |-
            Not Acceptable

            The Check found invalid conditions
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that point to the invalid Condition"
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "417":
          description: |-
            Expectation Failed

            * *SERIALUNIT_BOOKING SERIALUNIT_IS_SCRAP* Booking of a Serialunit The Serialunit is booked as SCRAP
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_PREVIOUS_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for a previous mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_PREVIOUS_WORKSTEP* Booking of a Serialunit A previous workstep has an invalid bookstate
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for the last mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit Workstep has an invalid bookstate at the last mandatory Workstep
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the current Workstep reached
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_ORGANIZATIONUNIT_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the OrganizatioUnit for the current Workstep reached
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/serialunitbookings/serialunitName/{serialunitName}/confirmationNumber/{confirmationNumber}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom serialunitbookings resources (public)
      summary: Checks if a Serialunit can be processed at an OrganizationUnit in a
        given Workstep
      description: |
        check if a Serialunit can be processed at an OrganizationUnit in a given Workstep. To Identify the Serialunit and OrganizationUnit the names has to be given, the Workstep is identified by the unique confirmationNumber.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingResource_checkByNameAndConfirmationNumber
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: confirmationNumber
        in: path
        required: true
        schema:
          type: string
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: serialunitName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT LOCKED* Serialunit Object is locked
                * *SERIALUNIT_BOOKING BOOK_STATE_IN_CURRENT_WORKSTEP_IS_FAIL* Booking of a Serialunit the BookState in the current workstep is FAIL
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "404":
          description: |-
            Not Found

            No Data Found for a given Parameter
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that shows what was not found"
                type: object
                properties:
                  object:
                    description: The ObjectType where the failure occured
                    type: string
                    nullable: false
                  failure:
                    description: The FailureType that occured (see ResponseCodeMapping-
                      & Warning-Schema)
                    type: string
                    nullable: false
                  message:
                    description: Additonal Message of that failure
                    type: string
                    nullable: true
                  apiCallHash:
                    description: Unique identifier for logs
                    type: string
                    nullable: true
        "406":
          description: |-
            Not Acceptable

            The Check found invalid conditions
            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that point to the invalid Condition"
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "417":
          description: |-
            Expectation Failed

            * *SERIALUNIT_BOOKING SERIALUNIT_IS_SCRAP* Booking of a Serialunit The Serialunit is booked as SCRAP
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_PREVIOUS_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for a previous mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_PREVIOUS_WORKSTEP* Booking of a Serialunit A previous workstep has an invalid bookstate
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for the last mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit Workstep has an invalid bookstate at the last mandatory Workstep
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the current Workstep reached
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_ORGANIZATIONUNIT_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the OrganizatioUnit for the current Workstep reached
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/serialunitbookings/serialunitName/{serialunitName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom serialunitbookings resources (public)
      summary: Checks if a Serialunit can be processed at an OrganizationUnit in a
        given Workstep
      description: |
        check if a Serialunit can be processed at an OrganizationUnit in a given Workstep. To Identify the Serialunit, OrganizationUnit and Workstep the names has to be given.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingResource_checkByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: serialunitName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *SERIALUNIT LOCKED* Serialunit Object is locked
                * *SERIALUNIT_BOOKING BOOK_STATE_IN_CURRENT_WORKSTEP_IS_FAIL* Booking of a Serialunit the BookState in the current workstep is FAIL
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "404":
          description: |-
            Not Found

            No Data Found for a given Parameter
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that shows what was not found"
                type: object
                properties:
                  object:
                    description: The ObjectType where the failure occured
                    type: string
                    nullable: false
                  failure:
                    description: The FailureType that occured (see ResponseCodeMapping-
                      & Warning-Schema)
                    type: string
                    nullable: false
                  message:
                    description: Additonal Message of that failure
                    type: string
                    nullable: true
                  apiCallHash:
                    description: Unique identifier for logs
                    type: string
                    nullable: true
        "406":
          description: |-
            Not Acceptable

            The Check found invalid conditions
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
          content:
            application/json:
              schema:
                description: "GecFailure Entity, that point to the invalid Condition"
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "417":
          description: |-
            Expectation Failed

            * *SERIALUNIT_BOOKING SERIALUNIT_IS_SCRAP* Booking of a Serialunit The Serialunit is booked as SCRAP
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_PREVIOUS_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for a previous mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_PREVIOUS_WORKSTEP* Booking of a Serialunit A previous workstep has an invalid bookstate
            * *SERIALUNIT_BOOKING MISSING_BOOKING_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit There is no booking for the last mandatory workstep
            * *SERIALUNIT_BOOKING INVALID_BOOKSTATE_FOR_LAST_MANDATORY_WORKSTEP* Booking of a Serialunit Workstep has an invalid bookstate at the last mandatory Workstep
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the current Workstep reached
            * *SERIALUNIT_BOOKING MAX_BOOKING_COUNT_WORKSTEP_ORGANIZATIONUNIT_REACHED* Booking of a Serialunit Maximum allowed bookings for a Serialunit at the OrganizatioUnit for the current Workstep reached
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunitbookings/{serialunitId}:
    get:
      tags:
      - smom serialunitbookings resources (public)
      summary: get the SerialunitBooking for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: bookDate
        in: query
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialunitBooking'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT_BOOKING NOT_FOUND* Booking of a Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits:
    get:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API get SerialUnit by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            type: string
      - name: handlingUnitId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the HandlingUnit
      - name: handlingUnitPosition
        in: query
        schema:
          type: array
          items:
            description: Position of a HandlingUnit. Can be null
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: hasDocuments
        in: query
        description: True when the Entity has documents in the DocumentSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            type: string
      - name: lastBookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
            example: 3000-12-13T00:00:00.0Z
      - name: lastBookState
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/SerialunitBookingState'
            - description: Last booked State of the Serialunit
              deprecated: true
      - name: lastBookWorkstepId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of last booked Workstep of the Serialunit
              deprecated: true
      - name: lockedState
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/LockedState'
            - description: if at least one lockGroup is assigned to this materialBinSection
              default: NEVER_LOCKED
              nullable: false
      - name: mergeDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Date when the Serialunit was Merged
            type: string
      - name: mergeLocation
        in: query
        schema:
          type: array
          items:
            description: BOM-Location of the Parent-BOM the Merge is done for
            type: string
      - name: mergeOrganizationUnitId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: OrganizationUnitId who has done the merge of this serialunit
      - name: minBookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Minimum Bookdate of the Serialunit. May be null if no booking
              done so far.
            type: string
      - name: multipanelId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of a Multipanel the Serialunit is part of. Only set
                if the Serialunit is part of a Multipanel
              nullable: true
      - name: multipanelPosition
        in: query
        schema:
          type: array
          items:
            description: Position of the Serialunit in a Multipanel. Only set if the
              Serialunit is part of a Multipanel
            type: string
            nullable: true
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: parent
        in: query
        description: If true the serialunit has merged (Child)Serilaunits
        schema:
          type: boolean
      - name: parentSerialunitId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the ParentSerialunit when merged. Null if not merged
      - name: partId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the Part
      - name: payload
        in: query
        schema:
          type: array
          items:
            type: string
      - name: storagePlaceId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the StoragePlace. Is set when the MaterialBin is
                stored via Storage Service
      - name: storagePlaceName
        in: query
        schema:
          type: array
          items:
            description: Name of the StoragePlace. Is set when the MaterialBin is
              stored via Storage Service
            type: string
      - name: unitState
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SerialunitState'
      - name: workorderId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the Workorder
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Serialunit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits/merges/{id}:
    delete:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API Unmerge a Serialunit from its ParentSerialunit
      description: |
        Unmerge a Serialunit from its ParentSerialunit. The Serialunit knows its Parent, so no ParentSerialunit is required for unmerge.
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitMergeResource_unmergeSerialunit
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of the Serialunit that should be unmerged from its ParentSerialunit
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: comment
        in: query
        description: Comment for the Unmerge (Optional)
        schema:
          type: string
      - name: organizationUnitId
        in: query
        description: "Id of the OrganizationUnit unmerging the Serialunits. Any OrganizationUnit\
          \ can be used, its not verified against the Workplan"
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/serialunits/{id}:
    get:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API get the serialUnit for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serialunit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits/{id}/lockgroups:
    get:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API get lockGroups assigned to a serialUnit with the given
        id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_readLockGroups
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API remove all assigned lockGroups from a serialUnit with the
        given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_removeAllEntityLocks
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits/{id}/lockgroups/histories:
    get:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API get historical locks for the serialunit
      description: |
        Get lockGroups that were assigned in the past and then removed from the serialUnit with the given id
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_readLockEntityHistories
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LockEntityHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits/{id}/lockgroups/{lockGroupId}:
    post:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API assign lockGroup to a serialUnit with the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_createEntityLock
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serialunit'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API remove assignment of lockGroup from a serialUnit with the
        given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_removeEntiyLock
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits/{id}/reservednumbers:
    post:
      tags:
      - smom serialunits resources (public)
      summary: Create reserved numbers for a serialunit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_createReservedNumbers
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SerialunitReservedNumber'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitReservedNumber'
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits/{id}/reservednumbers/history:
    get:
      tags:
      - smom serialunits resources (public)
      summary: Get history of reserved numbers for a serialunit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_getReservedNumberHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistorySerialunitReservedNumber'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits/{id}/reservednumbers/{reservedNumberId}:
    put:
      tags:
      - smom serialunits resources (public)
      summary: Update reserved number for a serialunit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_updateReservedNumber
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: reservedNumberId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialunitReservedNumber'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialunitReservedNumber'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT_RESERVED_NUMBER NOT_FOUND* Reserved number for a Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *SERIALUNIT ID_MISMATCH* Serialunit Id in path and id in body don't match
            * *SERIALUNIT_RESERVED_NUMBER ID_MISMATCH* Reserved number for a Serialunit Id in path and id in body don't match
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom serialunits resources (public)
      summary: Remove reserved number for a serialunit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_deleteReservedNumber
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: reservedNumberId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *SERIALUNIT_RESERVED_NUMBER NOT_FOUND* Reserved number for a Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *SERIALUNIT ID_MISMATCH* Serialunit Id in path and id in body don't match
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits/{id}/state/{newState}:
    put:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API Updates the state of the Serialunit to the given State
      description: |
        Following State-swtches are allowed:</BR> * NEW => INPROCESS, FINISHED</BR>* INPROCESS => FINISHED</BR>* FINISHED => INPROCESS</BR>MERGED and FINISHED_SCRAP are only set and switched internally via the uploadBookings
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitResource_updateSerialunitState
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: newState
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SerialunitState'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serialunit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/serialunits/{parentSerialunitId}/merges/{serialunitId}:
    post:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API merge a Serialunit in a ParentSerialunit
      description: |
        Merge a Serialunit in a ParentSerialunit. Both Serialunit and ParentSerialunit are required for merge.
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitMergeResource_mergeSerialunit
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: parentSerialunitId
        in: path
        description: Id of the Parent-Serialunit the Serialunit should be merged in
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        description: Id of the Serialunit that should be merged into a ParentSerialunit
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: location
        in: query
        description: "Location in the Parent-BOM the Serialunit that should be merged\
          \ for. When given the Location should be Part of the Parent-Bom, only validated\
          \ in checkMerge"
        schema:
          type: string
      - name: organizationUnitId
        in: query
        description: "Id of the OrganizationUnit that merged the Serialunit (Optional).\
          \ Any OrganizationUnit can be used, its not verified against the Workplan"
        required: false
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serialunit'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/serialunits/{parentSerialunitId}/merges/{serialunitId}/check:
    get:
      tags:
      - smom serialunits resources (private)
      summary: PRIVATE API checks if a merge of a Serialunit in a ParentSerialunit
        is valid
      description: |
        Checks if a Serialunit can be merged into a ParentSerialunit. Both Serialunit and ParentSerialunit are required to check the Merge.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitMergeResource_checkMerge
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: parentSerialunitId
        in: path
        description: Id of the Parent-Serialunit the Serialunit should be merged in
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        description: Id of the Serialunit that should be merged into a ParentSerialunit
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: location
        in: query
        description: "Location in the Parent-BOM the Serialunit that should be merged\
          \ for. When given the Location has to be Part of the Parent-Bom, and the\
          \ Location should not be merged already"
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "406":
          description: Not Found
          content: {}
        "404":
          description: Not Found
          content: {}
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/setups/equipments/equipmentName/{equipmentName}:
    delete:
      tags:
      - smom setups resources (public)
      summary: Remove setup for the Equipment
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.OrganizationUnitEquipmentSetupResource_removeSetupEquipment
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *ORGANIZATION_UNIT_EQUIPMENT_SETUP NOT_FOUND* Equipment Setup for a OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/setups/equipments/equipmentName/{equipmentName}/check:
    get:
      tags:
      - smom setups resources (public)
      summary: Check if Equipment is valid for setup
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.OrganizationUnitEquipmentSetupResource_check
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *EQUIPMENT INSUFFICIENT_QUANTITY* Equipment Insufficient quantity, not usable
            * *EQUIPMENT LOCKED* Equipment Object is locked
            * *EQUIPMENT STORED* Equipment Object is stored in
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/equipments/equipmentName/{equipmentName}/organizationUnitName/{organizationUnitName}/setupPosition/{setupPosition}
  : put:
      tags:
      - smom setups resources (public)
      summary: Setup the given Equipment at the given Position on the OrganizationUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.OrganizationUnitEquipmentSetupResource_setupEquipment
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentName
        in: path
        required: true
        schema:
          type: string
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: setupPosition
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *EQUIPMENT SETUP* Equipment the given Object is set up
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitEquipmentSetup'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *EQUIPMENT STORED* Equipment Object is stored in
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/equipments/workorderClusterName/{workorderClusterName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}
  : put:
      tags:
      - smom setups resources (public)
      summary: "Activate Setup for the given given WorkorderCluster, at given Workstep\
        \ and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.WorkorderEquipmentSetupResource_activateSetupForWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Return the WorkorderEquipmentSetup Entities
          content:
            application/json:
              schema:
                description: WorkorderEquipmentSetup Entity
                type: array
                items:
                  required:
                  - equipmentId
                  - organizationUnitId
                  - workorderWorkstepId
                  - validFrom
                  - validTo
                  - workorderId
                  type: object
                  properties:
                    id:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - description: "Unique Identifier of the entity. Required for\
                          \ updates. Generated on server-side, must not be given in\
                          \ creates."
                    stamp:
                      format: date-time
                      description: Date of last change
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    created:
                      format: date-time
                      description: Date of creation
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    version:
                      format: int64
                      description: "Internal version of the entity, used for optimistic\
                        \ locking. Required for updates. Generated on server-side,\
                        \ must not be given in creates."
                      type: integer
                    equipmentId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    organizationUnitId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    setupPosition:
                      description: SetupPosition
                      type: string
                    workorderWorkstepId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    validFrom:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    validTo:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    workorderId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT INSUFFICIENT_QUANTITY* Equipment Insufficient quantity, not usable
            * *EQUIPMENT LOCKED* Equipment Object is locked
            * *ORGANIZATION_UNIT_EQUIPMENT_SETUP NOT_FOUND* Equipment Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_CLUSTER NOT_FOUND* Cluster of workorders Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom setups resources (public)
      summary: "Deactivate Setup for the given WorkorderCluster, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.WorkorderEquipmentSetupResource_deactivateSetupForWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_CLUSTER NOT_FOUND* Cluster of workorders Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/equipments/workorderClusterName/{workorderClusterName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom setups resources (public)
      summary: "Check Setup for the given WorkorderCluster, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.WorkorderEquipmentSetupResource_checkSetupForWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT INSUFFICIENT_QUANTITY* Equipment Insufficient quantity, not usable
            * *EQUIPMENT LOCKED* Equipment Object is locked
            * *ORGANIZATION_UNIT_EQUIPMENT_SETUP NOT_FOUND* Equipment Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_CLUSTER NOT_FOUND* Cluster of workorders Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/equipments/workorderName/{workorderName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}
  : put:
      tags:
      - smom setups resources (public)
      summary: "Activate Setup for the given Workorder, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.WorkorderEquipmentSetupResource_activateSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Return the WorkorderEquipmentSetup Entity
          content:
            application/json:
              schema:
                description: WorkorderEquipmentSetup Entity
                type: array
                items:
                  required:
                  - equipmentId
                  - organizationUnitId
                  - workorderWorkstepId
                  - validFrom
                  - validTo
                  - workorderId
                  type: object
                  properties:
                    id:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - description: "Unique Identifier of the entity. Required for\
                          \ updates. Generated on server-side, must not be given in\
                          \ creates."
                    stamp:
                      format: date-time
                      description: Date of last change
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    created:
                      format: date-time
                      description: Date of creation
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    version:
                      format: int64
                      description: "Internal version of the entity, used for optimistic\
                        \ locking. Required for updates. Generated on server-side,\
                        \ must not be given in creates."
                      type: integer
                    equipmentId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    organizationUnitId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    setupPosition:
                      description: SetupPosition
                      type: string
                    workorderWorkstepId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    validFrom:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    validTo:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    workorderId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT INSUFFICIENT_QUANTITY* Equipment Insufficient quantity, not usable
            * *EQUIPMENT LOCKED* Equipment Object is locked
            * *ORGANIZATION_UNIT_EQUIPMENT_SETUP NOT_FOUND* Equipment Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom setups resources (public)
      summary: "Deactivate Setup for the given Workorder, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.WorkorderEquipmentSetupResource_deactivateSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/equipments/workorderName/{workorderName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom setups resources (public)
      summary: "Check Setup for the given Workorder, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.WorkorderEquipmentSetupResource_checkSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *EQUIPMENT INSUFFICIENT_QUANTITY* Equipment Insufficient quantity, not usable
            * *EQUIPMENT LOCKED* Equipment Object is locked
            * *ORGANIZATION_UNIT_EQUIPMENT_SETUP NOT_FOUND* Equipment Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/setups/materialBinName/{materialBinName}:
    delete:
      tags:
      - smom setups resources (public)
      summary: 'Delete OrganizationUnitMaterialBinSetup '
      description: |
        Please use /resources/setups/materialbins/XXXX instead. Remove setup for the MaterialBin at the given Position on the OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitMaterialBinSetupResource_deprecatedRemoveSetupMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/setups/materialBinName/{materialBinName}/check:
    get:
      tags:
      - smom setups resources (public)
      description: |
        Please use /resources/setups/materialbins/XXXX instead. Check if MaterialBin is valid for setup
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitMaterialBinSetupResource_deprecatedCheck
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_BIN STORED* MaterialBin Object is stored in
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/materialBinName/{materialBinName}/organizationUnitName/{organizationUnitName}/setupPosition/{setupPosition}
  : put:
      tags:
      - smom setups resources (public)
      description: |
        Please use /resources/setups/materialbins/XXXX instead. Setup the given MaterialBin at the given Position on the OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitMaterialBinSetupResource_deprecatedSetupMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinName
        in: path
        required: true
        schema:
          type: string
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: setupPosition
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *MATERIAL_BIN SETUP* MaterialBin the given Object is set up
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitMaterialBinSetup'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *MATERIAL_BIN STORED* MaterialBin Object is stored in
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/setups/materialbins/materialBinName/{materialBinName}:
    delete:
      tags:
      - smom setups resources (public)
      summary: Remove setup for the MaterialBin
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitMaterialBinSetupResource_removeSetupMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/setups/materialbins/materialBinName/{materialBinName}/check:
    get:
      tags:
      - smom setups resources (public)
      summary: Check if MaterialBin is valid for setup
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitMaterialBinSetupResource_check
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_BIN STORED* MaterialBin Object is stored in
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/materialbins/materialBinName/{materialBinName}/organizationUnitName/{organizationUnitName}/setupPosition/{setupPosition}
  : put:
      tags:
      - smom setups resources (public)
      summary: Setup the given MaterialBin at the given Position on the OrganizationUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitMaterialBinSetupResource_setupMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinName
        in: path
        required: true
        schema:
          type: string
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: setupPosition
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *MATERIAL_BIN SETUP* MaterialBin the given Object is set up
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitMaterialBinSetup'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *MATERIAL_BIN STORED* MaterialBin Object is stored in
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/materialbins/workorderClusterName/{workorderClusterName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}
  : put:
      tags:
      - smom setups resources (public)
      summary: "Activate Setup for the given given WorkorderCluster, at given Workstep\
        \ and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_activateSetupForWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Return the WorkorderMaterialBinSetup Entities
          content:
            application/json:
              schema:
                description: WorkorderMaterialBinSetup Entity
                type: array
                items:
                  required:
                  - materialBinId
                  - organizationUnitId
                  - workorderWorkstepId
                  - validFrom
                  - validTo
                  - workorderId
                  type: object
                  properties:
                    id:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - description: "Unique Identifier of the entity. Required for\
                          \ updates. Generated on server-side, must not be given in\
                          \ creates."
                    stamp:
                      format: date-time
                      description: Date of last change
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    created:
                      format: date-time
                      description: Date of creation
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    version:
                      format: int64
                      description: "Internal version of the entity, used for optimistic\
                        \ locking. Required for updates. Generated on server-side,\
                        \ must not be given in creates."
                      type: integer
                    materialBinId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    organizationUnitId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    setupPosition:
                      description: SetupPosition
                      type: string
                    workorderWorkstepId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    validFrom:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    validTo:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    workorderId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_CLUSTER NOT_FOUND* Cluster of workorders Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom setups resources (public)
      summary: "Deactivate Setup for the given WorkorderCluster, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_deactivateSetupForWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_CLUSTER NOT_FOUND* Cluster of workorders Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/materialbins/workorderClusterName/{workorderClusterName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom setups resources (public)
      summary: "Check Setup for the given WorkorderCluster, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_checkSetupForWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_CLUSTER NOT_FOUND* Cluster of workorders Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/materialbins/workorderName/{workorderName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}
  : put:
      tags:
      - smom setups resources (public)
      summary: "Activate Setup for the given Workorder, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_activateSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Return the WorkorderMaterialBinSetup Entity
          content:
            application/json:
              schema:
                description: WorkorderMaterialBinSetup Entity
                type: array
                items:
                  required:
                  - materialBinId
                  - organizationUnitId
                  - workorderWorkstepId
                  - validFrom
                  - validTo
                  - workorderId
                  type: object
                  properties:
                    id:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - description: "Unique Identifier of the entity. Required for\
                          \ updates. Generated on server-side, must not be given in\
                          \ creates."
                    stamp:
                      format: date-time
                      description: Date of last change
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    created:
                      format: date-time
                      description: Date of creation
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    version:
                      format: int64
                      description: "Internal version of the entity, used for optimistic\
                        \ locking. Required for updates. Generated on server-side,\
                        \ must not be given in creates."
                      type: integer
                    materialBinId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    organizationUnitId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    setupPosition:
                      description: SetupPosition
                      type: string
                    workorderWorkstepId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    validFrom:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    validTo:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    workorderId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom setups resources (public)
      summary: "Deactivate Setup for the given Workorder, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_deactivateSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/materialbins/workorderName/{workorderName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom setups resources (public)
      summary: "Check Setup for the given Workorder, Workstep and OrganizationUnit"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_checkSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/workorderClusterName/{workorderClusterName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}
  : put:
      tags:
      - smom setups resources (public)
      description: |
        Please use /resources/setups/materialbins/XXXX instead. Activate Setup for the given given WorkorderCluster, at given Workstep and OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_deprecatedActivateSetupForWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Return the WorkorderMaterialBinSetup Entities
          content:
            application/json:
              schema:
                description: WorkorderMaterialBinSetup Entity
                type: array
                items:
                  required:
                  - materialBinId
                  - organizationUnitId
                  - workorderWorkstepId
                  - validFrom
                  - validTo
                  - workorderId
                  type: object
                  properties:
                    id:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - description: "Unique Identifier of the entity. Required for\
                          \ updates. Generated on server-side, must not be given in\
                          \ creates."
                    stamp:
                      format: date-time
                      description: Date of last change
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    created:
                      format: date-time
                      description: Date of creation
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    version:
                      format: int64
                      description: "Internal version of the entity, used for optimistic\
                        \ locking. Required for updates. Generated on server-side,\
                        \ must not be given in creates."
                      type: integer
                    materialBinId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    organizationUnitId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    setupPosition:
                      description: SetupPosition
                      type: string
                    workorderWorkstepId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    validFrom:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    validTo:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    workorderId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_CLUSTER NOT_FOUND* Cluster of workorders Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom setups resources (public)
      summary: 'Delete WorkorderMaterialBinSetup '
      description: |
        Please use /resources/setups/materialbins/XXXX instead. Deactivate Setup for the given WorkorderCluster, Workstep and OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_deprecatedDeactivateSetupForWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_CLUSTER NOT_FOUND* Cluster of workorders Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/workorderClusterName/{workorderClusterName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom setups resources (public)
      description: |
        Please use /resources/setups/materialbins/XXXX instead. Check Setup for the given WorkorderCluster, Workstep and OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_deprecatedCheckSetupForWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderClusterName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER_CLUSTER NOT_FOUND* Cluster of workorders Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/workorderName/{workorderName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}
  : put:
      tags:
      - smom setups resources (public)
      description: |
        Please use /resources/setups/materialbins/XXXX instead. Activate Setup for the given Workorder, Workstep and OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_deprecatedActivateSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Return the WorkorderMaterialBinSetup Entity
          content:
            application/json:
              schema:
                description: WorkorderMaterialBinSetup Entity
                type: array
                items:
                  required:
                  - materialBinId
                  - organizationUnitId
                  - workorderWorkstepId
                  - validFrom
                  - validTo
                  - workorderId
                  type: object
                  properties:
                    id:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - description: "Unique Identifier of the entity. Required for\
                          \ updates. Generated on server-side, must not be given in\
                          \ creates."
                    stamp:
                      format: date-time
                      description: Date of last change
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    created:
                      format: date-time
                      description: Date of creation
                      type: string
                      readOnly: true
                      example: 1970-01-01T00:00:00.0Z
                    version:
                      format: int64
                      description: "Internal version of the entity, used for optimistic\
                        \ locking. Required for updates. Generated on server-side,\
                        \ must not be given in creates."
                      type: integer
                    materialBinId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    organizationUnitId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    setupPosition:
                      description: SetupPosition
                      type: string
                    workorderWorkstepId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
                    validFrom:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    validTo:
                      format: date-time
                      type: string
                      readOnly: true
                      nullable: false
                    workorderId:
                      allOf:
                      - $ref: '#/components/schemas/UUID'
                      - nullable: false
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom setups resources (public)
      summary: 'Delete WorkorderMaterialBinSetup '
      description: |
        Please use /resources/setups/materialbins/XXXX instead. Deactivate Setup for the given Workorder, Workstep and OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_deprecatedDeactivateSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/resources/setups/workorderName/{workorderName}/workstepName/{workstepName}/organizationUnitName/{organizationUnitName}/check
  : get:
      tags:
      - smom setups resources (public)
      description: |
        Please use /resources/setups/materialbins/XXXX instead. Check Setup for the given Workorder, Workstep and OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupResource_deprecatedCheckSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *PART NOT_REQUIRED* Part the given Object is not required
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: |-
            Expectation Failed

            If the Setup Check is not successfull
            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *MATERIAL_BIN INSUFFICIENT_QUANTITY* MaterialBin Insufficient quantity, not usable
            * *MATERIAL_BIN LOCKED* MaterialBin Object is locked
            * *MATERIAL_CHARGE LOCKED* MaterialCharge Object is locked
            * *ORGANIZATIONUNIT_MATERIAL_BIN_SETUP NOT_FOUND* Material Setup for a OrganizationUnit Object Not found
          content:
            application/json:
              schema:
                description: GecFailure Entity
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *WORKORDER_WORKSTEP_ORGANIZATIONUNIT NOT_FOUND* WorkorderWorkstepOrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/smtequipments/name/{name}:
    get:
      tags:
      - smom smtequipments resources (private)
      summary: PRIVATE API get smtEquipment for name
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentResource_readByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtEquipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/smtequipments/{id}:
    get:
      tags:
      - smom smtequipments resources (private)
      summary: PRIVATE API get the smtEquipment for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtEquipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/smtequipments/{id}/correlation:
    get:
      tags:
      - smom smtequipments resources (private)
      summary: PRIVATE API Correlations for equipment
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentResource_getEquipmentCorrelations
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: dateLimit
        in: query
        schema:
          format: int32
          type: integer
      - name: failuresOnly
        in: query
        schema:
          type: boolean
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialLimit
        in: query
        schema:
          format: int32
          type: integer
      - name: withPseudo
        in: query
        schema:
          type: boolean
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtEquipmentCorrelation'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/smtequipments/{id}/lastBooking:
    get:
      tags:
      - smom smtequipments resources (private)
      summary: PRIVATE API get the latest SerialunitSmtEquipmentBooking done with
        the given smtEquipmentId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentResource_getLastBooking
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialunitSmtEquipmentBooking'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/smtequipments/{id}/lastOrganizationUnit:
    get:
      tags:
      - smom smtequipments resources (private)
      summary: PRIVATE API Get the station that has done the latest SerialunitSmtEquipmentBooking
        done with the given smtEquipmentId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentResource_getLastStation
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/summarizeddurations/{organizationUnitId}/level2:
    get:
      tags:
      - mdc summarizeddurations resources (private)
      summary: PRIVATE API get summarized Level2-Durations for OrgUnit and Timespan
      description: |
        ### Required roles
        * kpi_user
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.SummarizedDurationResource_getSummarizedDurationLevel2
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  format: duration
                  type: string
                  example: P1D
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - kpi_user
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - kpi_user
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/resources/summarizeddurations/{organizationUnitId}/level4:
    get:
      tags:
      - mdc summarizeddurations resources (private)
      summary: PRIVATE API get summarized Level4-Durations for OrgUnit and Timespan
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.SummarizedDurationResource_getSummarizedDurationLevel4
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  format: duration
                  type: string
                  example: P1D
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/resources/textcomponents:
    get:
      tags:
      - idgenerator textcomponents resources (private)
      summary: PRIVATE API get TextComponent by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.TextComponentResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: fillMode
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/FillMode'
            - description: "If minimal length is not reached, fill with this mode"
              default: LEFT
              nullable: false
      - name: fillWith
        in: query
        schema:
          type: array
          items:
            description: "If minimal length is not reached, fill with this string"
            default: ' '
            minLength: 1
            type: string
            nullable: false
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: minLength
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Minimal length of the generated ID-Part
            maximum: 1000
            minimum: 1
            type: integer
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: text
        in: query
        schema:
          type: array
          items:
            description: Text to use as part of the generated ID
            type: string
            nullable: false
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TextComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    post:
      tags:
      - idgenerator textcomponents resources (private)
      summary: PRIVATE API create a new TextComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.TextComponentResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextComponent'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextComponent'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/textcomponents/{id}:
    get:
      tags:
      - idgenerator textcomponents resources (private)
      summary: PRIVATE API get the TextComponent for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.TextComponentResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    put:
      tags:
      - idgenerator textcomponents resources (private)
      summary: PRIVATE API update a TextComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.TextComponentResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextComponent'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
    delete:
      tags:
      - idgenerator textcomponents resources (private)
      summary: PRIVATE API remove the TextComponent for the given id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.TextComponentResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/textcomponents/{id}/preview:
    get:
      tags:
      - idgenerator textcomponents resources (private)
      summary: PRIVATE API get a Preview for the TextComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.TextComponentResource_preview
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of the TextComponent for Preview
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewResult'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/textcomponents/{id}/version/{version}/archive:
    put:
      tags:
      - idgenerator textcomponents resources (private)
      summary: PRIVATE API Archive TextComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.TextComponentResource_archive
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/textcomponents/{id}/version/{version}/release:
    put:
      tags:
      - idgenerator textcomponents resources (private)
      summary: PRIVATE API Release TextComponent
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.TextComponentResource_release
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextComponent'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/resources/units:
    get:
      tags:
      - masterdata units resources (private)
      summary: "PRIVATE API get Unit by Filter (deprecated, use masterdata-method)"
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.masterdata.boundary.UnitResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/units/name/{name}:
    get:
      tags:
      - masterdata units resources (private)
      summary: "PRIVATE API get Unit for a unique name (deprecated, use masterdata-method)"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.masterdata.boundary.UnitResource_readByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/units/{id}:
    get:
      tags:
      - masterdata units resources (private)
      summary: "PRIVATE API get the Unit for the given id (deprecated, use masterdata-method)"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.masterdata.boundary.UnitResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderclusters:
    get:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API get workorderCluster by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: finished
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
            readOnly: true
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: hasDocuments
        in: query
        description: True when the Entity has documents in the DocumentSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: items
        in: query
        schema:
          type: array
          items:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/WorkorderClusterItem'
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: plannedEndDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
      - name: plannedStartDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
      - name: processState
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/WorkorderClusterProcessState'
            - readOnly: true
      - name: quantity
        in: query
        schema:
          type: array
          items:
            format: double
            minimum: 1
            type: number
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: started
        in: query
        schema:
          type: array
          items:
            format: date-time
            type: string
            readOnly: true
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderCluster'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API Create a new WorkorderCluster
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderCluster'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderCluster'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderclusters/name/{name}:
    get:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API get WorkorderCluster for a unique name
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_readByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderCluster'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderclusters/{id}:
    get:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API get the workorderCluster for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderCluster'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API update workorderCluster
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderCluster'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderCluster'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderclusters/{id}/downloadSerialunits:
    get:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API Get all SerialUnits for a given WorkorderClusterId as Plain
        Text (CSV)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_downloadSerialUnits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            text/plain: {}
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderclusters/{id}/state/finished:
    put:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API set the WorkorderCluster state to finished
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_setStateToFinished
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderCluster'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderclusters/{id}/state/started:
    put:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API set the WorkorderCluster state to started
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_setStateToStarted
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderCluster'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderclusters/{id}/version/{version}/archive:
    put:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API Archive workorderCluster
      description: |
        Archive an existing workorderCluster
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_archive
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        description: DB-Version of the WorkorderCluster
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderCluster'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderclusters/{id}/version/{version}/release:
    put:
      tags:
      - smom workorderclusters resources (private)
      summary: PRIVATE API Release workorderCluster
      description: |
        Release an existing workorderCluster, up front a consistency check is done
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterResource_release
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        description: DB-Version of the WorkorderCluster
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderCluster'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorders:
    get:
      tags:
      - smom workorders resources (private)
      summary: PRIVATE API get Workorder by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: autoFinishComment
        in: query
        schema:
          type: array
          items:
            description: "Finish Comment, is set when the workorder is automatically\
              \ set to finished, based on the FINISH_MODE (Updatable when released)"
            type: string
            readOnly: true
      - name: bomErpVersion
        in: query
        schema:
          type: array
          items:
            type: string
      - name: bomName
        in: query
        schema:
          type: array
          items:
            description: "On release of the workorder: If no bomItems defined for\
              \ this workorder, the bom with given name an erpVersion will be fetched\
              \ from masterdata and it's definition copied."
            type: string
      - name: customerContactId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the CustomerContact
      - name: deliveryDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Delivery date of the Workorder (Updatable when released)
            type: string
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: endDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: "EndDate of the Workorder, is implicit set when a workorder\
              \ is set to finished (Updatable when released)"
            type: string
            readOnly: true
      - name: erpState
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderErpState'
      - name: finishMode
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderFinishMode'
      - name: firstWorkstepId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the first mandatory workstep in the workorder (Updatable
                when released)
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: hasDocuments
        in: query
        description: True when the Entity has documents in the DocumentSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: lastBookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Date of the last booking done for the workorder
            type: string
            readOnly: true
      - name: lastWorkstepId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the last/final mandatory workstep in the workorder
                (Updatable when released)
      - name: locked
        in: query
        description: "When true, Workorder is locked"
        schema:
          type: boolean
      - name: masterBomId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the MasterBom
      - name: masterWorkplanId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the MasterWorkplan
      - name: minBookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Min BookDate of the Workorder. Null if no booking has been
              done so far.
            type: string
            readOnly: true
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: numberOfBoards
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Number of Units that are produced in one cycle (e.g. PCB
              with 4 Positions)
            minimum: 1
            type: integer
            nullable: false
      - name: orderSequenceNumber
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Order sequence number of the workorder (Updatable when released)
            type: integer
      - name: parentWorkorderName
        in: query
        schema:
          type: array
          items:
            description: Name of parent workorder (Updatable when released)
            type: string
      - name: partId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the Product-Part that should be build with that Workorder
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: plannedDeliveryDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: planned delivery-date of the Workorder (Updatable when released)
            type: string
      - name: plannedEndDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Planned end-date of the Workorder (Updatable when released)
            type: string
      - name: plannedStartDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Planned start-date of the Workorder (Updatable when released)
            type: string
      - name: prevProcessState
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/WorkorderState'
            - description: previous process state (Updatable when released)
              readOnly: true
      - name: priorityCode
        in: query
        schema:
          type: array
          items:
            description: Priority of the workorder (Updatable when released)
            type: string
      - name: processState
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderState'
      - name: productionController
        in: query
        schema:
          type: array
          items:
            description: Production Controller (Updatable when released)
            type: string
      - name: purchaseOrderNumber
        in: query
        schema:
          type: array
          items:
            description: Purchase Order Number (Updatable when released)
            type: string
      - name: quantity
        in: query
        schema:
          type: array
          items:
            format: double
            description: Workorder Quantity (Updatable when released)
            type: number
      - name: quantityAdjustmentMode
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderQuantityAdjustmentMode'
      - name: quantityErp
        in: query
        schema:
          type: array
          items:
            format: double
            description: Inital Workorder Quantity requested from the ERP-System
            type: number
      - name: quantityFinished
        in: query
        schema:
          type: array
          items:
            format: double
            description: Total finished quantity booked at the last mandatory Workstep
            type: number
            readOnly: true
      - name: quantityMax
        in: query
        schema:
          type: array
          items:
            format: double
            description: Calculated maximum quantity of the workorder based on quantity
              and overbookPercentage used in finish the workorder (Updatable when
              released)
            type: number
            readOnly: true
      - name: quantityOverbookPercentage
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Percentage value that the workorder quantity could be overbooked.
              In combination with finishMode the workorder quantity could be overbooked
              up to this value before the workorder state will be set automatically
              to finished (Updatable when released)
            type: integer
      - name: quantityScrap
        in: query
        schema:
          type: array
          items:
            format: double
            description: Total scrapped quantity booked at any Workstep
            type: number
            readOnly: true
      - name: quantityScrapAdjust
        in: query
        schema:
          type: array
          items:
            format: double
            description: Scrap Quantity that was used to increased the workorder quantity
              based on Scrap Adjust setting
            type: number
      - name: quantityStarted
        in: query
        schema:
          type: array
          items:
            format: double
            description: Total started quantity booked at the first mandatory Workstep
            type: number
            readOnly: true
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: startDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: "StartDate of the Workorder, is implicit set when a workorder\
              \ is set to started (Updatable when released)"
            type: string
            readOnly: true
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: type
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderType'
      - name: unitId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: UnitId of the workorder
              nullable: false
      - name: workplanErpVersion
        in: query
        schema:
          type: array
          items:
            type: string
      - name: workplanName
        in: query
        schema:
          type: array
          items:
            description: "On release of the workorder: If no worksteps defined for\
              \ this workorder, the workplan with given name an erpVersion will be\
              \ fetched from masterdata and it's definition copied."
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workorder'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
    post:
      tags:
      - smom workorders resources (private)
      summary: PRIVATE API Create a new Workorder
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workorder'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workorder'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/name/{name}:
    get:
      tags:
      - smom workorders resources (public)
      summary: get Workorder for a unique name
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_readByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workorder'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/{id}:
    get:
      tags:
      - smom workorders resources (public)
      summary: get the workorder for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workorder'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
    put:
      tags:
      - smom workorders resources (private)
      summary: PRIVATE API update workorder
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: ID of the workorder to update
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workorder'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workorder'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/{id}/checkConsistency:
    get:
      tags:
      - smom workorders resources (private)
      summary: "PRIVATE API Check the Consistency of the workorder. Workplan, Bom"
      description: "Check the Consistency of the workorder. Workorders can use workplans\
        \ and boms defined in masterdata or provide workorder-specific worksteps and\
        \ bomItems. If workplan from masterdata is to be used, the bom has to be given\
        \ from masterdata, too (and vice versa). A mix of a masterdata bom/workplan\
        \ and workorder-specific bom/workplan is not supported.\nChecks done:\n *\
        \ Workplan and bom are well defined (if from masterdata: they exist and WorkorderType\
        \ and partId are same as defined in workorder)\n * At least one mandatory\
        \ workstep is defined\n * Workstep-names are unique\n * Workstep-confirmationNumbers\
        \ are unique\n * Each workstep has at least one OrganizationUnit assigned\n\
        \ * Each bomItem references an existing workstep by it's name \n\n### Required\
        \ roles\n* smom_admin\n"
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_checkConsistency
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: ID of the workorder to check
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "417":
          description: Not Acceptable. Workorder structure is invalid. See Failures
          content:
            application/json:
              schema:
                description: Failures found in the Consistency Check
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/{id}/downloadSerialunits:
    get:
      tags:
      - smom workorders resources (private)
      summary: PRIVATE API Get all SerialUnits for a given WorkorderId as Plain Text
        (CSV)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_downloadSerialUnits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            text/plain: {}
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/{id}/failurepareto:
    get:
      tags:
      - smom workorders resources (private)
      summary: PRIVATE API returns all failures for serials in this workorder
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.resources.workorders.{id}.failurepareto.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_getFailurePareto
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: dateLimit
        in: query
        description: Minutes in the past to be considered
        schema:
          format: int32
          type: integer
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
      - name: organizationUnitId
        in: query
        description: Failures booked only by the given organization unit or any child
          of it
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialLimit
        in: query
        description: Maximum serial numbers to be considered
        schema:
          format: int32
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
      - name: withPseudo
        in: query
        schema:
          type: boolean
      - name: workstepLocation
        in: query
        description: WorkstepLocation
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/{id}/failures:
    get:
      tags:
      - smom workorders resources (private)
      summary: PRIVATE API returns all failures for serials in this workorder
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_getFailures
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: dateLimit
        in: query
        description: Minutes in the past to be considered
        required: false
        schema:
          format: int32
          type: integer
      - name: limit
        in: query
        description: "End-Limit for Paging, default:100"
        required: false
        schema:
          format: int32
          default: "100"
          type: integer
      - name: offset
        in: query
        description: "Start-Offset for Paging, default:0"
        required: false
        schema:
          format: int32
          default: "0"
          type: integer
      - name: organizationUnitId
        in: query
        description: Failures booked only by the given organization unit or any child
          of it
        required: false
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialLimit
        in: query
        description: Maximum serial numbers to be considered
        required: false
        schema:
          format: int32
          type: integer
      - name: workstepLocation
        in: query
        description: workstepLocation to be considered
        required: false
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitFailureBooking'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/{id}/state/finished:
    put:
      tags:
      - smom workorders resources (public)
      summary: set the Workorder state to finished
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_setStateToFinished
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workorder'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/{id}/state/started:
    put:
      tags:
      - smom workorders resources (public)
      summary: set the Workorder state to started
      description: |
        ### Required roles
        * smom_admin
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_setStateToStarted
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workorder'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "409":
          description: |-
            Conflict

            * *CANNOT_BE_CREATED** Object cannot be created due missing or inconsistent data
        "412":
          description: |-
            Precondition Failed

            * *VERSION_MISMATCH** Version in DB does not match given version. Reload required (Optimistic lock).
        "404":
          description: |-
            Not Found

            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/{id}/version/{version}/applymasterdata:
    put:
      tags:
      - smom workorders resources (private)
      summary: PRIVATE API Apply masterdata
      description: "Workorders can use workplans and boms defined in masterdata or\
        \ provide workorder-specific worksteps and bomItems. If workplan from masterdata\
        \ is to be used, the bom has to be given from masterdata, too (and vice versa).\
        \ A mix of a masterdata bom/workplan and workorder-specific bom/workplan is\
        \ not supported.\n\nThis API will fetch Workplan and BOM from masterdata and\
        \ replace all workorder-releated structures currently existing with them.\
        \ This is allowed only as long as the workorder is in state IN_PROCESS. Before\
        \ the apply, a consistency check is done.\n\nThe bom will be fetched from\
        \ masterdata and it's definition copied.\n * If a MasterBomId is given (see\
        \ Workorder-Resource-API): Load Bom from mdata for id. Else \n * If a Bom-name\
        \ is given: Load newest Bom from mdata for name and erpVersion. Else \n *\
        \ Load newest Bom from mdata for workorder's partId and erpVersion.\n\n\n\
        The workplan will be fetched from masterdata and it's definition copied.\n\
        \ * If a MasterWorkplanId is given (see Workorder-Resource-API): Load Workplan\
        \ from mdata for id. Else \n * If a Workplan-name is given: Load newest Workplan\
        \ from mdata for name and erpVersion. Else \n * Load newest Workplan from\
        \ mdata for workorder's partId and erpVersion.\n\n\n### Required roles\n*\
        \ smom_admin\n"
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_applyMasterdataWorkplanAndBom
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: ID of the workorder
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        description: DB-Version of the Workorder
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderView'
        "417":
          description: "Not Acceptable, Bom an Workplan structures are invalid. See\
            \ Failures"
          content:
            application/json:
              schema:
                description: Failures found in the Consistency Check
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorders/{id}/version/{version}/release:
    put:
      tags:
      - smom workorders resources (private)
      summary: PRIVATE API Release workorder
      description: "Release an existing workorder. Before the release, a consistency\
        \ check is done. Workorders can use workplans and boms defined in masterdata\
        \ or provide workorder-specific worksteps and bomItems. If workplan from masterdata\
        \ is to be used, the bom has to be given from masterdata, too (and vice versa).\
        \ A mix of a masterdata bom/workplan and workorder-specific bom/workplan is\
        \ not supported.\n\nIf no bom-items are defined in smom on release of the\
        \ workorder, the bom will be fetched from masterdata and it's definition copied.\n\
        \ * If a MasterBomId is given (see Workorder-Resource-API): Load Bom from\
        \ mdata for id. Else \n * If a Bom-name is given: Load newest Bom from mdata\
        \ for name and erpVersion. Else \n * Load newest Bom from mdata for workorder's\
        \ partId and erpVersion.\n\nIf no worksteps are defined in smom on release\
        \ of the workorder, the workplan will be fetched from masterdata and it's\
        \ definition copied.\n * If a MasterWorkplanId is given (see Workorder-Resource-API):\
        \ Load Workplan from mdata for id. Else \n * If a Workplan-name is given:\
        \ Load newest Workplan from mdata for name and erpVersion. Else \n * Load\
        \ newest Workplan from mdata for workorder's partId and erpVersion.\n\nChecks\
        \ done:\n * Workplan and bom are well defined (if from masterdata: they exist\
        \ and WorkorderType and partId are same as defined in workorder)\n * At least\
        \ one mandatory workstep is defined\n * Workstep-names are unique\n * Workstep-confirmationNumbers\
        \ are unique\n * Each workstep has at least one OrganizationUnit assigned\n\
        \ * Each bomItem references an existing workstep by it's name \n\n### Required\
        \ roles\n* smom_admin\n"
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderResource_releaseWorkorder
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: ID of the workorder to release
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: version
        in: path
        description: DB-Version of the Workorder
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workorder'
        "417":
          description: "Not Acceptable, Workorder cannot be released. See Failures"
          content:
            application/json:
              schema:
                description: Failures found in the Consistency Check
                type: array
                items:
                  description: A FailureCondition that was found during processing
                    the businesslogic.
                  type: object
                  properties:
                    object:
                      description: The ObjectType where the failure occured
                      type: string
                      nullable: false
                    failure:
                      description: The FailureType that occured (see ResponseCodeMapping-
                        & Warning-Schema)
                      type: string
                      nullable: false
                    message:
                      description: Additonal Message of that failure
                      type: string
                      nullable: true
                    apiCallHash:
                      description: Unique identifier for logs
                      type: string
                      nullable: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
  /smartmom-svc/api/resources/workorderworkstepbomitems:
    post:
      tags:
      - smom workorderworkstepbomitems resources (private)
      summary: PRIVATE API Create a workorderWorkstepBomItem
      description: |
        BomItem can be added to a workorder even if the workorder is released
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBomItemResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstepBomItem'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepBomItem'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworkstepbomitems/{id}:
    get:
      tags:
      - smom workorderworkstepbomitems resources (private)
      summary: PRIVATE API Get the workorderWorkstepBomItem for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBomItemResource_find
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepBomItem'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom workorderworkstepbomitems resources (private)
      summary: PRIVATE API Update WorkorderWorkstepBomItem
      description: |
        By altering the workorderWorkstepId it's possible to move this BomItem to a other workstep within the same workorder. Moving the BomItem to worksteps of other workorders is not allowed.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBomItemResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstepBomItem'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepBomItem'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom workorderworkstepbomitems resources (private)
      summary: PRIVATE API Delete WorkorderWorkstepBomItem
      description: |
        If the workorder the workstepBomItem belongs to is not released, the bomItem is deleted. Else it's quantity is reduced to zero and a special marker is set into the payload.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBomItemResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworkstepequipments:
    get:
      tags:
      - smom workorderworkstepequipments resources (private)
      summary: PRIVATE API Get WorkorderWorkstepEquipments by Filter
      description: |2

        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepEquipmentResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: location
        in: query
        schema:
          type: array
          items:
            description: Location has to be unique for all equipments assigned to
              one workorderWorkstep
            type: string
            nullable: false
      - name: partId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: references the part/equipmentDefinition of this equipment
              nullable: false
      - name: quantity
        in: query
        schema:
          type: array
          items:
            format: int32
            minimum: 1
            type: integer
            nullable: false
      - name: workorderId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the corresponding Workorder
              readOnly: true
      - name: workorderWorkstepId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "References the workorderWorkstep, this equipment belongs\
                \ to"
              nullable: false
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderWorkstepEquipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom workorderworkstepequipments resources (private)
      summary: PRIVATE API Create a new WorkorderWorkstepEquipment
      description: |
        The workorder the equipment is to be assigned, has to be in State IN_PROCESS.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepEquipmentResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstepEquipment'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepEquipment'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworkstepequipments/{id}:
    get:
      tags:
      - smom workorderworkstepequipments resources (private)
      summary: PRIVATE API Find the workorderWorkstepEquipment for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepEquipmentResource_find
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepEquipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom workorderworkstepequipments resources (private)
      summary: PRIVATE API Update WorkorderWorkstepEquipment
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepEquipmentResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstepEquipment'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepEquipment'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom workorderworkstepequipments resources (private)
      summary: PRIVATE API Delete WorkorderWorkstepEquipment
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepEquipmentResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteporganizationunits:
    post:
      tags:
      - smom workorderworksteporganizationunits resources (private)
      summary: PRIVATE API Create a workorderWorkstepOrganizationUnit
      description: |
        Only allowed as long as the referenced workorder is in state IN_PROCESS
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepOrganizationUnitResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnit'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnit'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteporganizationunits/{id}:
    get:
      tags:
      - smom workorderworksteporganizationunits resources (private)
      summary: PRIVATE API Get the workorderWorkstepOrganizationUnit for the given
        id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepOrganizationUnitResource_find
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom workorderworksteporganizationunits resources (private)
      summary: PRIVATE API Delete a WorkorderWorkstepOrganizationUnit
      description: |
        Only allowed as long as the referenced workorder is in state IN_PROCESS
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepOrganizationUnitResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteps:
    post:
      tags:
      - smom workorderworksteps resources (private)
      summary: PRIVATE API Create a workorderWorkstep
      description: |
        New worksteps will be added after the currently highest postion of all worksteps of the workorder.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_create
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstep'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstep'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteps/confirmationNumber/{confirmationNumber}:
    get:
      tags:
      - smom workorderworksteps resources (public)
      summary: get one workorderWorkstep for a given confirmationNumber.
      description: |
        The confirmationNumber has to be unique in the SmartMOM otherwise an GecFailure is returned.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_readWorkstepByConfirmationNumber
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: confirmationNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstep'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER NOT_FOUND* WorkorderWorkstep ConfirmationNumber Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *WORKORDER_WORKSTEP_CONFIRMATION_NUMBER KEY_IS_NOT_UNIQUE* WorkorderWorkstep ConfirmationNumber The given key is not unique in the data structure
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteps/organizationunits/lockgroups/{id}:
    put:
      tags:
      - smom workorderworksteps resources (private)
      summary: PRIVATE API update lockGroup assigned to organizationUnits of a workstep
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_updateLockGroups
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitLockGroup'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitLockGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom workorderworksteps resources (private)
      summary: PRIVATE API delete assignment of a lockGroup to organizationUnits of
        a workstep
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_deleteLockGroups
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteps/organizationunits/{id}/lockgroups:
    get:
      tags:
      - smom workorderworksteps resources (private)
      summary: PRIVATE API get the lockGroups assigend to organizationUnits of a workstep
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_readLockGroups
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of the WorkorderWorkstepOrganizationUnit
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: locktypeName
        in: query
        description: Name of a Locktype
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitLockGroup'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    post:
      tags:
      - smom workorderworksteps resources (private)
      summary: PRIVATE API assign lockGroup to organizationUnits of a workstep
      description: |
        to create the lock a WorkorderWorkstepOrganizationUnitLockGroup has to be passed in the requestBody with filled lockGroupId and workorderworkStepOrganizationUnitId
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_createLockGroups
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of the WorkorderWorkstepOrganizationUnit
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitLockGroup'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitLockGroup'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteps/serialunits/{id}:
    get:
      tags:
      - smom workorderworksteps resources (private)
      summary: "PRIVATE API get the workorderWorksteps for the given serial unit id,\
        \ ordered by it's positions"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_readWorkstepsBySerialUnit
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderWorkstep'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteps/workorderName/{workorderName}/workstepName/{workstepName}:
    get:
      tags:
      - smom workorderworksteps resources (public)
      summary: Get the workorderWorkstep for the given WorkorderName and WorkstepName
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_findByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstep'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *WORKORDER_WORKSTEP NOT_FOUND* WorkorderWorkstep Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteps/{id}:
    get:
      tags:
      - smom workorderworksteps resources (private)
      summary: PRIVATE API Get the workorderWorkstep for the given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_find
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstep'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
    put:
      tags:
      - smom workorderworksteps resources (private)
      summary: PRIVATE API Update WorkorderWorkstep
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_update
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkorderWorkstep'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstep'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
    delete:
      tags:
      - smom workorderworksteps resources (private)
      summary: PRIVATE API Delete WorkorderWorkstep
      description: |
        Workstep may be deleted as long as the workorder is in state IN_PROCESS. All existing worksteps with a position higher than the deleted workstep will decrement their position by one to close the gap the deleted workstep leaves.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_delete
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/resources/workorderworksteps/{id}/state/{name}:
    put:
      tags:
      - smom workorderworksteps resources (private)
      summary: PRIVATE API set the WorkorderWorkstep state.
      description: |
        Supported values are switching from
        * NOT_READY to READY
        * READY to NOT_READY
        * PAUSED to FINISHED
        * READY to FINISHED
        * FINISHED to PAUSED
        * FINISHED to READY

        STARTED is only by set by activation a Station for the WorkorderWorkstep
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepResource_setWorkorderWorkstepState
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkstepState'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstep'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/streams/consolidatedbookings/{organizationUnitId}/days:
    get:
      tags:
      - smom consolidatedbookings streams (private)
      summary: PRIVATE API Stream BookingPerDay via SSE
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.consolidatedbooking.boundary.ConsolidatedBookingStreamResource_streamBookingPerDay
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: |-
            OK.
            ServerSentEvent-APIs will send an empty message every 30 seconds to keep the channel alive.
          content:
            text/event-stream:
              schema:
                description: BookingPerDay
                required:
                - fromDate
                - workorderWorkstepId
                - organizationUnitId
                - toDate
                - bookDate
                - organizationUnitName
                - workorderId
                - workorderName
                - workorderWorkstepName
                - workorderWorkstepPosition
                - cycleTime
                - setupTime
                - plantId
                type: object
                properties:
                  stamp:
                    format: date-time
                    description: Date of last change
                    type: string
                    readOnly: true
                    example: 1970-01-01T00:00:00.0Z
                  created:
                    format: date-time
                    description: Date of creation
                    type: string
                    readOnly: true
                    example: 1970-01-01T00:00:00.0Z
                  version:
                    format: int64
                    description: "Internal version of the entity, used for optimistic\
                      \ locking. Required for updates. Generated on server-side, must\
                      \ not be given in creates."
                    type: integer
                  fromDate:
                    format: date-time
                    description: Consolidation From
                    type: string
                    nullable: false
                  workorderWorkstepId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ID of the WorkorderWorkstep for this Booking
                      nullable: false
                  organizationUnitId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: OrganizationUnit Id
                      nullable: false
                  toDate:
                    format: date-time
                    description: Consolidation To
                    type: string
                    nullable: false
                  bookDate:
                    format: date-time
                    description: Booking OffsetDateTime
                    type: string
                    nullable: false
                  organizationUnitName:
                    description: OrganizationUnit name
                    type: string
                    nullable: false
                  workorderId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: WorkorderId of the Booking
                      nullable: false
                  workorderName:
                    description: Workorder name
                    type: string
                    nullable: false
                  workorderWorkstepName:
                    description: Name of the WorkorderWorkstep for this Booking
                    type: string
                    nullable: false
                  workorderWorkstepPosition:
                    format: int64
                    description: Position of the WorkorderWorkstep for this Booking
                    type: integer
                    nullable: false
                  cycleTime:
                    allOf:
                    - $ref: '#/components/schemas/GecDuration'
                    - description: Cycletime for this Booking
                  setupTime:
                    allOf:
                    - $ref: '#/components/schemas/GecDuration'
                    - description: Setuptime for this Booking
                  quantityPass:
                    format: double
                    description: Sum PASS-Quantity
                    type: number
                    readOnly: true
                  quantityFail:
                    format: double
                    description: Sum FAIL-Quantity
                    type: number
                    readOnly: true
                  quantityScrap:
                    format: double
                    description: Sum SCRAP-Quantity
                    type: number
                    readOnly: true
                  quantityInProcess:
                    format: double
                    description: Sum InProcess-Quantity
                    type: number
                    readOnly: true
                  quantityFirstPass:
                    format: double
                    description: Sum FIRST-PASS-Quantity
                    type: number
                    readOnly: true
                  dayOfWeek:
                    allOf:
                    - $ref: '#/components/schemas/DayOfWeek'
                    - description: Day Of Week
                      readOnly: true
                  weekOfYear:
                    format: int32
                    description: Week of Year
                    type: integer
                    readOnly: true
                  plantId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ID of the plant of this Booking
                      nullable: false
                  quantityBookings:
                    format: int32
                    description: total number of bookings
                    type: integer
                    readOnly: true
                  id:
                    $ref: '#/components/schemas/BookingPerDayPk'
                readOnly: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/streams/consolidatedbookings/{organizationUnitId}/shifts:
    get:
      tags:
      - smom consolidatedbookings streams (private)
      summary: PRIVATE API Stream BookingPerShift via SSE
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.consolidatedbooking.boundary.ConsolidatedBookingStreamResource_streamBookingPerShift
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: |-
            OK.
            ServerSentEvent-APIs will send an empty message every 30 seconds to keep the channel alive.
          content:
            text/event-stream:
              schema:
                description: BookingPerShift
                required:
                - fromDate
                - workorderWorkstepId
                - organizationUnitId
                - toDate
                - bookDate
                - organizationUnitName
                - workorderId
                - workorderName
                - workorderWorkstepName
                - workorderWorkstepPosition
                - cycleTime
                - setupTime
                - plantId
                type: object
                properties:
                  stamp:
                    format: date-time
                    description: Date of last change
                    type: string
                    readOnly: true
                    example: 1970-01-01T00:00:00.0Z
                  created:
                    format: date-time
                    description: Date of creation
                    type: string
                    readOnly: true
                    example: 1970-01-01T00:00:00.0Z
                  version:
                    format: int64
                    description: "Internal version of the entity, used for optimistic\
                      \ locking. Required for updates. Generated on server-side, must\
                      \ not be given in creates."
                    type: integer
                  fromDate:
                    format: date-time
                    description: Consolidation From
                    type: string
                    nullable: false
                  workorderWorkstepId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ID of the WorkorderWorkstep for this Booking
                      nullable: false
                  organizationUnitId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: OrganizationUnit Id
                      nullable: false
                  toDate:
                    format: date-time
                    description: Consolidation To
                    type: string
                    nullable: false
                  bookDate:
                    format: date-time
                    description: Booking OffsetDateTime
                    type: string
                    nullable: false
                  organizationUnitName:
                    description: OrganizationUnit name
                    type: string
                    nullable: false
                  workorderId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: WorkorderId of the Booking
                      nullable: false
                  workorderName:
                    description: Workorder name
                    type: string
                    nullable: false
                  workorderWorkstepName:
                    description: Name of the WorkorderWorkstep for this Booking
                    type: string
                    nullable: false
                  workorderWorkstepPosition:
                    format: int64
                    description: Position of the WorkorderWorkstep for this Booking
                    type: integer
                    nullable: false
                  cycleTime:
                    allOf:
                    - $ref: '#/components/schemas/GecDuration'
                    - description: Cycletime for this Booking
                  setupTime:
                    allOf:
                    - $ref: '#/components/schemas/GecDuration'
                    - description: Setuptime for this Booking
                  quantityPass:
                    format: double
                    description: Sum PASS-Quantity
                    type: number
                    readOnly: true
                  quantityFail:
                    format: double
                    description: Sum FAIL-Quantity
                    type: number
                    readOnly: true
                  quantityScrap:
                    format: double
                    description: Sum SCRAP-Quantity
                    type: number
                    readOnly: true
                  quantityInProcess:
                    format: double
                    description: Sum InProcess-Quantity
                    type: number
                    readOnly: true
                  quantityFirstPass:
                    format: double
                    description: Sum FIRST-PASS-Quantity
                    type: number
                    readOnly: true
                  dayOfWeek:
                    allOf:
                    - $ref: '#/components/schemas/DayOfWeek'
                    - description: Day Of Week
                      readOnly: true
                  weekOfYear:
                    format: int32
                    description: Week of Year
                    type: integer
                    readOnly: true
                  plantId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ID of the plant of this Booking
                      nullable: false
                  quantityBookings:
                    format: int32
                    description: total number of bookings
                    type: integer
                    readOnly: true
                  shiftId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ShiftId for this Booking
                      nullable: false
                  shiftName:
                    description: ShiftName for this Booking
                    type: string
                    nullable: false
                  id:
                    $ref: '#/components/schemas/BookingPerShiftPk'
                readOnly: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/streams/consolidateddurations/{organizationUnitId}/days:
    get:
      tags:
      - mdc consolidateddurations streams (private)
      summary: PRIVATE API Stream DurationPerDay via SSE
      description: |
        API will trigger a server sent event each time a condition is booked for given organizationUnit or day ends .<br>The message contains the summarized durations and quantities for the day and each SEMI E 10 Level2/3/4.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConsolidatedDurationStreamResource_streamDurationPerDay
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: |-
            OK.
            ServerSentEvent-APIs will send an empty message every 30 seconds to keep the channel alive.
          content:
            text/event-stream:
              schema:
                description: DurationPerDay
                required:
                - fromDate
                - toDate
                - bookDate
                - organizationUnitId
                - organizationUnitName
                - plantId
                - lastLevel4
                type: object
                properties:
                  stamp:
                    format: date-time
                    description: Date of last change
                    type: string
                    readOnly: true
                    example: 1970-01-01T00:00:00.0Z
                  created:
                    format: date-time
                    description: Date of creation
                    type: string
                    readOnly: true
                    example: 1970-01-01T00:00:00.0Z
                  version:
                    format: int64
                    description: "Internal version of the entity, used for optimistic\
                      \ locking. Required for updates. Generated on server-side, must\
                      \ not be given in creates."
                    type: integer
                  fromDate:
                    format: date-time
                    description: Consolidation From
                    type: string
                    example: 1970-01-01T00:00:00.0Z
                    nullable: false
                  toDate:
                    format: date-time
                    description: Consolidation To
                    type: string
                    example: 1970-01-01T00:00:00.0Z
                    nullable: false
                  bookDate:
                    format: date-time
                    description: date of last booking (might be before the fromDate)
                    type: string
                    example: 1970-01-01T00:00:00.0Z
                    nullable: false
                  organizationUnitId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: OrganizationUnit Id
                      nullable: false
                  organizationUnitName:
                    description: OrganizationUnit name
                    type: string
                    nullable: false
                  dayOfWeek:
                    allOf:
                    - $ref: '#/components/schemas/DayOfWeek'
                    - description: Day Of Week
                  weekOfYear:
                    format: int32
                    description: Week of Year
                    type: integer
                  plantId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ID of the plant of this Booking
                      nullable: false
                  lastLevel4:
                    allOf:
                    - $ref: '#/components/schemas/Level4'
                    - description: Last booked MDC-Level4 according to SEMI E 10
                      nullable: false
                  lastLevel3:
                    allOf:
                    - $ref: '#/components/schemas/Level3'
                    - description: Last booked MDC-Level3 according to SEMI E 10
                  lastLevel2:
                    allOf:
                    - $ref: '#/components/schemas/Level2'
                    - description: Last booked MDC-Level2 according to SEMI E 10
                  level4Durations:
                    description: Summarized duration and quantity of conditions for
                      a Level4 according to SEMI E 10
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/DurationQuantity'
                  level3Durations:
                    description: Summarized duration and quantity of conditions for
                      a Level3 according to SEMI E 10
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/DurationQuantity'
                  level2Durations:
                    description: Summarized duration and quantity of conditions for
                      a Level2 according to SEMI E 10
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/DurationQuantity'
                  id:
                    $ref: '#/components/schemas/DurationPerDayPk'
                readOnly: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/streams/consolidateddurations/{organizationUnitId}/shifts:
    get:
      tags:
      - mdc consolidateddurations streams (private)
      summary: PRIVATE API Stream DurationPerShift via SSE
      description: |
        API will trigger a server sent event each time a condition is booked or shift ends for given organizationUnit.<br>The message contains the summarized durations and quantities for the shift and each SEMI E 10 Level2/3/4.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConsolidatedDurationStreamResource_streamDurationPerShift
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: |-
            OK.
            ServerSentEvent-APIs will send an empty message every 30 seconds to keep the channel alive.
          content:
            text/event-stream:
              schema:
                description: DurationPerShift
                required:
                - fromDate
                - toDate
                - bookDate
                - organizationUnitId
                - organizationUnitName
                - plantId
                - lastLevel4
                type: object
                properties:
                  stamp:
                    format: date-time
                    description: Date of last change
                    type: string
                    readOnly: true
                    example: 1970-01-01T00:00:00.0Z
                  created:
                    format: date-time
                    description: Date of creation
                    type: string
                    readOnly: true
                    example: 1970-01-01T00:00:00.0Z
                  version:
                    format: int64
                    description: "Internal version of the entity, used for optimistic\
                      \ locking. Required for updates. Generated on server-side, must\
                      \ not be given in creates."
                    type: integer
                  fromDate:
                    format: date-time
                    description: Consolidation From
                    type: string
                    example: 1970-01-01T00:00:00.0Z
                    nullable: false
                  toDate:
                    format: date-time
                    description: Consolidation To
                    type: string
                    example: 1970-01-01T00:00:00.0Z
                    nullable: false
                  bookDate:
                    format: date-time
                    description: date of last booking (might be before the fromDate)
                    type: string
                    example: 1970-01-01T00:00:00.0Z
                    nullable: false
                  organizationUnitId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: OrganizationUnit Id
                      nullable: false
                  organizationUnitName:
                    description: OrganizationUnit name
                    type: string
                    nullable: false
                  dayOfWeek:
                    allOf:
                    - $ref: '#/components/schemas/DayOfWeek'
                    - description: Day Of Week
                  weekOfYear:
                    format: int32
                    description: Week of Year
                    type: integer
                  plantId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ID of the plant of this Booking
                      nullable: false
                  lastLevel4:
                    allOf:
                    - $ref: '#/components/schemas/Level4'
                    - description: Last booked MDC-Level4 according to SEMI E 10
                      nullable: false
                  lastLevel3:
                    allOf:
                    - $ref: '#/components/schemas/Level3'
                    - description: Last booked MDC-Level3 according to SEMI E 10
                  lastLevel2:
                    allOf:
                    - $ref: '#/components/schemas/Level2'
                    - description: Last booked MDC-Level2 according to SEMI E 10
                  level4Durations:
                    description: Summarized duration and quantity of conditions for
                      a Level4 according to SEMI E 10
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/DurationQuantity'
                  level3Durations:
                    description: Summarized duration and quantity of conditions for
                      a Level3 according to SEMI E 10
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/DurationQuantity'
                  level2Durations:
                    description: Summarized duration and quantity of conditions for
                      a Level2 according to SEMI E 10
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/DurationQuantity'
                  shiftId:
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                    - description: ShiftId for this Booking
                      nullable: false
                  shiftName:
                    description: ShiftName for this Booking
                    type: string
                    nullable: false
                  id:
                    $ref: '#/components/schemas/DurationPerShiftPk'
                readOnly: true
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/streams/organizationunits/{organizationUnitId}/conditions/current:
    get:
      tags:
      - mdc organizationunits streams (private)
      summary: PRIVATE API Stream all created condition for the given station
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionStreamingResource_streamCurrent
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: |-
            OK.
            ServerSentEvent-APIs will send an empty message every 30 seconds to keep the channel alive.
          content:
            text/event-stream:
              schema:
                description: OrganizationUnitConditionMessage
                type: object
                properties:
                  organizationUnit:
                    $ref: '#/components/schemas/OrganizationUnit'
                  condition:
                    $ref: '#/components/schemas/ConditionView'
                  bookDate:
                    format: date-time
                    type: string
                  payload:
                    type: string
                  stillCurrentCondition:
                    type: boolean
                  id:
                    $ref: '#/components/schemas/UUID'
                  shiftId:
                    $ref: '#/components/schemas/UUID'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/streams/serialunitbookings/{organizationUnitId}:
    get:
      tags:
      - smom serialunitbookings streams (private)
      summary: PRIVATE API Stream SerialunitBooking via SSE for a dedicated OrgUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingStreamResource_streamSerialunitBooking
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: |-
            OK.
            ServerSentEvent-APIs will send an empty message every 30 seconds to keep the channel alive.
          content:
            text/event-stream:
              schema:
                description: SerialunitBooking
                type: object
                properties:
                  workorderName:
                    type: string
                  organizationUnitName:
                    type: string
                  workorderWorkstepName:
                    type: string
                  workorderWorkstepPosition:
                    format: int64
                    type: integer
                  workorderQuantity:
                    format: double
                    type: number
                  workorderPartName:
                    type: string
                  serialunitName:
                    type: string
                  quantityFirstPassWorkstep:
                    format: double
                    type: number
                  quantityPassWorkstep:
                    format: double
                    type: number
                  quantityFailWorkstep:
                    format: double
                    type: number
                  quantityScrapWorkstep:
                    format: double
                    type: number
                  quantityInProcessWorkstep:
                    format: double
                    type: number
                  booking:
                    $ref: '#/components/schemas/SerialunitBooking'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/streams/workorderworkstepbookings/{organizationUnitId}:
    get:
      tags:
      - smom workorderworkstepbookings streams (private)
      summary: PRIVATE API Stream WorkorderWorkstepBookingMessage via SSE for a dedicated
        OrgUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBookingStreamResource_streamWorkorderWorkstepBooking
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: |-
            OK.
            ServerSentEvent-APIs will send an empty message every 30 seconds to keep the channel alive.
          content:
            text/event-stream:
              schema:
                description: WorkorderWorkstepBooking
                type: object
                properties:
                  workorderName:
                    type: string
                  organizationUnitName:
                    type: string
                  workorderWorkstepName:
                    type: string
                  workorderWorkstepPosition:
                    format: int64
                    type: integer
                  workorderQuantity:
                    format: double
                    type: number
                  workorderPartName:
                    type: string
                  booking:
                    $ref: '#/components/schemas/WorkorderWorkstepBooking'
                  unit:
                    type: string
                  setupTimeMachine:
                    $ref: '#/components/schemas/GecDuration'
                  setupTimeWorker:
                    $ref: '#/components/schemas/GecDuration'
                  processingTimeMachine:
                    $ref: '#/components/schemas/GecDuration'
                  processingTimeWorker:
                    $ref: '#/components/schemas/GecDuration'
                  transportTime:
                    $ref: '#/components/schemas/GecDuration'
                  waitTime:
                    $ref: '#/components/schemas/GecDuration'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/systeminfo:
    get:
      tags:
      - system info (private)
      summary: PRIVATE API Get a SystemInfo Object
      description: |
        ### Required roles
        * technical_admin
      operationId: io.gec.smom.base.systeminfo.boundary.SystemInfoResource_getSystemInfo
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - technical_admin
      - keycloak_auth:
        - technical_admin
  /smartmom-svc/api/systeminfo/jpa/poolconfig:
    get:
      tags:
      - system info (private)
      summary: PRIVATE API Get configuration of the ConnectionPool
      description: |
        ### Required roles
        * technical_admin
      operationId: io.gec.smom.base.systeminfo.jpa.boundary.ConnectionPoolInfoResource_getConnectionPoolConfig
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionPoolConfig'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - technical_admin
      - keycloak_auth:
        - technical_admin
  /smartmom-svc/api/systeminfo/jpa/poolmetrics:
    get:
      tags:
      - system info (private)
      summary: PRIVATE API Get metrics of the ConnectionPool usage
      description: |
        Get metrics  of the ConnectionPool usage, if metrics gathering is enabled
        ### Required roles
        * technical_admin
      operationId: io.gec.smom.base.systeminfo.jpa.boundary.ConnectionPoolInfoResource_getConnectionPoolUsageMetrics
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionPoolMetrics'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - technical_admin
      - keycloak_auth:
        - technical_admin
  /smartmom-svc/api/systeminfo/zoneids:
    get:
      tags:
      - system info (private)
      summary: PRIVATE API Get Available ZoneIds
      operationId: io.gec.smom.base.systeminfo.boundary.SystemInfoResource_getAvailabaleZoneIds
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/attributables:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API Get all Attributables
      operationId: io.gec.smom.base.typedefinition.boundary.TypeDefinitionResource_getAttributables
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/contactables/customers:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API Get all CustomerContactables
      operationId: io.gec.smom.base.typedefinition.boundary.TypeDefinitionResource_getCustomers
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/contactables/producers:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API Get all ProducerContactables
      operationId: io.gec.smom.base.typedefinition.boundary.TypeDefinitionResource_getProducers
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/contactables/suppliers:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API Get all SupplierContactables
      operationId: io.gec.smom.base.typedefinition.boundary.TypeDefinitionResource_getSuppliers
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/documentables:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API Get all Documentables
      operationId: io.gec.smom.base.typedefinition.boundary.TypeDefinitionResource_getDocumentables
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/failures:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API Get all possible Values for the Enumeration FailureType
      operationId: io.gec.smom.base.typedefinition.boundary.TypeDefinitionResource_getFailureType
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Return possible Values for the Enumeration FailureType
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FailureType'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/lockables:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API get all lockable object-types
      operationId: io.gec.smom.smom.lock.boundary.LockTypeDefinitionResource_read
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/maintainables:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API get all maintainable object-types
      operationId: io.gec.smom.smom.maintenance.boundary.MaintenanceTypeDefinitionResource_read
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/models:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API Get all possible Values for the Enumeration ModelType
      operationId: io.gec.smom.base.typedefinition.boundary.TypeDefinitionResource_getModelType
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Return possible Values for the Enumeration ModelType
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelType'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/releasables:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API Get all Releasables
      operationId: io.gec.smom.base.typedefinition.boundary.TypeDefinitionResource_getReleasable
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/typedefinitions/warnings:
    get:
      tags:
      - typedefinitions (private)
      summary: PRIVATE API Get all possible Values for the Enumeration WarnType
      operationId: io.gec.smom.base.typedefinition.boundary.TypeDefinitionResource_getWarnType
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: Return possible Values for the Enumeration WarnType
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarnType'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "401":
          $ref: '#/components/schemas/ResponseCodeMapping401'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "403":
          $ref: '#/components/schemas/ResponseCodeMapping403'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
  /smartmom-svc/api/views/assignments:
    get:
      tags:
      - mdc assignments views (private)
      summary: PRIVATE API Get AssignmentViews by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentViewResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/assignments/{id}:
    get:
      tags:
      - mdc assignments views (private)
      summary: PRIVATE API Get the AssignmentView for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.AssignmentViewResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/conditiongroups:
    get:
      tags:
      - mdc conditiongroups views (private)
      summary: PRIVATE API get ConditionGroupViews by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConditionGroupViewResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConditionGroupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/conditiongroups/{id}:
    get:
      tags:
      - mdc conditiongroups views (private)
      summary: PRIVATE API get the ConditionGroupView for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConditionGroupViewResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionGroupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/conditions:
    get:
      tags:
      - mdc conditions views (private)
      summary: PRIVATE API get ConditionViews by Filter
      description: |
        Level2 and Level3 can be used as a filter criteria, but not as sort criteria
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConditionViewResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: color
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/GecColor'
            - description: "Color to be used, on display"
      - name: conditionGroupId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: "If the condition is member of a group, this is this ID\
                \ of the group."
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: level2
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Level2'
            - description: MDC-Level2 according to SEMI E 10
              readOnly: true
      - name: level3
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Level3'
            - description: MDC-Level3 according to SEMI E 10
              readOnly: true
      - name: level4
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Level4'
            - description: MDC-Level4 according to SEMI E 10
              nullable: false
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConditionView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/conditions/{id}:
    get:
      tags:
      - mdc conditions views (private)
      summary: PRIVATE API get the ConditionView for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.ConditionViewResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/consolidatedbookings/days:
    get:
      tags:
      - smom consolidatedbookings views (private)
      summary: PRIVATE API Get BookingPerDay by filter
      description: |
        Load bookings of a station consolidated on daily base
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.consolidatedbooking.boundary.ConsolidatedBookingViewResource_readBookingPerDayByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: bookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Booking OffsetDateTime
            type: string
            nullable: false
      - name: cycleTime
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/GecDuration'
            - description: Cycletime for this Booking
      - name: dayOfWeek
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/DayOfWeek'
            - description: Day Of Week
              readOnly: true
      - name: fromDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Consolidation From
            type: string
            nullable: false
      - name: organizationUnitId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: OrganizationUnit Id
              nullable: false
      - name: organizationUnitName
        in: query
        schema:
          type: array
          items:
            description: OrganizationUnit name
            type: string
            nullable: false
      - name: quantityBookings
        in: query
        schema:
          type: array
          items:
            format: int32
            description: total number of bookings
            type: integer
            readOnly: true
      - name: quantityFail
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum FAIL-Quantity
            type: number
            readOnly: true
      - name: quantityFirstPass
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum FIRST-PASS-Quantity
            type: number
            readOnly: true
      - name: quantityInProcess
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum InProcess-Quantity
            type: number
            readOnly: true
      - name: quantityPass
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum PASS-Quantity
            type: number
            readOnly: true
      - name: quantityScrap
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum SCRAP-Quantity
            type: number
            readOnly: true
      - name: setupTime
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/GecDuration'
            - description: Setuptime for this Booking
      - name: toDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Consolidation To
            type: string
            nullable: false
      - name: weekOfYear
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Week of Year
            type: integer
            readOnly: true
      - name: workorderId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: WorkorderId of the Booking
              nullable: false
      - name: workorderName
        in: query
        schema:
          type: array
          items:
            description: Workorder name
            type: string
            nullable: false
      - name: workorderWorkstepId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the WorkorderWorkstep for this Booking
              nullable: false
      - name: workorderWorkstepName
        in: query
        schema:
          type: array
          items:
            description: Name of the WorkorderWorkstep for this Booking
            type: string
            nullable: false
      - name: workorderWorkstepPosition
        in: query
        schema:
          type: array
          items:
            format: int64
            description: Position of the WorkorderWorkstep for this Booking
            type: integer
            nullable: false
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookingPerDay'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/consolidatedbookings/shifts:
    get:
      tags:
      - smom consolidatedbookings views (private)
      summary: PRIVATE API Get BookingPerShift by filter
      description: |
        Load bookings of a station consolidated on shift base
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.consolidatedbooking.boundary.ConsolidatedBookingViewResource_readBookingPerShiftByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: bookDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Booking OffsetDateTime
            type: string
            nullable: false
      - name: cycleTime
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/GecDuration'
            - description: Cycletime for this Booking
      - name: dayOfWeek
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/DayOfWeek'
            - description: Day Of Week
              readOnly: true
      - name: fromDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Consolidation From
            type: string
            nullable: false
      - name: organizationUnitId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: OrganizationUnit Id
              nullable: false
      - name: organizationUnitName
        in: query
        schema:
          type: array
          items:
            description: OrganizationUnit name
            type: string
            nullable: false
      - name: quantityBookings
        in: query
        schema:
          type: array
          items:
            format: int32
            description: total number of bookings
            type: integer
            readOnly: true
      - name: quantityFail
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum FAIL-Quantity
            type: number
            readOnly: true
      - name: quantityFirstPass
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum FIRST-PASS-Quantity
            type: number
            readOnly: true
      - name: quantityInProcess
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum InProcess-Quantity
            type: number
            readOnly: true
      - name: quantityPass
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum PASS-Quantity
            type: number
            readOnly: true
      - name: quantityScrap
        in: query
        schema:
          type: array
          items:
            format: double
            description: Sum SCRAP-Quantity
            type: number
            readOnly: true
      - name: setupTime
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/GecDuration'
            - description: Setuptime for this Booking
      - name: shiftId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ShiftId for this Booking
              nullable: false
      - name: shiftName
        in: query
        schema:
          type: array
          items:
            description: ShiftName for this Booking
            type: string
            nullable: false
      - name: toDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Consolidation To
            type: string
            nullable: false
      - name: weekOfYear
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Week of Year
            type: integer
            readOnly: true
      - name: workorderId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: WorkorderId of the Booking
              nullable: false
      - name: workorderName
        in: query
        schema:
          type: array
          items:
            description: Workorder name
            type: string
            nullable: false
      - name: workorderWorkstepId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: ID of the WorkorderWorkstep for this Booking
              nullable: false
      - name: workorderWorkstepName
        in: query
        schema:
          type: array
          items:
            description: Name of the WorkorderWorkstep for this Booking
            type: string
            nullable: false
      - name: workorderWorkstepPosition
        in: query
        schema:
          type: array
          items:
            format: int64
            description: Position of the WorkorderWorkstep for this Booking
            type: integer
            nullable: false
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookingPerShift'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/consolidateddurations/days:
    get:
      tags:
      - mdc consolidateddurations views (private)
      summary: PRIVATE API Get DurationPerDay by filter
      description: "Load durations of a station consolidated on daily base\n\n  ###\
        \ Date-Time rules\n\n* maximal allowed duration between fromDate and toDate\
        \ is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.consolidateddurations.days.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* mdc_admin\n* mdc_user\n"
      operationId: io.gec.smom.mdc.condition.boundary.ConsolidatedDurationViewResource_readDurationPerDayByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: OrganizationUnit Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: OrganizationUnit name
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DurationPerDay'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/consolidateddurations/shifts:
    get:
      tags:
      - mdc consolidateddurations views (private)
      summary: PRIVATE API Get DurationPerShift by filter
      description: "Load durations of a station consolidated on shift base\n\n  ###\
        \ Date-Time rules\n\n* maximal allowed duration between fromDate and toDate\
        \ is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.consolidateddurations.shifts.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* mdc_admin\n* mdc_user\n"
      operationId: io.gec.smom.mdc.condition.boundary.ConsolidatedDurationViewResource_readDurationPerShiftByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        schema:
          format: uuid
          description: OrganizationUnit Id
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: organizationUnitName
        in: query
        schema:
          description: OrganizationUnit name
          type: string
      - name: shiftId
        in: query
        schema:
          format: uuid
          description: ShiftId
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: shiftName
        in: query
        schema:
          description: ShiftName
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DurationPerShift'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/equipments:
    get:
      tags:
      - smom equipments views (private)
      summary: PRIVATE API Get Equipments for Filter
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.EquipmentViewResource_readEquipmentsForPartFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentName
        in: query
        schema:
          type: string
      - name: limit
        in: query
        description: Limit the Result
        required: false
        schema:
          format: int32
          type: integer
      - name: partName
        in: query
        schema:
          type: string
      - name: partType
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/failurebookings/topFailureLocations:
    get:
      tags:
      - smom failurebookings views (private)
      summary: PRIVATE API Get Top Failure Locations for Filter
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.FailureBookingViewResource_getTopFailureLocations
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: ignorePseudo
        in: query
        schema:
          type: boolean
      - name: limit
        in: query
        description: Limit the Result
        schema:
          format: int32
          default: "0"
          type: integer
      - name: partName
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workorderName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopFailureLocation'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/failures/{id}/bookings/grouped:
    get:
      tags:
      - smom failures views (private)
      summary: PRIVATE API Get Failure Bookings Grouped for a FailureId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureViewResource_readFailureBookingViewsGroupedForFailureIdAndInterval
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: groupKey
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/GroupKeyEnum'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FailureBookingViewGrouped'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/failures/{id}/downloadSerialunits:
    get:
      tags:
      - smom failures views (private)
      summary: PRIVATE API Get all Serialunits for a given FailureId and further Filter
        as Plain Text (CSV)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.failure.boundary.FailureViewResource_downloadSerialunits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: materialpartId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: productpartId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: stationId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workstepLocation
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            text/plain: {}
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/handlingunits:
    get:
      tags:
      - smom handlingunits views (public)
      summary: "Get HandlingUnitView by X-PlantId, handlingUnitDefinitionId, handlingUnitId,\
        \ handlingUnitName"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.handlingunit.boundary.HandlingUnitViewResource_get
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: handlingUnitDefinitionId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: handlingUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: handlingUnitName
        in: query
        description: allows wildcards
        schema:
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HandlingUnitView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/idgeneratorassignments:
    get:
      tags:
      - idgenerator idgeneratorassignments views (private)
      summary: PRIVATE API get the Assignments of IdGenerators based on the given
        Filter parameter
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorAssignmentViewResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: idGeneratorName
        in: query
        description: "Name of an IdGenerator, Wildcards are supported"
        schema:
          type: string
      - name: idGeneratorState
        in: query
        description: "State of the IdGenerator. Name must match to the supported States,\
          \ otherwise the Call fails."
        schema:
          $ref: '#/components/schemas/ReleaseState'
      - name: idGeneratorTypeName
        in: query
        description: "Type of the IdGenerator,  eg. Serialnumber, HuNumber, MaterialBin.<br>\
          \ No Wildcards are supported. Name must match to an existing IdGeneratorType,\
          \ otherwise the Call fails."
        schema:
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: masterDataName
        in: query
        description: "Name of the masterData Items, which has the IdGenerator assigned.<br><B>The\
          \ name is only used if the masterDataType is given, otherwiese the call\
          \ fails.</B>"
        schema:
          type: string
      - name: masterDataType
        in: query
        description: "Type of the MasterData.<br> <B>The masterDataType is required,\
          \ when the name for masterData is given.</B>"
        schema:
          $ref: '#/components/schemas/MasterDataType'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdGeneratorAssignmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/views/idgeneratorassignments/idgenerators/{id}:
    get:
      tags:
      - idgenerator idgeneratorassignments views (private)
      summary: PRIVATE API get the Assignments of a IdGenerator for the given IdGeneratorId
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorAssignmentViewResource_readByIdGeneratorId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdGeneratorAssignmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/views/idgeneratorassignments/{id}:
    get:
      tags:
      - idgenerator idgeneratorassignments views (private)
      summary: PRIVATE API get the IdGeneratorAssignmentView for the given Id
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorAssignmentViewResource_readById
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGeneratorAssignmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/views/idgenerators:
    get:
      tags:
      - idgenerator idgenerators views (private)
      summary: PRIVATE API get IdGeneratorView with filled components by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorViewResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: counterBase
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/CounterBase'
            - description: Counter of this IdGenerator will be attachted to MasterData
                of this type
              nullable: false
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description (Updatable when released)
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: idGeneratorTypeId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Type of IdGenerator
              nullable: false
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1 (Updatable when released)
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2 (Updatable when released)
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3 (Updatable when released)
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload (Updatable when released)
            type: string
      - name: releaseDate
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: ReleaseDate is set when the state was switched from IN_PROCESS
              to RELEASED
            type: string
            readOnly: true
      - name: state
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/ReleaseState'
            - description: ReleaseState (set by release / archive APIs)
              readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdGeneratorView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/views/idgenerators/{id}:
    get:
      tags:
      - idgenerator idgenerators views (private)
      summary: PRIVATE API get the IdGeneratorView for the given id with filled components
      description: |
        ### Required roles
        * idgenerator_admin
        * idgenerator_user
      operationId: io.gec.smom.idgenerator.boundary.IdGeneratorViewResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdGeneratorView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
      - keycloak_auth:
        - idgenerator_admin
        - idgenerator_user
  /smartmom-svc/api/views/materialbins:
    get:
      tags:
      - smom materialbins views (public)
      summary: Get Material for Filter
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinViewResource_readMaterialBinsForPartFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: chargeDateCode
        in: query
        schema:
          type: string
      - name: chargeNumber
        in: query
        schema:
          type: string
      - name: limit
        in: query
        description: Limit the Result
        required: false
        schema:
          format: int32
          type: integer
      - name: materialBinDescription
        in: query
        schema:
          type: string
      - name: materialBinName
        in: query
        schema:
          type: string
      - name: partName
        in: query
        schema:
          type: string
      - name: partType
        in: query
        schema:
          type: string
      - name: producerName
        in: query
        schema:
          type: string
      - name: withMeasurements
        in: query
        schema:
          default: true
          type: boolean
      - name: withSections
        in: query
        schema:
          default: true
          type: boolean
      - name: withSetup
        in: query
        schema:
          default: true
          type: boolean
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              description: |-
                Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
                * *CONTACT NOT_FOUND* Contact for an organization, company, association, division, group Object Not found
              style: simple
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBinView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/materialbins/usageForLocation:
    get:
      tags:
      - smom materialbins views (private)
      summary: PRIVATE API Get MaterialBin Usage For a Location
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.materialbins.usageForLocation.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.material.boundary.MaterialBinBookingViewResource_getMaterialBinUsageForLocation
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: location
        in: query
        description: Filter for Location
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partId
        in: query
        description: Filter for PartId of the Product
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: withFailures
        in: query
        description: Filter only Usages with failures
        required: true
        schema:
          default: "false"
          type: boolean
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBinUsageData'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/materialbins/usageForMaterialBinIds:
    get:
      tags:
      - smom materialbins views (private)
      summary: PRIVATE API Get MaterialBin Usage For MaterialBinIds
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.materialbins.usageForMaterialBinIds.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.material.boundary.MaterialBinBookingViewResource_getMaterialBinUsageForMaterialBinIds
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: materialBinIds
        in: query
        description: Filter for MaterialBin-IDs
        required: true
        schema:
          minItems: 1
          type: array
          items:
            format: uuid
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
          nullable: false
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partId
        in: query
        description: Filter for PartId of the Product
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: withFailures
        in: query
        description: Filter only Usages with failures
        required: true
        schema:
          default: "false"
          type: boolean
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBinUsageData'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/materialbins/{id}:
    get:
      tags:
      - smom materialbins views (private)
      summary: PRIVATE API Get Material for Filter
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinViewResource_readMaterialBinsForMaterialBinIdAndPartFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: chargeDateCode
        in: query
        schema:
          type: string
      - name: chargeNumber
        in: query
        schema:
          type: string
      - name: limit
        in: query
        description: Limit the Result
        required: false
        schema:
          format: int32
          type: integer
      - name: partName
        in: query
        schema:
          type: string
      - name: partType
        in: query
        schema:
          type: string
      - name: producerName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBinView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/materialbins/{id}/bookings:
    get:
      tags:
      - smom materialbins views (private)
      summary: PRIVATE API Get Material Bookings for a MaterialBinId (Serialbased)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinBookingViewResource_readMaterialBookingViewForMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        schema:
          format: date-time
          type: string
      - name: toDate
        in: query
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBookingView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/materialbins/{id}/bookings/grouped:
    get:
      tags:
      - smom materialbins views (private)
      summary: PRIVATE API Get Material Bookings Grouped for a MaterialBinId  (Serialbased)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinBookingViewResource_readMaterialBookingViewGroupedForMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        schema:
          format: date-time
          type: string
      - name: toDate
        in: query
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBookingViewGrouped'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/materialbins/{id}/downloadSerialunits:
    get:
      tags:
      - smom materialbins views (private)
      summary: PRIVATE API Get all Serialunits for a given MaterialBinId and further
        Filter as Plain Text (CSV)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinBookingViewResource_downloadSerialunits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        schema:
          format: date-time
          type: string
      - name: location
        in: query
        schema:
          type: string
      - name: partId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            text/plain: {}
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/materialbins/{id}/serialunits:
    get:
      tags:
      - smom materialbins views (private)
      summary: 'PRIVATE API reads all Serialunits that have a materialBooking with
        the given MaterialBinId '
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinBookingViewResource_readSerialunitByMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        schema:
          format: date-time
          type: string
      - name: toDate
        in: query
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Serialunit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/materialbins/{id}/workorderWorkstepBookings:
    get:
      tags:
      - smom materialbins views (private)
      summary: PRIVATE API Get Material Bookings for a MaterialBinId  (Quantitybased)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinBookingViewResource_readQuantityMaterialBookingViewForMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        schema:
          format: date-time
          type: string
      - name: toDate
        in: query
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuantityMaterialBookingView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/materialbins/{id}/workorderWorkstepBookings/grouped:
    get:
      tags:
      - smom materialbins views (private)
      summary: PRIVATE API Get Material Bookings Grouped for a MaterialBinId (Quantitybased)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.material.boundary.MaterialBinBookingViewResource_readQuantityMaterialBookingViewGroupedForMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        schema:
          format: date-time
          type: string
      - name: toDate
        in: query
        schema:
          format: date-time
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuantityMaterialBookingViewGrouped'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/messagegroups:
    get:
      tags:
      - mdc messagegroups views (private)
      summary: PRIVATE API get MessageGroupView by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageGroupViewResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageGroupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/messagegroups/{id}:
    get:
      tags:
      - mdc messagegroups views (private)
      summary: PRIVATE API get the MessageGroupView for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageGroupViewResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageGroupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/messages:
    get:
      tags:
      - mdc messages views (private)
      summary: PRIVATE API get MessageView by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageViewResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: cause
        in: query
        schema:
          type: array
          items:
            description: Cause
            type: string
      - name: consequence
        in: query
        schema:
          type: array
          items:
            description: Consequence
            type: string
      - name: description
        in: query
        schema:
          type: array
          items:
            description: Description
            type: string
      - name: hasAttribute
        in: query
        description: True when the Entity has Attributes in the AttributeSystem
        schema:
          type: boolean
      - name: info1
        in: query
        schema:
          type: array
          items:
            description: Info Text 1
            type: string
      - name: info2
        in: query
        schema:
          type: array
          items:
            description: Info Text 2
            type: string
      - name: info3
        in: query
        schema:
          type: array
          items:
            description: Info Text 3
            type: string
      - name: messageCategoryId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the Message Category
      - name: messageClassId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the Message Class
      - name: name
        in: query
        schema:
          type: array
          items:
            description: Name has to be given on creation of the object and is not
              updatable afterwards
            type: string
      - name: payload
        in: query
        schema:
          type: array
          items:
            description: Payload
            type: string
      - name: priority
        in: query
        schema:
          type: array
          items:
            format: int32
            description: Priority value
            type: integer
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/messages/{id}:
    get:
      tags:
      - mdc messages views (private)
      summary: PRIVATE API get the MessageView for the given id
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.MessageViewResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/multipanels:
    get:
      tags:
      - smom multipanels views (public)
      summary: Get a Multipanel for given filter
      description: |
        Either MultipanelName and WorkorderName/Id must be given or SerialunitNumber and WorkorderName/Id
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.MultipanelViewResource_getMultipanelView
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: multipanelName
        in: query
        description: Filter for multipanelName
        schema:
          type: string
      - name: serialunitNumber
        in: query
        description: Filter for serialunitNumber
        schema:
          type: string
      - name: workorderId
        in: query
        description: Filter for WorkorderId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Filter for WorkorderName
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipanelView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MULTIPANEL NOT_FOUND* Multipanel Object Not found
            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *MULTIPANEL ILLEGAL_ARGUMENT* Multipanel A argument is not acceptable
            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/multipanels/histories/serialunits/{id}:
    get:
      tags:
      - smom multipanels views (private)
      summary: PRIVATE API Get a history of all Multipanels the given serialunit was
        member of
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.MultipanelViewResource_getMultipanelSerialunitHistoryViewForSerialunitId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultipanelSerialunitHistoryView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/multipanels/serialunits/{id}:
    get:
      tags:
      - smom multipanels views (private)
      summary: PRIVATE API Get a Multipanel for given serialunit-id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.MultipanelViewResource_getMultipanelViewForSerialunitId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipanelView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/multipanels/{id}:
    get:
      tags:
      - smom multipanels views (private)
      summary: PRIVATE API Get a Multipanel for given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.MultipanelViewResource_getMultipanelViewForId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipanelView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunitmessagehistories:
    get:
      tags:
      - mdc organizationunitmessagehistories views (private)
      summary: PRIVATE API get OrganizationUnitMessageHistoryView by Filter
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageHistoryViewResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: closedSinceFromDate
        in: query
        description: "Load values that are after this date. Field: closedSince"
        schema:
          format: date-time
          type: string
      - name: closedSinceToDate
        in: query
        description: "Load values that are before this date. Field: closedSince"
        schema:
          format: date-time
          type: string
      - name: confirmedSinceFromDate
        in: query
        description: "Load values that are after this date. Field: confirmedSince"
        schema:
          format: date-time
          type: string
      - name: confirmedSinceToDate
        in: query
        description: "Load values that are before this date. Field: confirmedSince"
        schema:
          format: date-time
          type: string
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: greaterThanConfirmToCloseDuration
        in: query
        description: Filter all Entries Duration from Confirm to Close Greater Or
          Equal
        schema:
          $ref: '#/components/schemas/Duration'
      - name: greaterThanOpenToCloseDuration
        in: query
        description: Filter all Entries Duration from Open to Close Greater Or Equal
        schema:
          $ref: '#/components/schemas/Duration'
      - name: greaterThanOpenToConfirmDuration
        in: query
        description: Filter all Entries Duration from Open to Confirm Greater Or Equal
        schema:
          $ref: '#/components/schemas/Duration'
      - name: itemId
        in: query
        description: Id o a Item
        schema:
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: messageId
        in: query
        description: Id of a Message
        schema:
          $ref: '#/components/schemas/UUID'
      - name: messageName
        in: query
        description: Name of a Message
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: OrganizationUnit Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Name of a OrganizationUnit
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMessageHistoryView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/organizationunitmessages:
    get:
      tags:
      - mdc organizationunitmessages views (private)
      summary: PRIVATE API get OrganizationUnitMessageView by Filter
      description: |
        ### This API supports additional options for filtering and sorting.
        Single String-parameter support wildcards. You can prefix filter-values with one of the following identifiers.
        * *IS_NOT*: identifier '<>'
        * *LESSER*: identifier '<'
        * *GREATER*: identifier '>'

        Values without one of this prefixes will be compared using '='. If multiple values for a '='-parameter are given, it will lead to an IN-Query for this values.
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageViewResource_readByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 0
          type: integer
      - name: actions
        in: query
        schema:
          type: array
          items:
            description: Action to be done
            type: string
      - name: confirmedInfo
        in: query
        schema:
          type: array
          items:
            description: Additional confirm message
            type: string
      - name: confirmedSince
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: Message confirm-time
            type: string
      - name: confirmedUser
        in: query
        schema:
          type: array
          items:
            description: Name of the user that confirmed the message
            type: string
            readOnly: true
      - name: equipmentName
        in: query
        schema:
          type: array
          items:
            description: "Name of the equipment, the message was sent for"
            type: string
      - name: itemId
        in: query
        schema:
          type: array
          items:
            description: Identifies for which item of the machine the message was
              sent
            type: string
            nullable: false
      - name: lossFactor
        in: query
        schema:
          type: array
          items:
            format: double
            description: Lost pieces per hour while the message is not closed
            type: number
      - name: messageId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the Message
              nullable: false
      - name: messageState
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/MessageState'
            - description: State of the message
              readOnly: true
      - name: openSince
        in: query
        schema:
          type: array
          items:
            format: date-time
            description: "Message open-time. May be set on creation-time of the message,\
              \ subsequent updates are forbidden!"
            type: string
            nullable: false
      - name: openToConfirmDuration
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Duration'
            - description: Duration between open and confirm
              readOnly: true
      - name: openUser
        in: query
        schema:
          type: array
          items:
            description: Name of the user that opened the message
            type: string
            readOnly: true
            nullable: false
      - name: organizationUnitId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the OrganizationUnit
              nullable: false
      - name: responsibleUser
        in: query
        schema:
          type: array
          items:
            description: Name of the user that is responsible
            type: string
      - name: shiftId
        in: query
        schema:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/UUID'
            - description: Id of the shift during open-time
              readOnly: true
      - name: sortASC
        in: query
        description: Sort by given fields ascending
        schema:
          type: array
          items:
            type: string
      - name: sortDESC
        in: query
        description: Sort by given fields descending
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMessageView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/organizationunits/name/{organizationUnitName}/conditions/current:
    get:
      tags:
      - mdc organizationunits views (public)
      summary: get the current condition for the given station-name
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionViewResource_readCurrentByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitConditionMessage'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *ORGANIZATION_UNIT_CONDITION NOT_FOUND* StationCondition Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/organizationunits/organizationunitName/{organizationUnitName}/measurements/numeric/process:
    get:
      tags:
      - smom organizationunits views (public)
      summary: Get Process-Measurements that have been booked on a OrganizationUnit
        and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.organizationunitName.{organizationUnitName}.measurements.numeric.process.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementProcessByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        description: The unique Name of a OrganizationUnit
        required: true
        schema:
          type: string
          nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurement'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/organizationunitName/{organizationUnitName}/measurements/numeric/serial:
    get:
      tags:
      - smom organizationunits views (public)
      summary: Get Serial-Measurements that have been booked on a OrganizationUnit
        and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.organizationunitName.{organizationUnitName}.measurements.numeric.serial.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementSerialByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        description: The unique Name of a OrganizationUnit
        required: true
        schema:
          type: string
          nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurement'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/organizationunitName/{organizationUnitName}/measurementvalues/numeric/materialbin:
    get:
      tags:
      - smom organizationunits views (public)
      summary: Get Materialbin-Measurementvalues that have been booked on a OrganizationUnit
        and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.organizationunitName.{organizationUnitName}.measurementvalues.numeric.materialbin.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementValueMaterialBinByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        description: The unique Name of a OrganizationUnit
        required: true
        schema:
          type: string
          nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: materialBinName
        in: query
        description: Name of a MaterialBin
        schema:
          type: string
      - name: measurementName
        in: query
        description: Name of a Measurement
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partName
        in: query
        description: Name of a Part
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurementValueMaterialBin'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *PART NOT_FOUND* Part Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/organizationunitName/{organizationUnitName}/measurementvalues/numeric/process:
    get:
      tags:
      - smom organizationunits views (public)
      summary: Get Process-Measurementvalues that have been booked on a OrganizationUnit
        and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.organizationunitName.{organizationUnitName}.measurementvalues.numeric.process.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementValueProcessByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        description: The unique Name of a OrganizationUnit
        required: true
        schema:
          type: string
          nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: measurementName
        in: query
        description: Name of a Meausrement
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partId
        in: query
        description: Part Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurementValue'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/organizationunitName/{organizationUnitName}/measurementvalues/numeric/serial:
    get:
      tags:
      - smom organizationunits views (public)
      summary: Get Serial-Measurementvalues that have been booked on a OrganizationUnit
        and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.organizationunitName.{organizationUnitName}.measurementvalues.numeric.serial.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementValueSerialByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        description: The unique Name of a OrganizationUnit
        required: true
        schema:
          type: string
          nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: measurementName
        in: query
        description: Name of a Meausrement
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partId
        in: query
        description: Part Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurementValue'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/registrations/workers/{workername}:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get current Registrations for a worker at the stations
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationViewResource_readRegistrationsForWorker
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workername
        in: path
        description: Name of a Worker
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerRegistrationView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/registrations/workers/{workername}/histories:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get historical De-Registrations for a worker at the stations
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.registrations.workers.{workername}.histories.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationViewResource_readDeregistrationsForWorker
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workername
        in: path
        description: Name of a Worker
        required: true
        schema:
          type: string
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          default: NOW_MINUS_P14D
          type: string
          example: 2021-10-09T15:00:00Z
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          default: NOW_PLUS_P1D
          type: string
          example: 2021-10-10T15:00:00Z
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerDeregistrationView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/workorders:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Activations based on the given Parameter
      description: |
        At least one filter has to be given
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationViewResource_readForFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        description: Limit the Result
        required: false
        schema:
          format: int32
          type: integer
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        schema:
          type: string
      - name: topOrganizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: topOrganizationUnitName
        in: query
        schema:
          type: string
      - name: workorderClusterId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: query
        schema:
          type: string
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivationView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/workorders/histories:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get historical workorder-activations
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.workorders.histories.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkorderActivationHistoryViewResource_readForFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: topOrganizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: topOrganizationUnitName
        in: query
        schema:
          type: string
      - name: workorderClusterId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: query
        schema:
          type: string
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkorderActivationHistoryView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/bookedUnitInfos:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get the Booked Units Info Object containing Quantities
        and Times
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.bookedUnitInfos.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* kpi_user\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_getBookedUnitsInfos
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: serialLimit
        in: query
        description: Maximum serial numbers to be considered
        required: false
        schema:
          format: int32
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookedUnitInfo'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - kpi_user
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/measurements/numeric/process:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Process-Measurements that have been booked on a OrganizationUnit
        and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.measurements.numeric.process.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementProcess
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurement'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/measurements/numeric/serial:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Serial-Measurements that have been booked on a OrganizationUnit
        and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.measurements.numeric.serial.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementSerial
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurement'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/measurements/textual/process:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Process-Measurements (Textual) that have been booked
        on a OrganizationUnit and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.measurements.textual.process.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementTextualProcess
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurement'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/measurements/textual/serial:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Serial-Measurements (Textual) that have been booked
        on a OrganizationUnit and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.measurements.textual.serial.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementTextualSerial
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurement'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/measurementvalues/numeric/materialbin:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get MaterialBin-Measurementvalues that have been booked
        on a OrganizationUnit and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.measurementvalues.numeric.materialbin.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementValueMaterialBin
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: measurementName
        in: query
        description: Name of a Meausrement
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partId
        in: query
        description: Part Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurementValueMaterialBin'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/measurementvalues/numeric/process:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Process-Measurementvalues that have been booked on
        a OrganizationUnit and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.measurementvalues.numeric.process.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementValueProcess
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: measurementName
        in: query
        description: Name of a Meausrement
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partId
        in: query
        description: Part Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurementValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/measurementvalues/numeric/serial:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Serial-Measurementvalues that have been booked on a
        OrganizationUnit and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.measurementvalues.numeric.serial.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementValueSerial
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: measurementName
        in: query
        description: Name of a Meausrement
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partId
        in: query
        description: Part Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurementValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/measurementvalues/textual/process:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Process-Measurementvalues (Textual) that have been
        booked on a OrganizationUnit and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.measurementvalues.textual.process.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementTextualValueProcess
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: measurementName
        in: query
        description: Name of a Meausrement
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partId
        in: query
        description: Part Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurementValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/measurementvalues/textual/serial:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Serial-Measurementvalues (Textual) that have been booked
        on a OrganizationUnit and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.measurementvalues.textual.serial.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitMeasurementTextualValueSerial
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: measurementName
        in: query
        description: Name of a Meausrement
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partId
        in: query
        description: Part Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitMeasurementValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/output:
    get:
      tags:
      - smom organizationunits views (private)
      summary: 'PRIVATE API Returns the startup phase of a station and in context
        to a workorder (Line i.e.) '
      description: |
        Get the sum of booked Serialunits PassBookings and the Pass-Quantity of Quantity Bookings for a Workorder on a Minute Base
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_getOutput
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderWorkstepId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputOverTime'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/outputovertime:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get the output for given Dateperiod grouped by workorder
      description: "Get the sum of booked Serialunits PassBookings and the Pass-Quantity\
        \ of Quantity Bookings grouped by Workorder on a Minute Base\n\n  ### Date-Time\
        \ rules\n\n* maximal allowed duration between fromDate and toDate is 60 days\
        \ (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.outputovertime.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_getOutputOverTime
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputOverTime'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/productionhistory:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get Production History for a OrganizationUnit and a DateRange
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.productionhistory.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_readOrganizationUnitProductionHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderWorkstepId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitProductionHistory'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/registrations:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get current registrations of worker at a station
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationViewResource_readRegistrationsForStationId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of a OrganizationUnit from Type:STATION
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerRegistrationView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/registrations/histories:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API Get historical Deregistrations for a station
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.registrations.histories.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitWorkerRegistrationViewResource_readDeregistrationsForStationId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of a OrganizationUnit from Type:STATION
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          default: NOW_MINUS_P14D
          type: string
          example: 2021-10-09T15:00:00Z
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          default: NOW_PLUS_P1D
          type: string
          example: 2021-10-10T15:00:00Z
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitWorkerDeregistrationView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{id}/smtequipments/critical:
    get:
      tags:
      - smom organizationunits views (private)
      summary: PRIVATE API calculates and returns the critical SmtEquipment the OrganizationUnit
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{id}.smtequipments.critical.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.organizationunit.boundary.OrganizationUnitViewResource_getCriticalSmtEquipment
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a OrganizationUnit from Type STATION
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        description: Workorder Id
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmtEquipmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/organizationunits/{organizationUnitId}/assignments:
    get:
      tags:
      - mdc organizationunits views (private)
      summary: PRIVATE API get the Assignments for the given station
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitAssignmentViewResource_readAssignments
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/organizationunits/{organizationUnitId}/conditions:
    get:
      tags:
      - mdc organizationunits views (private)
      summary: PRIVATE API get Conditions for a station in given time
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{organizationUnitId}.conditions.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* mdc_admin\n* mdc_user\n"
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionViewResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitConditionMessage'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/organizationunits/{organizationUnitId}/conditions/current:
    get:
      tags:
      - mdc organizationunits views (private)
      summary: PRIVATE API get the current condition for the given station
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionViewResource_readCurrent
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitConditionMessage'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/organizationunits/{organizationUnitId}/conditions/current/tree:
    get:
      tags:
      - mdc organizationunits views (private)
      summary: PRIVATE API get the current conditions for the given OU as Tree
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionViewResource_readCurrentTree
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitCurrentConditionView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/organizationunits/{organizationUnitId}/downtimes/categorized:
    get:
      tags:
      - mdc organizationunits views (private)
      summary: 'PRIVATE API Get the quantity of Downtimes grouped in duration-categories. '
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{organizationUnitId}.downtimes.categorized.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* mdc_admin\n* mdc_user\n"
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionViewResource_readCategorizedDowntimes
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: groupBy
        in: query
        schema:
          allOf:
          - $ref: '#/components/schemas/GroupBy'
          - default: HOUR
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategorizedDowntime'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/organizationunits/{organizationUnitId}/downtimes/top:
    get:
      tags:
      - mdc organizationunits views (private)
      summary: PRIVATE API get the TopX Downtimes. Aggregate by duration and amount
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.organizationunits.{organizationUnitId}.downtimes.top.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* mdc_admin\n* mdc_user\n"
      operationId: io.gec.smom.mdc.condition.boundary.OrganizationUnitConditionViewResource_readTopXDowntimes
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: topX
        in: query
        schema:
          format: int32
          default: "10"
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Downtime'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/organizationunits/{organizationUnitId}/messages:
    get:
      tags:
      - mdc organizationunits views (private)
      summary: PRIVATE API get the MessageAssignments for the given station
      description: |
        ### Required roles
        * mdc_admin
        * mdc_user
      operationId: io.gec.smom.mdc.message.boundary.OrganizationUnitMessageAssignmentViewResource_readAssignments
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - mdc_admin
        - mdc_user
      - keycloak_auth:
        - mdc_admin
        - mdc_user
  /smartmom-svc/api/views/paretos/equipmentLocationPareto:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Values (name=equipmentLocation) for Daterange
        grouped by equipmentLocation
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.equipmentLocationPareto.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readEquipmentLocationPareto
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentName
        in: query
        schema:
          type: string
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/equipmentLocationParetoStacked:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Stacked Values (name=equipmentLocation) for
        Daterange grouped by equipmentLocation
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.equipmentLocationParetoStacked.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readEquipmentLocationParetoStacked
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentName
        in: query
        schema:
          type: string
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoStackedValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/equipmentNamePareto:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Values (name=equipmentName) for Daterange grouped
        by equipmentName
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.equipmentNamePareto.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readEquipmentNamePareto
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/failureLocationPareto:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Values (name=failureLocation) for Daterange
        grouped by FailureLocation
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.failureLocationPareto.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readFailureLocationPareto
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: failureName
        in: query
        schema:
          type: string
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/failureLocationParetoStacked:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Stacked Values (name=failureLocation) for Daterange
        grouped by FailureLocation
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.failureLocationParetoStacked.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readFailureLocationParetoStacked
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: failureName
        in: query
        schema:
          type: string
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: withPseudo
        in: query
        schema:
          default: "false"
          type: boolean
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoStackedValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/failureNamePareto:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Values (name=failureName) for Daterange grouped
        by FailureName
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.failureNamePareto.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readFailureNamePareto
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: withPseudo
        in: query
        schema:
          default: "false"
          type: boolean
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/materialBookingLocationPareto:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Values (name=Location) for Daterange grouped
        by Location
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.materialBookingLocationPareto.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readMaterialLocationPareto
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: materialName
        in: query
        schema:
          type: string
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/materialBookingLocationParetoStacked:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Stacked Values (name=Location) for Daterange
        grouped by Location
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.materialBookingLocationParetoStacked.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readMaterialLocationParetoStacked
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: materialName
        in: query
        schema:
          type: string
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoStackedValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/materialBookingMaterialPartNamePareto:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Values (name=PartName) for Daterange grouped
        by PartName
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.materialBookingMaterialPartNamePareto.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readMaterialNamePareto
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/measurementNumericNamePareto:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Values (name=Measurement Name) for Daterange
        grouped by Measurement Name
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.measurementNumericNamePareto.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readMeasurementNumericNamePareto
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/paretos/measurementTextualNamePareto:
    get:
      tags:
      - smom paretos views (private)
      summary: PRIVATE API Get Pareto Values (name=Measurement Name) for Daterange
        grouped by Measurement Name
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.paretos.measurementTextualNamePareto.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.pareto.boundary.ParetoViewResource_readMeasurementTextualNamePareto
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: processLocation
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings:
    get:
      tags:
      - smom serialunitbookings views (public)
      summary: Get all SerialunitBookings that matches the Filter Criteria
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readSerialunitBookingsByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: bookStates
        in: query
        description: Filter for an Array of bookState
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SerialunitBookingState'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: Filter for OrganizationUnitId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Filter for OrganizationUnitName
        schema:
          type: string
      - name: partId
        in: query
        description: Filter for PartId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partName
        in: query
        description: Filter for PartName
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workorderClusterId
        in: query
        description: Filter for WorkorderClusterId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: query
        description: Filter for WorkorderClusterName
        schema:
          type: string
      - name: workorderClusterPosition
        in: query
        description: Filter for WorkorderClusterPosition
        schema:
          type: string
      - name: workorderId
        in: query
        description: Filter for WorkorderId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Filter for WorkorderName
        schema:
          type: string
      - name: workorderWorkstepId
        in: query
        description: Filter for Workstep by ID
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderWorkstepName
        in: query
        description: Filter for Workstep by Name
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitBookingSerialunitView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings/download:
    get:
      tags:
      - smom serialunitbookings views (private)
      summary: PRIVATE API Get all SerialunitBookings that matches the Filter Criteria
        as Plain Text (CSV)
      description: |
        Get all Serialunitbookings that matches the Filter Criteria as Plain Text (CSV). Following columns are includued in the CSV:
        SerialunitId, SerialunitName, SerialunitDescription, SerialunitPosition, BookDate, BookState, FirstBooking, Created, CycleTime, SetupTime, OrganizationUnitId, OrganizationUnitName, OrganizationUnitDescription, WorkorderId, WorkorderName, WorkorderDescription, PartId, PartName, PartDescription, WorsktepLocation, WorsktepId
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_downloadSerialunitBookingsByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: bookStates
        in: query
        description: Filter for an Array of bookState
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SerialunitBookingState'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: Filter for OrganizationUnitId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Filter for OrganizationUnitName
        schema:
          type: string
      - name: partId
        in: query
        description: Filter for PartId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partName
        in: query
        description: Filter for PartName
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workorderClusterId
        in: query
        description: Filter for WorkorderClusterId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: query
        description: Filter for WorkorderClusterName
        schema:
          type: string
      - name: workorderClusterPosition
        in: query
        description: Filter for WorkorderClusterPosition
        schema:
          type: string
      - name: workorderId
        in: query
        description: Filter for WorkorderId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Filter for WorkorderName
        schema:
          type: string
      - name: workorderWorkstepId
        in: query
        description: Filter for Workstep by ID
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderWorkstepName
        in: query
        description: Filter for Workstep by Name
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
            prev:
              description: link to previous page
              style: simple
            next:
              description: link to next page
              style: simple
          content:
            text/plain: {}
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings/grouped:
    get:
      tags:
      - smom serialunitbookings views (private)
      summary: "PRIVATE API Group SerialunitBookings by Part, Workorder, Workstep\
        \ and OrganizationUnit and get the accumulate Quantities for the given Filter\
        \ Criteria"
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readGroupedBookingsByFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: bookStates
        in: query
        description: Filter for an Array of bookState
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SerialunitBookingState'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: Filter for OrganizationUnitId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Filter for OrganizationUnitName
        schema:
          type: string
      - name: partId
        in: query
        description: Filter for PartId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partName
        in: query
        description: Filter for PartName
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workorderClusterId
        in: query
        description: Filter for WorkorderClusterId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: query
        description: Filter for WorkorderClusterName
        schema:
          type: string
      - name: workorderClusterPosition
        in: query
        description: Filter for WorkorderClusterPosition
        schema:
          type: string
      - name: workorderId
        in: query
        description: Filter for WorkorderId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Filter for WorkorderName
        schema:
          type: string
      - name: workorderWorkstepId
        in: query
        description: Filter for Workstep by ID
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderWorkstepName
        in: query
        description: Filter for Workstep by Name
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitGroupedBookingView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings/organizationUnitId/{id}:
    get:
      tags:
      - smom serialunitbookings views (private)
      summary: PRIVATE API Get bookings for a given OrganizationUnitId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readSerialunitBookingForOrganizationUnit
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          default: NOW_MINUS_P14D
          type: string
      - name: limit
        in: query
        description: "Limit the Result. If not set, Limit is 10, Limits >1000 are\
          \ shrinked to 1000"
        schema:
          format: int32
          default: "100"
          type: integer
      - name: offset
        in: query
        description: "Offset of returned rows, Default:0 if not given"
        schema:
          format: int32
          default: "0"
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          default: NOW_PLUS_P1D
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitBookingSerialunitView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings/organizationUnitId/{organizationUnitId}/serialunitId/{serialUnitId}/parallel:
    get:
      tags:
      - smom serialunitbookings views (private)
      summary: PRIVATE API Get parallel bookings for a given OrganizationUnitId and
        SerialUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readParallelSerialunitBookingForOrganizationUnitAndSerialUnit
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          format: uuid
          description: Filter for OrganizationUnitId
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: serialUnitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParallelSerialunitBookingSerialunitView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  ? /smartmom-svc/api/views/serialunitbookings/organizationUnitId/{organizationUnitId}/workorderClusterId/{workorderClusterId}/parallel
  : get:
      tags:
      - smom serialunitbookings views (private)
      summary: PRIVATE API Get parallel bookings for a given OrganizationUnitId and
        WorkorderCluster
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readParallelSerialunitBookingForOrganizationUnitAndWorkorderCluster
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitId
        in: path
        required: true
        schema:
          format: uuid
          description: Filter for OrganizationUnitId
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: workorderClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParallelSerialunitBookingSerialunitView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings/{serialunitId}/failures:
    get:
      tags:
      - smom serialunitbookings views (public)
      summary: Get Failure Bookings for a SerialunitBooking identified by serialunitId
        and bookDate
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readFailures
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: bookDate
        in: query
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FailureBookingView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings/{serialunitId}/materials:
    get:
      tags:
      - smom serialunitbookings views (public)
      summary: Get Material Bookings for a SerialunitBooking identified by serialunitId
        and bookDate
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readMaterials
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: bookDate
        in: query
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBookingView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings/{serialunitId}/measurements/numeric:
    get:
      tags:
      - smom serialunitbookings views (public)
      summary: Get Measurement Bookings Numeric for a SerialunitBooking identified
        by serialunitId and bookDate
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readMeasurementNumerics
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: bookDate
        in: query
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitMeasurementBookingNumericView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings/{serialunitId}/measurements/textual:
    get:
      tags:
      - smom serialunitbookings views (public)
      summary: Get Measurement Bookings Textual for a SerialunitBooking identified
        by serialunitId and bookDate
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readMeasurementTextuals
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: bookDate
        in: query
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitMeasurementBookingTextualView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunitbookings/{serialunitId}/smtequipments:
    get:
      tags:
      - smom serialunitbookings views (private)
      summary: "PRIVATE API Get SmtEquipmentBookingView by X-PlantId, serialunitId,\
        \ bookDate"
      description: |
        Get SmtEquipment Bookings for a SerialunitBooking identified by serialunitId and bookDate
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitBookingViewResource_readSmtEquipments
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: bookDate
        in: query
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmtEquipmentBookingView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits:
    get:
      tags:
      - smom serialunits views (public)
      summary: Get the SerialunitView for filter
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_read
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: dateFilterMode
        in: query
        description: Serialunits property has to be greater given fromDate and lesser-equal
          given toDate. Result will be ordered descending by this property.
        schema:
          allOf:
          - $ref: '#/components/schemas/SerialunitViewFilterMode'
          - default: created
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: partDescription
        in: query
        description: may contain wildcards
        schema:
          type: string
      - name: partName
        in: query
        description: may contain wildcards
        schema:
          type: string
      - name: serialunitDescription
        in: query
        description: may contain wildcards
        schema:
          type: string
      - name: serialunitName
        in: query
        description: may contain wildcards
        schema:
          type: string
      - name: serialunitUnitState
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SerialunitState'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workorderName
        in: query
        description: may contain wildcards
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/merges/{serialunitId}/histories:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API get the MergeHistory for this (Child)-Serialunit. This
        Serialunit was merged in or unmerged from
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitMergeViewResource_readMergeHistorieForChild
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: serialunitId
        in: path
        description: Id if the (Child)-Serialunit the MergeHistory is resolved for
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: state
        in: query
        description: "Optional Filter for Merge-State:MERGED, UNMERGED"
        schema:
          $ref: '#/components/schemas/MergeState'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitMergeHistoryChildView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/paretos/failure:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API Get Failure Pareto for Serialunits
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_getFailureParetoForSerialunits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        description: Limit the Result
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/paretos/material:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API Get Material Pareto for Serialunits
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_getMaterialParetoForSerialunits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        description: Limit the Result
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/paretos/materialbin:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API Get MaterialBin Pareto for Serialunits
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_getMaterialBinParetoForSerialunits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        description: Limit the Result
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/paretos/smtequipment:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API Get SmtEquipment Pareto for Serialunits
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_getEquipmentParetoForSerialunits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        description: Limit the Result
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParetoValue'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/reservednumbers/unused:
    get:
      tags:
      - smom serialunits views (public)
      summary: Get serialunits with unused reserved numbers
      description: |
        Get all serialunits of given part with at least one free reserved number (used = null) that have been booked at given organizationUnit in given time.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_getUnusedSerialnumbers
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitName
        in: query
        required: true
        schema:
          type: string
          nullable: false
      - name: partName
        in: query
        required: true
        schema:
          type: string
          nullable: false
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workorderName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitReservedNumberView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *PART NOT_FOUND* Part Object Not found
            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/reservednumbers/{name}:
    get:
      tags:
      - smom serialunits views (public)
      summary: "Get SerialunitReservedNumberView by X-PlantId, name"
      description: |
        Get view of serialunit and its's reserved numbers for any of it's names
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_getReservedNumberView
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: name
        in: path
        description: May be the name of a serialunit or any of the names of the reserved
          numbers
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitReservedNumberView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/serialunitsWithFailures:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API Get all Serialunits that matches the Filter Criteria as
        Plain Text (CSV)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_readForFailureName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: failureName
        in: query
        schema:
          type: string
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: "Limit the number of Serialunits, default:5000"
        required: false
        schema:
          format: int32
          default: "5000"
          type: integer
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: withPseudo
        in: query
        description: Filter for Pseudo Errors
        required: false
        schema:
          type: boolean
      - name: workorderId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workstepLocation
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            text/plain: {}
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/{id}:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API Get the SerialunitView for a SerialunitId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_readById
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: Id of the Serialunit to read the SerialunitView for
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialunitView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/{id}/failures:
    get:
      tags:
      - smom serialunits views (public)
      summary: Get Failure Bookings for a SerialunitId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_readFailures
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FailureBookingView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/{id}/histories:
    get:
      tags:
      - smom serialunits views (public)
      summary: Get the SerialunitHistory for a SerialunitId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_readHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialunitHistoryView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/{id}/materials:
    get:
      tags:
      - smom serialunits views (public)
      summary: Get Material Bookings for a SerialunitId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_readMaterials
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialBookingView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/{id}/measurements/numeric:
    get:
      tags:
      - smom serialunits views (public)
      summary: "Get SerialunitMeasurementBookingNumericView by X-PlantId, id"
      description: |
        Get Measurement Bookings Numeric for a SerialunitId
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_readMeasurementNumerics
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitMeasurementBookingNumericView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/{id}/measurements/textual:
    get:
      tags:
      - smom serialunits views (public)
      summary: Get Measurement Bookings Textual for a SerialunitId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_readMeasurementTextuals
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitMeasurementBookingTextualView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *SERIALUNIT NOT_FOUND* Serialunit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/{id}/smtequipments:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API Get Equipment Bookings for a SerialunitId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitViewResource_readEquipments
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmtEquipmentBookingView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/{parentSerialunitId}/merges:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API Get the currently merged Serialunits for a given Id of
        a ParentSerialunit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitMergeViewResource_readMerges
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: parentSerialunitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialunitMergeView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/serialunits/{parentSerialunitId}/merges/histories:
    get:
      tags:
      - smom serialunits views (private)
      summary: PRIVATE API get the MergeHistory for this ParentSerialunit. (Child)-Serialunits
        that was merged in or unmerged from this ParentSerialunit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.serialunit.boundary.SerialunitMergeViewResource_readMergeHistorieForParent
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: parentSerialunitId
        in: path
        description: Id if the ParentSerialunit the MergeHistory is resolved for
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: state
        in: query
        description: "Optional Filter for Merge-State:MERGED, UNMERGED"
        schema:
          $ref: '#/components/schemas/MergeState'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerialunitMergeHistoryView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/activations/history:
    get:
      tags:
      - smom setups views (private)
      summary: "PRIVATE API Get WorkorderMaterialBinSetupView by X-PlantId, fromDate,\
        \ materialBinId, materialBinName, materialChargeId, materialChargeName, materialPartId,\
        \ materialPartName, organizationUnitId, organizationUnitName, partId, partName,\
        \ toDate, workorderId, workorderName"
      description: |
        Please use /views/setups/materialbins/XXXX instead. Get the Setup that is/was activated for Workorders on OrganizationUnits.fromDate/toDate can be used to filter for a time range.<BR> At least one of the following Filter-Parameter has to be given (by Id or Name): Workorder, Part, MaterialBin, MaterialPart, MaterialCharge<BR>The Setup is ordered by validFrom(setupDate) and setupPosition
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupViewResource_deprecatedReadWorkorderMaterialBinSetupHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: materialBinId
        in: query
        description: Id of the MaterialBin
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinName
        in: query
        description: Name of the MaterialBin
        schema:
          type: string
      - name: materialChargeId
        in: query
        description: Id of the materialCharge
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialChargeName
        in: query
        description: Name of the materialCharge
        schema:
          type: string
      - name: materialPartId
        in: query
        description: Id of the materialBin Part
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialPartName
        in: query
        description: Name of the materialBin Part
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: Id of the OrganizationUnit the Setup was activated at
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Name of the OrganizationUnit the Setup was activated at
        schema:
          type: string
      - name: partId
        in: query
        description: Id of the Workorder Part
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partName
        in: query
        description: Name of the Workorder Part
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          type: string
      - name: workorderId
        in: query
        description: Id of the Workorder
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Name of the Workorder
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderMaterialBinSetupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/activations/organizationUnitId/{id}:
    get:
      tags:
      - smom setups views (private)
      summary: "PRIVATE API Get WorkorderMaterialBinSetupView by X-PlantId, id"
      description: |
        Please use /views/setups/materialbins/XXXX instead. Get the Setup that currently activated for a Workorder on a OrganizationUnit. The Setup is ordered by validFrom(setupDate) and setupPosition
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupViewResource_deprecatedReadActiveWorkorderMaterialBinSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderMaterialBinSetupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/activations/organizationUnitName/{organizationUnitName}:
    get:
      tags:
      - smom setups views (public)
      summary: "Get WorkorderMaterialBinSetupView by X-PlantId, organizationUnitName"
      description: |
        Please use /views/setups/materialbins/XXXX instead. Get the Setup that currently activated for a Workorder on a OrganizationUnit. The Setup is ordered by validFrom(setupDate) and setupPosition
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupViewResource_deprecatedReadActiveWorkorderMaterialBinSetupForName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderMaterialBinSetupView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/equipments/activations/history:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API Get the Setup that is/was activated for Workorders on OrganizationUnits
      description: |
        fromDate/toDate can be used to filter for a time range.<BR> At least one of the following Filter-Parameter has to be given (by Id or Name): Workorder, Part, Equipment, EquipmentPart<BR>The Setup is ordered by validFrom(setupDate) and setupPosition
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.WorkorderEquipmentSetupViewResource_readWorkorderEquipmentSetupHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentId
        in: query
        description: Id of the Equipment
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentName
        in: query
        description: Name of the Equipment
        schema:
          type: string
      - name: equipmentPartId
        in: query
        description: Id of the Equipment Part
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentPartName
        in: query
        description: Name of the Equipment Part
        schema:
          type: string
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: Id of the OrganizationUnit the Setup was activated at
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Name of the OrganizationUnit the Setup was activated at
        schema:
          type: string
      - name: partId
        in: query
        description: Id of the Workorder Part
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partName
        in: query
        description: Name of the Workorder Part
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          type: string
      - name: workorderId
        in: query
        description: Id of the Workorder
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Name of the Workorder
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderEquipmentSetupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/equipments/activations/organizationUnitId/{id}:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API Get the Setup that currently activated for a Workorder
        on a OrganizationUnit
      description: |
        The Setup is ordered by validFrom(setupDate) and setupPosition
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.WorkorderEquipmentSetupViewResource_readActiveWorkorderEquipmentSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderEquipmentSetupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/equipments/activations/organizationUnitName/{organizationUnitName}:
    get:
      tags:
      - smom setups views (public)
      summary: Get the Setup that currently activated for a Workorder on a OrganizationUnit
      description: |
        The Setup is ordered by validFrom(setupDate) and setupPosition
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.WorkorderEquipmentSetupViewResource_readActiveWorkorderEquipmentSetupForName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderEquipmentSetupView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/equipments/organizationUnitId/{id}:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API What is setup at the OrganizationUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.OrganizationUnitSetupEquipmentViewResource_readOrganizationUnitSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitSetupEquipmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/equipments/organizationUnitName/{organizationUnitName}:
    get:
      tags:
      - smom setups views (public)
      summary: What is setup at the OrganizationUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.OrganizationUnitSetupEquipmentViewResource_readOrganizationUnitSetupByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitSetupEquipmentView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/equipments/organizationunits/{id}/history:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API History of which equipments have been setup at given organizationUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.OrganizationUnitSetupEquipmentViewResource_getHistoryForOrganizationUnit
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: equipmentId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryOrganizationUnitEquipmentSetupView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/equipments/{id}/history:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API History of where the equipment has been setup
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.equipment.boundary.OrganizationUnitSetupEquipmentViewResource_getHistoryForEquipment
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryOrganizationUnitEquipmentSetupView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *EQUIPMENT NOT_FOUND* Equipment Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/materialbins/activations/history:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API Get the Setup that is/was activated for Workorders on OrganizationUnits
      description: |
        fromDate/toDate can be used to filter for a time range.<BR> At least one of the following Filter-Parameter has to be given (by Id or Name): Workorder, Part, MaterialBin, MaterialPart, MaterialCharge<BR>The Setup is ordered by validFrom(setupDate) and setupPosition
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupViewResource_readWorkorderMaterialBinSetupHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: materialBinId
        in: query
        description: Id of the MaterialBin
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialBinName
        in: query
        description: Name of the MaterialBin
        schema:
          type: string
      - name: materialChargeId
        in: query
        description: Id of the materialCharge
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialChargeName
        in: query
        description: Name of the materialCharge
        schema:
          type: string
      - name: materialPartId
        in: query
        description: Id of the materialBin Part
        schema:
          $ref: '#/components/schemas/UUID'
      - name: materialPartName
        in: query
        description: Name of the materialBin Part
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: Id of the OrganizationUnit the Setup was activated at
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Name of the OrganizationUnit the Setup was activated at
        schema:
          type: string
      - name: partId
        in: query
        description: Id of the Workorder Part
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partName
        in: query
        description: Name of the Workorder Part
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          type: string
      - name: workorderId
        in: query
        description: Id of the Workorder
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Name of the Workorder
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderMaterialBinSetupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/materialbins/activations/organizationUnitId/{id}:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API Get the Setup that currently activated for a Workorder
        on a OrganizationUnit
      description: |
        The Setup is ordered by validFrom(setupDate) and setupPosition
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupViewResource_readActiveWorkorderMaterialBinSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderMaterialBinSetupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/materialbins/activations/organizationUnitName/{organizationUnitName}:
    get:
      tags:
      - smom setups views (public)
      summary: Get the Setup that currently activated for a Workorder on a OrganizationUnit
      description: |
        The Setup is ordered by validFrom(setupDate) and setupPosition
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.WorkorderMaterialBinSetupViewResource_readActiveWorkorderMaterialBinSetupForName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderMaterialBinSetupView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/materialbins/organizationUnitId/{id}:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API What is setup at the OrganizationUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitSetupMaterialBinViewResource_readOrganizationUnitSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitSetupMaterialBinView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/materialbins/organizationUnitName/{organizationUnitName}:
    get:
      tags:
      - smom setups views (public)
      summary: What is setup at the OrganizationUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitSetupMaterialBinViewResource_readOrganizationUnitSetupByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitSetupMaterialBinView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/materialbins/organizationunits/{id}/history:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API History of which materialBins have been setup at given
        organizationUnit
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitSetupMaterialBinViewResource_getHistoryForOrganizationUnit
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: materialBinId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryOrganizationUnitMaterialBinSetupView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/materialbins/{id}/history:
    get:
      tags:
      - smom setups views (private)
      summary: PRIVATE API History of where the materialBin has been setup
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitSetupMaterialBinViewResource_getHistoryForEquipment
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryOrganizationUnitMaterialBinSetupView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *MATERIAL_BIN NOT_FOUND* MaterialBin Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/organizationUnitId/{id}:
    get:
      tags:
      - smom setups views (private)
      summary: "PRIVATE API Get OrganizationUnitSetupMaterialBinView by X-PlantId,\
        \ id"
      description: |
        Please use /views/setups/materialbins/XXXX instead. What is setup at the OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitSetupMaterialBinViewResource_deprecatedReadOrganizationUnitSetup
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitSetupMaterialBinView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/setups/organizationUnitName/{organizationUnitName}:
    get:
      tags:
      - smom setups views (public)
      summary: "Get OrganizationUnitSetupMaterialBinView by X-PlantId, organizationUnitName"
      description: |
        Please use /views/setups/materialbins/XXXX instead. What is setup at the OrganizationUnit
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.setup.material.boundary.OrganizationUnitSetupMaterialBinViewResource_deprecatedReadOrganizationUnitSetupByName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUnitSetupMaterialBinView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *ORGANIZATIONUNIT NOT_FOUND* OrganizationUnit Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/smtequipments:
    get:
      tags:
      - smom smtequipments views (private)
      summary: PRIVATE API Get SmtEquipments for Filter
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentViewResource_readEquipmentsForPartFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        description: Limit-Filter to restrict the amount of data
        required: false
        schema:
          format: int32
          type: integer
      - name: partName
        in: query
        schema:
          type: string
      - name: partType
        in: query
        schema:
          type: string
      - name: smtEquipmentName
        in: query
        schema:
          type: string
      - name: smtEquipmentType
        in: query
        schema:
          $ref: '#/components/schemas/SmtEquipmentType'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmtEquipmentView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/smtequipments/usageForEquipmentIds:
    post:
      tags:
      - smom smtequipments views (private)
      summary: PRIVATE API Get SmtEquipment Usage For SmtEquipmentIdsDATE_TIME_RULES
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentViewResource_getEquipmentUsageForEquipmentIds
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: partId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: withFailures
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                format: uuid
                pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
                type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "201":
          description: Created
          headers:
            location:
              description: link to created entity
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmtEquipmentUsageData'
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/smtequipments/usageForLocation:
    get:
      tags:
      - smom smtequipments views (private)
      summary: PRIVATE API Get SmtEquipment Usage For a Location
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.smtequipments.usageForLocation.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentViewResource_getEquipmentUsageForLocation
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: location
        in: query
        schema:
          type: string
      - name: partId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: withFailures
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmtEquipmentUsageData'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/smtequipments/{id}/bookings/grouped:
    get:
      tags:
      - smom smtequipments views (private)
      summary: PRIVATE API Get SmtEquipment Bookings Grouped for a SmtEquipmentId
      description: "\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.smtequipments.{id}.bookings.grouped.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentViewResource_readEquipmentBookingViewGroupedForEquipment
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of a SmtEquipment
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
      - name: toDate
        in: query
        description: Load values that are before this date
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmtEquipmentBookingViewGrouped'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/smtequipments/{id}/downloadSerialunits:
    get:
      tags:
      - smom smtequipments views (private)
      summary: PRIVATE API Get all SerialUnits for a given SmtEquipmentId and further
        Filter as Plain Text (CSV)
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.equipment.boundary.SmtEquipmentViewResource_downloadSerialUnits
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The unique id of the SmtEquipment
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: location
        in: query
        schema:
          type: string
      - name: partId
        in: query
        schema:
          $ref: '#/components/schemas/UUID'
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workstepLocation
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorderclusters:
    get:
      tags:
      - smom workorderclusters views (public)
      summary: get the workorderClusterViews for the given Filter
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterViewResource_getWorkorderClusterViews
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: clusterName
        in: query
        description: Name of the Cluster (Wildcard allowed)
        schema:
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: processState
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/WorkorderClusterProcessState'
      - name: state
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ReleaseState'
      - name: workorderName
        in: query
        description: Name of the Workorder
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderClusterView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorderclusters/{id}:
    get:
      tags:
      - smom workorderclusters views (private)
      summary: PRIVATE API find the workorderClusterView for given id
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderClusterViewResource_findWorkorderClusterView
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderClusterView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/name/{workorderName}/workorderworksteps:
    get:
      tags:
      - smom workorders views (public)
      summary: Get the WorkorderworkstepView for a WorkorderName and WorkstepName
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_readWorkorderWorkstepViewsForWorkorderName
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: path
        required: true
        schema:
          type: string
      - name: workstepName
        in: query
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderWorkstepView'
        "401":
          description: Not Authorized
        "403":
          description: |-
            Forbidden
            * *FORBIDDEN** The requested Task is forbidden
        "404":
          description: |-
            Not Found

            * *WORKORDER NOT_FOUND* Workorder Object Not found
            * *URL_NOT_FOUND** URL Not found
            * *NOT_FOUND** Object Not found
        "405":
          description: |-
            Method Not Allowed

            * *NOT_ALLOWED** Http Method not allowed for this URL
        "406":
          description: |-
            Not Acceptable

            * *ILLEGAL_ARGUMENT** A argument is not acceptable
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/workorderworksteps/organizationunits/lockgroups:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the current Locks on WorkorderworkstepOrganizationUnits
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getWorkorderWorkstepOrganizationUnitLocksForFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Lock created since fromDate
        schema:
          format: date-time
          type: string
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: lockGroupId
        in: query
        description: ID of an LockGroup to filter for
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockGroupName
        in: query
        description: Name of an LockGroup to filter for
        schema:
          type: string
      - name: lockTypeId
        in: query
        description: ID of an LockType to filter for
        schema:
          $ref: '#/components/schemas/UUID'
      - name: lockTypeName
        in: query
        description: Name of an LockType to filter for
        schema:
          type: string
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: ID of an OrganizationUnit to filter for
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Name of an OrganizationUnit to filter for
        schema:
          type: string
      - name: toDate
        in: query
        description: Lock created up to toDate
        schema:
          format: date-time
          type: string
      - name: workorderId
        in: query
        description: Id of a Workorder to filter for
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Name of a Workorder to filter for
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitLockGroupView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/workorderworksteps/organizationunits/{id}/lockgroups/histories:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the Lock History for a WorkorderWorkstepOrganizationUnit
      description: |
        Get the Lock History of a WorkorderWorkstepOrganizationUnit.  The Views shows active Locks and also removed Locks.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getWorkorderWorkstepOrganizationUnitLockHistory
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        description: The Id of the WorkorderWorkstepOrganizationUnit
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: limit
        in: query
        description: Limit of max. rows to retrieve (Default 50)
        schema:
          format: int32
          default: "50"
          type: integer
      - name: lockGroupId
        in: query
        description: "Optional Id of a LockGroup, to get only Locks with from these\
          \ LogGroup"
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitLockGroupHistoryView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/workorderworksteps/{id}:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the WorkorderworkstepView for a WorkorderWorkstepId
      description: |
        Get the WorkorderWorkstepView for a WorkorderworkstepId. The View contains the Workstep and its Workstep structure: WorkstepPositionOrga(with optional locks)  and the BomItems
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_readWorkorderWorkstepViewForWorkorderId
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderWorkstepView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/worksteps/bookings:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get workorder workstep booking based on the given parameter
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBookingViewResource_readForFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: Filter for OrganizationUnitId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Filter for OrganizationUnitName
        schema:
          type: string
      - name: partId
        in: query
        description: Filter for PartId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partName
        in: query
        description: Filter for PartName
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workorderClusterId
        in: query
        description: Filter for WorkorderClusterId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: query
        description: Filter for WorkorderClusterName
        schema:
          type: string
      - name: workorderClusterPosition
        in: query
        description: Filter for WorkorderClusterPosition
        schema:
          type: string
      - name: workorderId
        in: query
        description: Filter for WorkorderId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Filter for WorkorderName
        schema:
          type: string
      - name: workorderWorkstepId
        in: query
        description: Filter for Workstep by ID
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderWorkstepName
        in: query
        description: Filter for Workstep by Name
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderWorkstepBookingView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/worksteps/bookings/download:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get workorder workstep booking based on the given filter
        parameter and provide them as CSV
      description: |
        Get workorder workstep bookings for Filter and provide them as CSV. Following columns are includued in the CSV:
        BookDate, Created,QuantityInProcess, QuantityPass, QuantityFirstPass, QuantityFail, QuantityScrap,CycleTime, SetupTime, BookInfo,OrganizationUnitId, OrganizationUnitName, OrganizationUnitDescription,WorkorderId, WorkorderName, WorkorderDescription,WorkstepId, WorkstepName, WorkstepDescription
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBookingViewResource_downloadForFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: Filter for OrganizationUnitId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Filter for OrganizationUnitName
        schema:
          type: string
      - name: partId
        in: query
        description: Filter for PartId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partName
        in: query
        description: Filter for PartName
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          nullable: false
      - name: workorderClusterId
        in: query
        description: Filter for WorkorderClusterId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: query
        description: Filter for WorkorderClusterName
        schema:
          type: string
      - name: workorderClusterPosition
        in: query
        description: Filter for WorkorderClusterPosition
        schema:
          type: string
      - name: workorderId
        in: query
        description: Filter for WorkorderId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Filter for WorkorderName
        schema:
          type: string
      - name: workorderWorkstepId
        in: query
        description: Filter for Workstep by ID
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderWorkstepName
        in: query
        description: Filter for Workstep by Name
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            text/plain: {}
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/worksteps/bookings/grouped:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Group the workorder and get the accumulated Quantities
      description: "Group the workorder workstep booking by Part, Workorder, Workstep\
        \ and OrganizationUnit and get the accumulated Quantities for the given Filter\
        \ Criteria\n\n  ### Date-Time rules\n\n* maximal allowed duration between\
        \ fromDate and toDate is 60 days (see microprofile-configuration-key api.smartmom-svc.api.views.workorders.worksteps.bookings.grouped.maxduration,\
        \ default 60 days) \n* fromDate has to be before toDate\n* fromDate has to\
        \ be in the past\n\n### Required roles\n* smom_admin\n* smom_user\n"
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderWorkstepBookingViewResource_readGroupedForFilter
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fromDate
        in: query
        description: Load values that are after this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-09T15:00:00Z
          nullable: false
      - name: limit
        in: query
        description: Paging limit
        schema:
          format: int32
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
      - name: offset
        in: query
        description: Paging offset
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: organizationUnitId
        in: query
        description: Filter for OrganizationUnitId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: organizationUnitName
        in: query
        description: Filter for OrganizationUnitName
        schema:
          type: string
      - name: partId
        in: query
        description: Filter for PartId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: partName
        in: query
        description: Filter for PartName
        schema:
          type: string
      - name: toDate
        in: query
        description: Load values that are before this date
        required: true
        schema:
          format: date-time
          type: string
          example: 2021-10-10T15:00:00Z
          nullable: false
      - name: workorderClusterId
        in: query
        description: Filter for WorkorderClusterId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderClusterName
        in: query
        description: Filter for WorkorderClusterName
        schema:
          type: string
      - name: workorderClusterPosition
        in: query
        description: Filter for WorkorderClusterPosition
        schema:
          type: string
      - name: workorderId
        in: query
        description: Filter for WorkorderId
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderName
        in: query
        description: Filter for WorkorderName
        schema:
          type: string
      - name: workorderWorkstepId
        in: query
        description: Filter for Workstep by ID
        schema:
          $ref: '#/components/schemas/UUID'
      - name: workorderWorkstepName
        in: query
        description: Filter for Workstep by Name
        schema:
          type: string
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          headers:
            first:
              description: link to first page
              style: simple
              schema:
                type: string
            prev:
              description: link to previous page
              style: simple
              schema:
                type: string
            next:
              description: link to next page
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupedBookingView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the WorkorderView for a WorkorderId
      description: |
        Get the WorkorderWorkplanView for a WorkorderId. The View contains the Head: Workorder, Part, WorkorderWorkplan and WorkorderBom and also the Workstep Structure with the Worksteps and the WorkstepPositionOrganizations (with optional locks) and the BomItems for each Workstep
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getWorkorderView
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/bomitems:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the needed Bom Items for a given Workorder
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getBomItemsForWorkorder
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkorderWorkstepBomItemView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/highestBookedWorkstep:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the highest booked Workstep in the workorder (PASS-bookings)
      description: |
        Get the highest booked Workstep in the workorder (PASS-bookings) and returns this workstep including all WorkorderWorkstepOrganizationunit with bookings.
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getHighestBookedWorkstep
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderHighestBookedWorkstep'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/organizationunits:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the OrganizationUnits that have been booked for a WorkorderId
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_readOrganisationUnitsForWorkorder
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUnitView'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/productionProgress:
    get:
      tags:
      - smom workorders views (private)
      summary: PRIVATE API Get the Amount of produced Units so far based on the highest
        Workstep and WorkstepLocation for the given Workorder
      description: |
        Get the Amount of produced Units based on serialBookings so far based on the highest Workstep and WorkstepLocation for the given Workorder<BR />Deprecated: Only supports serialunitbookings with one booking station per workstep. The delivered quantity is based on the station.When multiple station process the workstep the quantity of one of the booking stations is returned.<BR />Use these methode only in context of serialunitbookings with one booking station per workstep
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_getProductionProgress
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkorderSerialunitBookingProductionProgress'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      deprecated: true
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/api/views/workorders/{id}/serialunits:
    get:
      tags:
      - smom workorders views (private)
      summary: 'PRIVATE API reads all SerialUnits for one workorderId '
      description: |
        ### Required roles
        * smom_admin
        * smom_user
      operationId: io.gec.smom.smom.workorder.boundary.WorkorderViewResource_readSerialUnitByWorkorder
      parameters:
      - name: X-PlantId
        in: header
        description: UUID of the Plant. If not set the user default Plant will be
          used
        schema:
          $ref: '#/components/schemas/UUID'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: "All clients using the API have to be prepared that other Http-States\
            \ and failures might be reported as enlisted here. \nReturnCodes marked\
            \ with * can occure at runtime and define no specific object. \nAll apis\
            \ will return following json-body in case of an error and ResultHeader\
            \ in case of warnings."
          headers:
            Warning:
              $ref: '#/components/schemas/Warning'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GecFailure'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Serialunit'
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "400":
          $ref: '#/components/schemas/ResponseCodeMapping400'
        "422":
          $ref: '#/components/schemas/ResponseCodeMapping422'
        "412":
          $ref: '#/components/schemas/ResponseCodeMapping412'
        "500":
          $ref: '#/components/schemas/ResponseCodeMapping500'
        "404":
          $ref: '#/components/schemas/ResponseCodeMapping404'
        "405":
          $ref: '#/components/schemas/ResponseCodeMapping405'
        "417":
          $ref: '#/components/schemas/ResponseCodeMapping417'
        "406":
          $ref: '#/components/schemas/ResponseCodeMapping406'
        "409":
          $ref: '#/components/schemas/ResponseCodeMapping409'
      security:
      - keycloak_auth:
        - smom_admin
        - smom_user
      - keycloak_auth:
        - smom_admin
        - smom_user
  /smartmom-svc/q/logging-manager:
    summary: "Return info on all loggers, or a specific logger"
    description: Logging Manager Loggers
    get:
      tags:
      - system info (private)
      summary: Information on Logger(s)
      description: Get information on all loggers or a specific logger.
      operationId: logging_manager_get_all
      parameters:
      - name: loggerName
        in: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLoggerInfo'
        "404":
          description: Not Found
    post:
      tags:
      - system info (private)
      summary: Update log level
      description: Update a log level for a certain logger
      operationId: logging_manager_update
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                loggerLevel:
                  $ref: '#/components/schemas/LoggerLevel'
                loggerName:
                  $ref: '#/components/schemas/LoggerName'
      responses:
        "201":
          description: Created
  /smartmom-svc/q/logging-manager/levels:
    summary: Return all levels that is available
    description: 'All available levels '
    get:
      tags:
      - system info (private)
      summary: Get all available levels
      description: This returns all possible log levels
      operationId: logging_manager_levels
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListString'
  /smartmom-svc/q/health:
    summary: MicroProfile Health provides a way for your application to distribute
      information about its healthiness state to state whether or not it is able to
      function properly
    description: MicroProfile Health Endpoint
    get:
      tags:
      - system info (private)
      summary: "An aggregated view of the Liveness, Readiness and Startup of this\
        \ application"
      description: Check the health of the application
      operationId: microprofile_health_root
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /smartmom-svc/q/health/live:
    summary: Liveness checks are utilized to tell whether the application should be
      restarted
    description: MicroProfile Health - Liveness Endpoint
    get:
      tags:
      - system info (private)
      summary: The Liveness check of this application
      description: Check the liveness of the application
      operationId: microprofile_health_liveness
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /smartmom-svc/q/health/ready:
    summary: Readiness checks are used to tell whether the application is able to
      process requests
    description: MicroProfile Health - Readiness Endpoint
    get:
      tags:
      - system info (private)
      summary: The Readiness check of this application
      description: Check the readiness of the application
      operationId: microprofile_health_readiness
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /smartmom-svc/q/health/started:
    summary: Startup checks are an used to tell when the application has started
    description: MicroProfile Health - Startup Endpoint
    get:
      tags:
      - system info (private)
      summary: The Startup check of this application
      description: Check the startup of the application
      operationId: microprofile_health_startup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
components:
  schemas:
    CounterBase:
      description: IdGenerators will count on this basis
      enum:
      - WORKORDER
      - PART
      - STATION
      - PLANT
      type: string
    ImportRTOUnidentifiableOrganizationUnitMessageDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    HistoryAssignmentCondition:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          format: date-time
          description: Changed on date
          type: string
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/AssignmentCondition'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    MaterialBookingView:
      description: "MaterialBookingView is a Join over MaterialBooking, MaterialBin,\
        \ MaterialBinPart, Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        location:
          description: Location
          type: string
        materialBinDescription:
          description: Description of the MaterialBin
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        materialBinSection:
          allOf:
          - $ref: '#/components/schemas/MaterialBinSection'
          - description: "Optional MaterialBinSection, only set if a setion is given\
              \ during the upload"
        materialBinSectionReference:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBookingCreated:
          format: date-time
          description: Creation Date of the MaterialBooking
          type: string
        materialBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBooking
        materialChargeDatecode:
          description: Material Producer ChargeDateCode
          type: string
        materialChargeNumber:
          description: Material Producer ChargeNumber
          type: string
        organizationUnitDescription:
          description: Description of OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        partName:
          description: Name of the Part
          type: string
        producerContactDescription:
          description: Producer contact description
          type: string
        producerContactName:
          description: Producer contact name
          type: string
        quantity:
          format: double
          description: Quantity
          type: number
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Serialunit Id
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Serialunit Position
          type: string
        setupPosition:
          description: Setup Position
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Workorder Id
        workorderName:
          description: Workorder Name
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    LoggerInfo:
      type: object
      properties:
        configuredLevel:
          type: string
        effectiveLevel:
          type: string
        name:
          type: string
    History:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          format: date-time
          description: Changed on date
          type: string
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          description: The audited entity
          type: object
        userName:
          description: Changing user
          type: string
      readOnly: true
    SmtSetupEquipmentDTO:
      description: "SmtEquipment used to place/process the (BOM)-Location of the SmtSetup-Data.<BR/>When\
        \ Equipment-FailurePareto based on (BOM)-Location should be used, each (BOM)-Location\
        \ has to be passed separately."
      required:
      - name
      - description
      - type
      - location
      - smtEquipmentSetupPosition
      type: object
      properties:
        description:
          description: Description of the SmtEquipment
          type: string
        location:
          description: BOM- Location that was placed/processed with this smtEquipment.<BR/>If
            not given the location of the MaterialBinBooking is used instead.
          type: string
        missPicks:
          format: int64
          description: "MissPicks - (delta) amount of failed attempts of placement\
            \ during this placement.<BR/>For example: No item could be collect or\
            \ the collected part could not be placed on the board"
          type: integer
        name:
          description: Name of the SmtEquipment
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Part Id of the smtEquipment (optional) can be used instead\
              \ of the partName, if the smtEquipment has to be created"
        partName:
          description: "Part Name of the smtEquipment, required if the smtEquipment\
            \ has to be created, or partId is given"
          type: string
        picks:
          format: int64
          description: Picks - (delta) amount of successful processed item with the
            SmtEquipment during this placement
          type: integer
        smtEquipmentSetupPosition:
          description: "SMT-Equipment SetupPosition, defines where the SmtEquipment\
            \ was setup, e.g. Nozzle on Head2-Pos1.<BR/>The Equipment SetupPosition\
            \ may be another one, that the setupPosition of the materialBin itself.<BR>If\
            \ not given the setupPosition of the MaterialBinBooking is used instead."
          type: string
        type:
          description: "Type of the SmtEquipment: Nozzle, Feeder, Head, ..."
          type: string
      deprecated: true
    WorkstepEquipmentAlternativeDTO:
      description: Alternatives for a equipment required at a workstep of a workorder
      required:
      - partName
      - usageProbability
      type: object
      properties:
        partName:
          description: Name of a equipment-part
          type: string
          nullable: false
        quantity:
          format: int32
          type: integer
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          default: "100"
          type: integer
          nullable: false
    WorkorderWorkstepBomItem:
      description: BOMItems for a Workstep within a Workorder. Updates to a WorkorderWorkstepBomItem
        will be stored in an audit-trail.
      required:
      - location
      - setupRequired
      - materialPartId
      - quantity
      - unitId
      - workorderWorkstepId
      type: object
      properties:
        alternatives:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepBomItemAlternative'
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        erpVersion:
          description: Optional ErpVersion of this bomItem. <BR/> Can be used if the
            part itself is a product and only a special ErpVersion should be assembled.
            <BR/> Default empty for Raw-Material or if all ErpVersion of the sub-product
            can be used
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        location:
          description: "Location of Component on the Assembly (DE: Einbauort)"
          type: string
          nullable: false
        masterBomItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding MasterData BomItem
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the partId of this component/material
            nullable: false
        payload:
          type: string
        processLocation:
          description: Location of the BomItem. Used for example to differ between
            solder side and component side
          type: string
        quantity:
          format: double
          type: number
          nullable: false
        setupRequired:
          description: Setup is required for this BomItem
          default: "true"
          type: boolean
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the unit of this component
            nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workorder
            readOnly: true
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding WorkorderWorkstep.
            nullable: false
    Month:
      enum:
      - JANUARY
      - FEBRUARY
      - MARCH
      - APRIL
      - MAY
      - JUNE
      - JULY
      - AUGUST
      - SEPTEMBER
      - OCTOBER
      - NOVEMBER
      - DECEMBER
      type: string
    MultipanelSerialunitHistoryView:
      description: View of the history of a multipanel with all serialunits it contained
      type: object
      properties:
        created:
          format: date-time
          description: created
          type: string
        multipanelId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: MultipanelId
        multipanelName:
          description: MultipanelName
          type: string
        separated:
          format: date-time
          description: separated
          type: string
        serialunits:
          description: serialunits
          type: array
          items:
            $ref: '#/components/schemas/MultipanelSerialunitView'
      readOnly: true
    WorkplanDTO:
      description: "Workplan-structure for an import workorder. If no worksteps are\
        \ defined in smom on release of the workorder, the workplan will be fetched\
        \ from masterdata and it's definition copied.\n * If a MasterWorkplanId is\
        \ given (see Workorder-Resource-API): Load Workplan from mdata for id. Else\
        \ \n * If a Workplan-name is given: Load newest Workplan from mdata for name\
        \ and erpVersion. Else \n * Load newest Workplan from mdata for workorder's\
        \ partId and erpVersion.\n\nOn update of a released workorder Workplan might\
        \ be changed with some restrictions: New worksteps may be added at the end,\
        \ but it's not allowed to delete worksteps."
      required:
      - workstepList
      type: object
      properties:
        erpVersion:
          type: string
        name:
          type: string
        workstepList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/WorkstepDTO'
    SmtEquipmentBookingView:
      description: "SmtEquipmentBookingView is a Join over SmtEquipmentBooking, SmtEquipment,\
        \ Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        location:
          description: (BOM)-Location that was processed/placed with this smtEquipment
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        misspicks:
          format: int64
          description: MissPicks
          type: integer
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has used the smtEquipment
            to process/placed the (BOM)-Part
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has used the smtEquipment
              to process/placed the (BOM)-Part
        organizationUnitName:
          description: Name of the OrganizationUnit which has used the smtEquipment
            to process/placed the (BOM)-Part
          type: string
        partDescription:
          description: Description of the Product/Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Product/Part
        partName:
          description: Name of the Product/Part
          type: string
        picks:
          format: int64
          description: Picks
          type: integer
        processLocation:
          description: ProcessLocation of the Workstep
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Serialunit the (BOM)-Part was placed on
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Position of the Serialunit within an Label
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Shift
        smtEquipmentBookingCreated:
          format: date-time
          description: Creation Date of the SmtEquipmentBooking
          type: string
        smtEquipmentDescription:
          description: Description of the SmtEquipment
          type: string
        smtEquipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SmtEquipment
        smtEquipmentName:
          description: Name of the SmtEquipment
          type: string
        smtEquipmentSetupPosition:
          description: the setupPosition the SmtEquipment was placed on
          type: string
        smtEquipmentType:
          allOf:
          - $ref: '#/components/schemas/SmtEquipmentType'
          - description: Type of the SmtEquipment
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkstepId
        workstepLocation:
          type: string
        workstepNumber:
          description: WorkstepNumber the smtEquipment was used
          type: string
      readOnly: true
      deprecated: true
    LockedState:
      description: "Fixed defined states for a Lock. Values: NEVER, IS and WAS(in\
        \ the past)"
      enum:
      - NEVER_LOCKED
      - IS_LOCKED
      - WAS_LOCKED
      type: string
    ImportBulkRTOMultipanelDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    ImportBulkRTOUnidentifiableWorkorderWorkstepBookingDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    WorkorderWorkstepMaterialBooking:
      description: MaterialBin setup at a setupPosition at an organizationUnit used
        during a WorkorderWorkstep Quantity Booking.<BR>One tulple is created for
        each materialBin set was setup during building the Units from kookDate-duration
        to rhe bookDate.
      required:
      - bookDate
      - organizationUnitId
      - setupPosition
      - workorderId
      - materialBinId
      - location
      - materialPartId
      - quantity
      - unitId
      - workorderWorkstepId
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
          nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          $ref: '#/components/schemas/WorkorderWorkstepMaterialBookingPk'
        location:
          description: "One BOM- Location that is processed with this materialBooking.If\
            \ multiple locations are processed with this booking, each individual\
            \ location has to be send in it's own materialBooking. If not given the\
            \ default:[-] is used."
          type: string
          nullable: false
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialBin used for this material booking
            nullable: false
        materialBinSectionReferenceEnd:
          format: double
          description: Section of the materialBin used when the quantity is booked)
          type: number
        materialBinSectionReferenceStart:
          format: double
          description: Section of the materialBin used when during start of building
            the quantity)
          type: number
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the part of the materialBin used for this material
              booking
            nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the booking was done for
            nullable: false
        quantity:
          format: double
          description: "(Delta)-material quantity, that was consumed by this booking\
            \ from the materialBin"
          minimum: 0
          type: number
          nullable: false
        setupPosition:
          description: SetupPosition at the OrganizationUnit.
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the unit of materialBin used for this material booking
            nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the booking was done for
            nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
    MaintenanceName:
      type: object
      properties:
        groupName:
          description: Name of the maintenanceIntervalGroup
          type: string
        intervalName:
          description: Name of the MaintenanceInterval in the group
          type: string
    OrganizationUnitWorkorderActivation:
      description: Current activation of an organizationUnit for a Workorder at a
        Workstep
      required:
      - organizationUnitId
      - workorderId
      - workorderWorkstepId
      - workorderWorkstepOrganizationUnitId
      - topOrganizationUnitId
      - userName
      - created
      - stamp
      type: object
      properties:
        created:
          format: date-time
          type: string
          readOnly: true
          nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that is activated for the workorder
            nullable: false
        stamp:
          format: date-time
          type: string
          readOnly: true
          nullable: false
        stateBeforeActivation:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: State of the WorkorderWorkstepOrganizationUnit before it
              was activated
            default: READY
        topOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit that was used for activation,\
              \ may be organizationUnit itself or a parent of the organizationUnit"
            nullable: false
        userName:
          description: Ident of the User who has done the activation
          type: string
          nullable: false
        workorderClusterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the WorkorderCluster, can be null"
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the organizationunit is activated for
            nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstep the organizationunit is activated
              for
            nullable: false
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of a WorkorderWorkstepOrganizationUnit, the entiy that\
              \ builds the reference between the OrganizationUnit and the Workorderworkstep\
              \ based on the Workcenter"
            nullable: false
    GecColor:
      description: RGB-Color
      required:
      - red
      - green
      - blue
      - alpha
      type: object
      properties:
        alpha:
          format: int32
          description: Alpha
          maximum: 255
          minimum: 0
          type: integer
          nullable: false
        blue:
          format: int32
          description: Blue
          maximum: 255
          minimum: 0
          type: integer
          nullable: false
        green:
          format: int32
          description: Green
          maximum: 255
          minimum: 0
          type: integer
          nullable: false
        red:
          format: int32
          description: Red
          maximum: 255
          minimum: 0
          type: integer
          nullable: false
    LoggerName:
      description: The logger name
      type: string
    WorkorderMaterialBinSetup:
      required:
      - materialBinId
      - organizationUnitId
      - workorderWorkstepId
      - validFrom
      - validTo
      - workorderId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        setupPosition:
          description: SetupPosition
          type: string
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        validFrom:
          format: date-time
          type: string
          readOnly: true
          nullable: false
        validTo:
          format: date-time
          type: string
          readOnly: true
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
    GecDuration:
      required:
      - duration
      type: object
      properties:
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: "Duration, see https://en.wikipedia.org/wiki/ISO_8601#Durations"
            example: PT1M12S
        externalUnit:
          allOf:
          - $ref: '#/components/schemas/ChronoUnit'
          - description: External unit from other systems (e.g. ERP)
    Level4:
      enum:
      - UnproductiveShifts
      - Installation_Adaption
      - Offline_Training
      - FinishStart
      - RepairTime
      - WaitingPeriod
      - UnplannedChangeOfConsumables
      - OutOfSpecEntry
      - Unplanned
      - PreventiveMaintenanceTime
      - ProductionTestTime
      - SetupTime
      - MaintenanceDelay
      - PlannedChangeOfConsumables
      - Planned
      - StandbyTime
      - NotAnOperator
      - NotAProduct
      - NotASupportTool
      - EngineeringTime
      - ProcessTrials
      - EquipmentTrials
      - SoftwareQualification
      - ProductionTime
      - RegularProduction
      - WorkForThirdParty
      - PlanRuns
      type: string
    WorkorderMaterialBinSetupView:
      description: WorkorderMaterialBinSetupView contains activated MaterialBin setups
        for a Workorder
      type: object
      properties:
        materialBin:
          allOf:
          - $ref: '#/components/schemas/MaterialBin'
          - description: The MaterialBin that was setup and activated
        materialCharge:
          allOf:
          - $ref: '#/components/schemas/MaterialCharge'
          - description: The MaterialCharge of MaterialBin that was setup and activated
              for
        materialPart:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: The MaterialPart of MaterialBin that was setup and activated
              for
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit the MaterialBin was setup at
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: The Part of the Workorder the MaterialBin was setup and activated
              for
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the MaterialBin was setup and activated for
        workorderMaterialBinSetup:
          allOf:
          - $ref: '#/components/schemas/WorkorderMaterialBinSetup'
          - description: The WorkorderMaterialBinSetup Entity
    IdGeneratorComponent:
      required:
      - fillMode
      - fillWith
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
            nullable: false
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
          nullable: false
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ImportProcessState:
      description: State of the Import Processing
      enum:
      - FAILED_DUE_INVALID_DATA
      - FAILED_DUE_EXCEPTION
      - CREATED
      - UPDATED
      - DELETED
      - SKIPPED
      - ALREADY_AVAILABLE
      - IN_PROCESS
      type: string
    MaterialBinMeasurementDTO:
      description: Measurements for a MaterialBin
      required:
      - state
      - value
      - name
      - measurementUnit
      type: object
      properties:
        bookDate:
          format: date-time
          description: "optional creation date of the bookings, if not given the server\
            \ date is used"
          type: string
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Characteristic(Testplan)
        lowerActionLimit:
          description: Lower Action Limit Value
          type: string
        lowerScrapLimit:
          description: Lower Scrap Limit Value
          type: string
        materialBinSectionReference:
          format: double
          description: Measuremnt referencing a certain section of the materialBin
          type: number
        maximum:
          description: Maximum Value
          type: string
        measurementUnit:
          description: Unit of the Measurement
          type: string
        minimum:
          description: Minimum Value
          type: string
        name:
          description: Name of the Measurement
          type: string
        nominal:
          description: Nominal Value
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The Id of the OrganizationUnit(Type:STATION) the measurement
              should be done for
        organizationUnitName:
          description: The Name of the OrganizationUnit(Type:STATION) the measurement
            should be done for
          type: string
        sourceType:
          allOf:
          - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
          - description: "Source of the measurement: Was the measurement done LOCALy\
              \ or is the date provided by the PRODUCER?"
            default: LOCAL
        state:
          description: State of Booking
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SMOM-Testboard (only supported for numeric Measurements)
        testboardName:
          description: Name of an external Testplan (only supported for numeric Measurements)
          type: string
        tolerance:
          description: Tolerance Value
          type: string
        toleranceMaximum:
          description: Tolerance Maximum Value
          type: string
        toleranceMinimum:
          description: Tolerance Minimum Value
          type: string
        type:
          description: Type of the Measurement
          type: string
        upperActionLimit:
          description: Upper Action Limit Value
          type: string
        upperScrapLimit:
          description: Upper Scrap Limit Value
          type: string
        value:
          description: Value of Measurement
          type: string
    SerialunitEquipmentBooking:
      description: Bookings for Equipments setup at an organizationUnit during a WorkorderWorkstep
        Serialunit Booking.
      required:
      - bookDate
      - organizationUnitId
      - setupPosition
      - workorderId
      - equipmentId
      - equipmentPartId
      - usages
      - failures
      - serialunitId
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
          nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Equioment used for this booking
            nullable: false
        equipmentPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the part of the equipment (EquipmentDefinition) used
              for this booking
            nullable: false
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
          nullable: false
        id:
          $ref: '#/components/schemas/SerialunitEquipmentBookingPk'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the booking was done for
            nullable: false
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the serialaunit build with this equipment booking
            nullable: false
        setupPosition:
          description: SetupPosition at the OrganizationUnit.
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the booking was done for
            nullable: false
    Part:
      description: "Part definition. Part may be a product, a raw material, an equipment\
        \ or any other part"
      required:
      - unitId
      - availabilityState
      - procurementType
      - materialType
      type: object
      properties:
        availabilityState:
          allOf:
          - $ref: '#/components/schemas/AvailabilityState'
          - description: "Availability State of the part: AVAILABLE, DISCHARGED, BLOCKED,\
              \ DELETED"
            nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        expirationTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: expiration time of the part in seconds
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        materialType:
          allOf:
          - $ref: '#/components/schemas/MaterialType'
          - description: "Material Type of the part: MATERIAL, PRODUCT"
            nullable: false
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        partGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: reference to partgroup of the part
        partTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: reference to parttype of the part
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        procurementType:
          allOf:
          - $ref: '#/components/schemas/ProcurementType'
          - description: "PROCUREMENT TYPE of the part: INHOUSE, EXTERNAL"
            nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the (base)unit of the part
            nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderFinishMode:
          $ref: '#/components/schemas/WorkorderFinishMode'
        workorderQuantityAdjustmentMode:
          $ref: '#/components/schemas/WorkorderQuantityAdjustmentMode'
        workorderQuantityOverbookPercentage:
          format: int32
          description: Percentage value that the workorder quantity could be overbooked.
            In combination with finishMode the workorder quantity could be overbooked
            up to this value before the workorder state will be set automatically
            to finished
          type: integer
    IdGeneratorAssignmentView:
      description: Assignments of MasterData to an IdGenerator
      type: object
      properties:
        idGenerator:
          allOf:
          - $ref: '#/components/schemas/IdGenerator'
          - description: ID of the Id-Generator
        idGeneratorAssignmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator-Assignment
        idGeneratorType:
          allOf:
          - $ref: '#/components/schemas/IdGeneratorType'
          - description: Type of IdGenerator
            readOnly: true
        masterDataDescription:
          description: Description of the MasterData
          type: string
        masterDataId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MasterData
        masterDataName:
          description: Name of the MasterData
          type: string
        masterDataType:
          allOf:
          - $ref: '#/components/schemas/MasterDataType'
          - description: Type of the MasterData. May be null if the IdGenerator is
              assigned to a type of masterData unknown in IdGenerator-Service.
            readOnly: true
    WorkorderWorkstepOrganizationUnitView:
      description: WorkorderWorkstepOrganizationUnit view. Stations that may process
        this workstep and summed up book quantites of the station
      type: object
      properties:
        amountQuantityBookings:
          format: int32
          description: "Amount of QuantityBookings done for this organizationUnit\
            \ in this workstep, incremented with each workorderWorkstepBooking"
          type: integer
        amountSerialunitBookings:
          format: int32
          description: "Count of Serialunit Bookings done for this organizationUnit\
            \ in this workstep, incremented with each serialunitUpload"
          type: integer
        created:
          format: date-time
          type: string
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Unique Identifier of the entity
            readOnly: true
        lastBookDate:
          format: date-time
          description: Date of the lastBooking (quantity or serialunit) to this worksterp
          type: string
        lockGroups:
          description: LockGroups in the LockSystem assigned to this Workorder-Workstep-OrganizationUnit
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitLockGroup'
        masterWorkcenterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Master Workcenter
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit only used if Type is MACHINE
        quantityFail:
          format: double
          description: Quantity of FAIL Bookings in that workstep
          type: number
        quantityFirstPass:
          format: double
          description: Quantity of FIRST_PASS Bookings in that workstep
          type: number
        quantityInProcess:
          format: double
          description: Quantity of INPROCESS Bookings in that workstep
          type: number
        quantityPass:
          format: double
          description: Quantity of PASS Bookings in that workstep
          type: number
        quantityScrap:
          format: double
          description: Quantity of SCRAP Bookings in that workstep
          type: number
        stamp:
          format: date-time
          type: string
          example: 1970-01-01T00:00:00.0Z
        state:
          $ref: '#/components/schemas/WorkstepState'
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workplan
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workplan
      readOnly: true
    Level2:
      enum:
      - NonScheduledUse
      - Downtime
      - Uptime
      type: string
    Level3:
      enum:
      - NonScheduledUse
      - UnscheduledDowntime
      - ScheduledDowntime
      - StandbyTime
      - EngineeringTime
      - ProductionTime
      type: string
    ZoneRules:
      type: object
      properties:
        fixedOffset:
          type: boolean
        lastRules:
          type: array
          items:
            $ref: '#/components/schemas/ZoneOffsetTransitionRule'
        savingsInstantTransitions:
          type: array
          items:
            format: int64
            type: integer
        savingsLocalTransitions:
          type: array
          items:
            format: date-time
            type: string
        standardOffsets:
          type: array
          items:
            $ref: '#/components/schemas/ZoneOffset'
        standardTransitions:
          type: array
          items:
            format: int64
            type: integer
        transitionRules:
          type: array
          items:
            $ref: '#/components/schemas/ZoneOffsetTransitionRule'
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/ZoneOffsetTransition'
        wallOffsets:
          type: array
          items:
            $ref: '#/components/schemas/ZoneOffset'
    ConditionGroupView:
      description: ConditionGroupView contains ConditionGroup and the assigned Conditions
      type: object
      properties:
        conditionGroup:
          $ref: '#/components/schemas/ConditionGroup'
        conditionList:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
      readOnly: true
    ImportBulkRTOMaterialBinDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    MultipanelView:
      description: View of a multipanel with all serialunits it contains
      type: object
      properties:
        multipanel:
          allOf:
          - $ref: '#/components/schemas/Multipanel'
          - description: Multipanel
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the Workoder
        serialunits:
          description: Serialunits of the multipanel
          type: array
          items:
            $ref: '#/components/schemas/Serialunit'
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder of the Serialunit
      readOnly: true
    HealthCheckStatus:
      enum:
      - DOWN
      - UP
      type: string
    MaterialBookingViewGrouped:
      description: MaterialBookingViewGrouped is MaterialBookingView grouped by Part
        and Location
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        firstBookDate:
          format: date-time
          description: 'First Book Date '
          type: string
        firstSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'First SerialunitId '
        firstSerialunitName:
          description: 'First SerialunitName '
          type: string
        lastBookDate:
          format: date-time
          description: 'Last Book Date '
          type: string
        lastSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Last SerialunitId '
        lastSerialunitName:
          description: 'Last SerialunitName '
          type: string
        location:
          description: Location
          type: string
        materialBinDescription:
          description: Description of the MaterialBin
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        materialBinSection:
          allOf:
          - $ref: '#/components/schemas/MaterialBinSection'
          - description: "Optional MaterialBinSection, only set if a setion is given\
              \ during the upload"
        materialBinSectionReference:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBookingCreated:
          format: date-time
          description: Creation Date of the MaterialBooking
          type: string
        materialBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBooking
        materialChargeDatecode:
          description: Material Producer ChargeDateCode
          type: string
        materialChargeNumber:
          description: Material Producer ChargeNumber
          type: string
        maxMaterialBinSectionReference:
          format: double
          description: Max. Position/Reference in Section of the materialBin
          type: number
        minMaterialBinSectionReference:
          format: double
          description: Min. Position/Reference in Section of the materialBin
          type: number
        organizationUnitDescription:
          description: Description of OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        partName:
          description: Name of the Part
          type: string
        producerContactDescription:
          description: Producer contact description
          type: string
        producerContactName:
          description: Producer contact name
          type: string
        qtyBookings:
          format: int32
          description: 'Anount of Bookings for Group Key '
          type: integer
        quantity:
          format: double
          description: Quantity
          type: number
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Serialunit Id
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Serialunit Position
          type: string
        setupPosition:
          description: Setup Position
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Workorder Id
        workorderName:
          description: Workorder Name
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    ImportRTOMultipanelDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    SerialunitSetupDTO:
      description: "Setup data for a given SetupPosition with the materialBin setup\
        \ on this setupPosition, contains also the involved (BOM)-Location(s) and\
        \ the quantity consumed of the materialbin.<BR>When MaterialBin-FailurePareto\
        \ based on the (BOM)-Location should be used, each (BOM)-Location has to be\
        \ passed separately.<BR>SerialunitSetupDTO contains an SmtSetupEquipmentDTO-Array\
        \ where the used SmtEquipments (e.g. for Nozzle, Feeder, Head,...) can be\
        \ given for individual (BOM)-Locations"
      required:
      - setupPosition
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        location:
          description: "BOM- Location(s) that are assembled with this materialBin\
            \ by this serialunit upload.<BR/> When FailurePareto should be used each\
            \ Location has to be given separately each within it's own SmtSetupDTO,<BR/>\
            \ otherwise upload the Locations comma separated within one SmtSetupDTO"
          type: string
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialBinSectionReference:
          format: double
          description: "Position in the materialBin used for this booking (valid for\
            \ sequential MaterialBins, see MaterialBinTyp and MaterialBinItem from/to)"
          type: number
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        quantity:
          format: double
          description: "(Delta)-booking quantity, that was consumed by this booking\
            \ and reduces the materialBin quantity"
          minimum: 1
          type: number
        setupPosition:
          description: "SetupPosition of the materialbin on the placing machine.<BR>The\
            \ Feeder the materialBin is located at, can be given in the SmtSetupEquipmentDTO-Array"
          minLength: 1
          type: string
        smtSetupEquipments:
          description: "List of used smtEquipments for the materialBin and Location(s)\
            \ (Feeder, Nozzle, Head, ... for a location)"
          type: array
          items:
            $ref: '#/components/schemas/SmtSetupEquipmentDTO'
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
    ParallelSerialunitBookingSerialunitView:
      description: ParallelSerialunitBookingSerialunitView is a Join over SerialunitBooking
        and Serialunit
      type: object
      properties:
        bookdate:
          format: date-time
          description: Bookdate of the booking
          type: string
        bookings:
          description: Bookings that are performed in parallel at the bookdate
          type: array
          items:
            $ref: '#/components/schemas/SerialunitBookingSerialunitView'
    MessageClass:
      description: Defintion of a Message Class. Updates to a MessageClass will be
        stored in an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    PartSmall:
      description: "PartSmall describes the Part and contains only id,name and description"
      type: object
      properties:
        description:
          description: Part Description
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Part ID
        name:
          description: Part Name
          type: string
      readOnly: true
    SmtEquipmentView:
      description: SmtEquipmentView with Part-Details
      required:
      - smtEquipment
      type: object
      properties:
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the SmtEquipment
        smtEquipment:
          $ref: '#/components/schemas/SmtEquipment'
      deprecated: true
    MergeState:
      description: "State-change of the Merge: MERGED,UNMERGED"
      enum:
      - MERGED
      - UNMERGED
      type: string
    SerialunitDTO:
      description: "Serialunit Structure identifing a single serialsunit in SMOM.\
        \ When used to create the serialunit at least the name and the Workorder has\
        \ to set, to create the serialunit"
      required:
      - name
      type: object
      properties:
        description:
          description: Description of the Serialunit. a optional description for thre
            serialunit
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Serialunit (UUID), is set from the server based\
              \ on the Serialunit"
            readOnly: true
        name:
          description: Name of the Serialunit
          type: string
        payload:
          description: Payload of the Serialunit. a optional description for thre
            serialunit
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/SerialunitState'
          - description: "State of the Serialunit. Allowed SerialunitState for Creation:\
              \ NEW, INPROCESS. NEW is the default"
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the serialunit belongs to. Only required
              if a Serialunit has to be created
        workorderName:
          description: The Name of the Workorder the serialunit belongs to. Only required
            if a Serialunit has to be created
          type: string
    WorkorderEquipmentSetupView:
      description: WorkorderEquipmentSetupView contains activated Equipment setups
        for a Workorder
      type: object
      properties:
        equipment:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          - description: The Equipment that was setup and activated
        equipmentPart:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: The Part of Equipment that was setup and activated for
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit the Equipment was setup at
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: The Part of the Workorder the Equipment was setup and activated
              for
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the Equipment was setup and activated for
        workorderEquipmentSetup:
          allOf:
          - $ref: '#/components/schemas/WorkorderEquipmentSetup'
          - description: The WorkorderEquipmentSetup Entity
    MdcDim:
      description: 'MdcDim contains Join over Conditions & ConditionGroups '
      type: object
      properties:
        conditionColorRgba:
          type: string
          readOnly: true
        conditionCreated:
          format: date-time
          type: string
          readOnly: true
        conditionDescritpion:
          type: string
          readOnly: true
        conditionGroupCreated:
          format: date-time
          type: string
          readOnly: true
        conditionGroupHasAttribute:
          type: boolean
          readOnly: true
        conditionGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        conditionGroupName:
          type: string
          readOnly: true
        conditionGroupPlantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        conditionGroupStamp:
          format: date-time
          type: string
          readOnly: true
        conditionGroupVersion:
          format: int64
          type: integer
          readOnly: true
        conditionHasAttribute:
          type: boolean
          readOnly: true
        conditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        conditionInfo1:
          type: string
          readOnly: true
        conditionInfo2:
          type: string
          readOnly: true
        conditionInfo3:
          type: string
          readOnly: true
        conditionLevel2:
          allOf:
          - $ref: '#/components/schemas/Level2'
          - readOnly: true
        conditionLevel2Color_rgba:
          type: string
          readOnly: true
        conditionLevel3:
          allOf:
          - $ref: '#/components/schemas/Level3'
          - readOnly: true
        conditionLevel3Color_rgba:
          type: string
          readOnly: true
        conditionLevel4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - readOnly: true
        conditionLevel4Color_rgba:
          type: string
          readOnly: true
        conditionName:
          type: string
          readOnly: true
        conditionPlantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        conditionStamp:
          format: date-time
          type: string
          readOnly: true
        conditionVersion:
          format: int64
          type: integer
          readOnly: true
    SerialunitReservedNumber:
      description: Reserved numbers for a serialunit e.g. to be used in multipanels
      required:
      - position
      - name
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        name:
          description: Name has to be unique for all reserved numbers for a serialunit
          type: string
          nullable: false
        position:
          description: Position has to be unique for all reserved numbers for a serialunit
          type: string
          nullable: false
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the serialunit this number is reserved for
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        used:
          format: date-time
          description: Used for API /api/views/serialunits/reservednumbers/unused
          type: string
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    EquipmentSetupView:
      description: EquipmentSetupView Definition Equipment and Setup Infos
      type: object
      properties:
        activeSetupSince:
          format: date-time
          description: Setup is activated for a workorder since. May be null if not
            activated
          type: string
        equipment:
          $ref: '#/components/schemas/Equipment'
        firstSetup:
          format: date-time
          description: Date when the first Equipment was setup on this position at
            this OrganizationUnit
          type: string
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the Equipment
        producerContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Producer of the Equipment
        requiredByWorkplan:
          description: Is this Equipment required by Workplan. May be null if not
            activated
          type: boolean
        setupPosition:
          description: SetupPosition
          type: string
        setupSince:
          format: date-time
          description: Current Equipment is setup since
          type: string
        supplierContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Supplier of the Equipment
        workorderWorkstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: Workstep for which the Setup is active. May be null if no
              Setup is active
      readOnly: true
    SerialunitBookingDTO:
      description: Serialunit Booking Structure for all Serialunit/Failure/Measurement/Material/Equipment-
        Bookings
      required:
      - organizationUnitName
      - workstepName
      - serialunitName
      type: object
      properties:
        bookDate:
          format: date-time
          description: "optional creation date of the bookings, if not given the server\
            \ date is used"
          type: string
        bookState:
          $ref: '#/components/schemas/SerialunitBookingState'
        confirmationNumber:
          description: "ConfirmationNumber, can be used alternatively instead of Workorder\
            \ and Workstep parameter, to identify the Workorder and the workstep based\
            \ on a unique confirmationNumber passed from the ERP-System to identify\
            \ the WorkorderWorkstep."
          type: string
        cycleTime:
          format: int64
          description: optional cycletime in milliseconds to build the unit(s) or
            this booking
          type: integer
        equipmentSetups:
          description: List of used equipments for this booking
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSetupDTO'
        failureList:
          description: List of Failures for that booking
          type: array
          items:
            $ref: '#/components/schemas/FailureDTO'
        measurementDTOList:
          description: Measurement Data for that booking
          type: array
          items:
            $ref: '#/components/schemas/MeasurementDTO'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit(optional). Can be set if available\
              \ otherwise use OrganizationUnitName instead <BR />When no OrganizationUnitName\
              \ or Id is given, the OrganizationUnit is detected via the Workstep\
              \ OrganizatioinUnits , but only when there is one OrganizationUnit assigned\
              \ to the Workstep.<BR />When multiple OrganizationUnits are assigned\
              \ to a Workstep, the OrganizationUnitName or ID is mandatory."
        organizationUnitName:
          description: "Name of the station that performes the booking<BR /> When\
            \ no OrganizationUnit-Name or Id is given, the OrganizationUnit is detected\
            \ via the Workstep OrganizatioinUnits, but only when there is one OrganizationUnit\
            \ assigned to the Workstep.<BR/> When multiple OrganizationUnits are assigned\
            \ to a Workstep, the OrganizationUnit-Name or ID is mandatory."
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Serialunit(optional). Can be set if available otherwise
              use SerialunitName instead
        serialunitName:
          description: Name of the Serialunit that performs bookings
          type: string
        setupList:
          description: List of SetupData with materialBins and the used smtEquipments
            for this booking
          type: array
          items:
            $ref: '#/components/schemas/SerialunitSetupDTO'
        setupTime:
          format: int64
          description: SetupTime needed for setup preparation before building the
            unit(s)
          type: integer
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Testboard(optional).
        testboardName:
          description: Name of the Testboard(optional).
          type: string
        workorderClusterPosition:
          description: Booking belongs to this position in a WorkorderCluster
          type: string
          nullable: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The ID of the Workorder the booking should be done for.Can
              be set if available otherwise use WorkorderName instead '
        workorderName:
          description: The Name of the Workorder the booking should be done for.WorkorderId
            can be used alternatively.
          type: string
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The Id of the Workstep the booking should be done for.Can
              be set if available otherwise use WorkstepName instead '
        workstepName:
          description: The Name of the Workstep the booking should be done for.WorkstepId
            can be used alternatively.
          type: string
    MessageGroupItem:
      description: Connect between a MessageGroup and a Message
      required:
      - messageGroupId
      - messageId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        messageGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message Group
            nullable: false
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message
            nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SmtEquipmentBookingViewGrouped:
      description: "SmtEquipmentBookingView is a Join over SmtEquipmentBooking, SmtEquipment,\
        \ Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        firstBookDate:
          format: date-time
          description: First Book Date
          type: string
        firstSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: First SerialunitId
        firstSerialunitName:
          description: First SerialunitName
          type: string
        lastBookDate:
          format: date-time
          description: Last Book Date
          type: string
        lastSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Last SerialunitId
        lastSerialunitName:
          description: Last SerialunitName
          type: string
        location:
          description: (BOM)-Location that was processed/placed with this smtEquipment
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        misspicks:
          format: int64
          description: MissPicks
          type: integer
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has used the smtEquipment
            to process/placed the (BOM)-Part
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has used the smtEquipment
              to process/placed the (BOM)-Part
        organizationUnitName:
          description: Name of the OrganizationUnit which has used the smtEquipment
            to process/placed the (BOM)-Part
          type: string
        partDescription:
          description: Description of the Product/Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Product/Part
        partName:
          description: Name of the Product/Part
          type: string
        picks:
          format: int64
          description: Picks
          type: integer
        processLocation:
          description: ProcessLocation of the Workstep
          type: string
        qtyBookings:
          format: int32
          description: Anount of Bookings for Group Key
          type: integer
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Serialunit the (BOM)-Part was placed on
        serialunitName:
          description: Serialunit Name
          type: string
        serialunitPosition:
          description: Position of the Serialunit within an Label
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Shift
        smtEquipmentBookingCreated:
          format: date-time
          description: Creation Date of the SmtEquipmentBooking
          type: string
        smtEquipmentDescription:
          description: Description of the SmtEquipment
          type: string
        smtEquipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SmtEquipment
        smtEquipmentName:
          description: Name of the SmtEquipment
          type: string
        smtEquipmentSetupPosition:
          description: the setupPosition the SmtEquipment was placed on
          type: string
        smtEquipmentType:
          allOf:
          - $ref: '#/components/schemas/SmtEquipmentType'
          - description: Type of the SmtEquipment
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkstepId
        workstepLocation:
          type: string
        workstepNumber:
          description: WorkstepNumber the smtEquipment was used
          type: string
      readOnly: true
      deprecated: true
    MaterialCharge:
      description: Producers of MaterialBins. Updates to a MaterialCharge will be
        stored in an audit-trail.
      required:
      - lockedState
      - producerContactId
      - partId
      - datecode
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        datecode:
          type: string
          nullable: false
        description:
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
            nullable: false
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        payload:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "id of the contact of the producer of this material-charge,\
              \ stored in address-service"
            nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderWorkstepBomItemView:
      description: 'WorkorderWorkstepBomItemView Object '
      type: object
      properties:
        alternatives:
          description: List of Workorder Workstep Bom Item Alternative Views
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepBomItemAlternativeView'
          readOnly: true
        materialPart:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part Object used in WorkorderWorkstepBomItem (Material)
            readOnly: true
        unit:
          allOf:
          - $ref: '#/components/schemas/Unit'
          - description: Unit Object used in WorkorderWorkstepBomItem
            readOnly: true
        workorderWorkstepBomItem:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstepBomItem'
          - description: Workorder Workstep Bom Item
            readOnly: true
    FailurePattern:
      description: Failure Pattern. Updates to a FailurePattern will be stored in
        an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    MultipanelSerialunitDTO:
      description: "MultipanelSerialunit Structure identifing the serialsunit/pcb\
        \ in SMOM. When used to create the serialunit in an Multipanel, at least the\
        \ name and the Workorder has to set, to create the serialunit"
      required:
      - name
      type: object
      properties:
        description:
          description: Description of the Serialunit. a optional description for thre
            serialunit
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Serialunit (UUID), is set from the server based\
              \ on the Serialunit"
            readOnly: true
        multipanelPosition:
          description: "position of the Serialunit, when not given the default '1'\
            \ is used"
          type: string
        name:
          description: Name of the Serialunit
          type: string
        payload:
          description: Payload of the Serialunit. a optional description for thre
            serialunit
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/SerialunitState'
          - description: "State of the Serialunit. Allowed SerialunitState for Creation:\
              \ NEW, INPROCESS. NEW is the default"
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the serialunit belongs to. Only required
              if a Serialunit has to be created
        workorderName:
          description: The Name of the Workorder the serialunit belongs to. Only required
            if a Serialunit has to be created
          type: string
    OrganizationUnitMessageHistoryView:
      description: "OrganizationUnitMessageHistoryView contains Message, OrganizationUnitMessageHistory"
      type: object
      properties:
        messageView:
          $ref: '#/components/schemas/MessageView'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        organizationUnitMessageHistory:
          $ref: '#/components/schemas/OrganizationUnitMessageHistory'
      readOnly: true
    EquipmentDefinition:
      description: An EquipmentDefinition defines details of a Part of MaterialType
        EQUIPMENT. By this defintion instances of equipments can be created in SMOM.
      required:
      - partId
      - equipmentTypeId
      - usageFactor
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        equipmentTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        finalExpiration:
          $ref: '#/components/schemas/MaintenanceInterval'
        maintenanceIntervalGroups:
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceIntervalGroup'
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    OrganizationUnitMessageAssignment:
      description: Connect between a OrganizationUnit and a Message
      required:
      - organizationUnitId
      - messageId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message
            nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
            nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderType:
      description: Fixed defined WorkorderTypes
      enum:
      - PRODUCTION
      - REPAIR
      type: string
    MaterialBinMeasurementBookingNumericView:
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        calculatedState:
          description: Calculated
          type: string
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Characteristic (Testplan) for this Booking
        created:
          format: date-time
          description: Creation Date of the Measurement
          type: string
        materialBinSectionReference:
          format: double
          description: Measurement referencing a certain section of the materialBin
          type: number
        maximum:
          format: double
          description: Maximum
          type: number
        measurementUnit:
          description: Unit of measurment
          type: string
        minimum:
          format: double
          description: Minimum
          type: number
        name:
          description: Name
          type: string
        nominal:
          format: double
          description: Nominal
          type: number
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of the Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: Name of the Part
          type: string
        sourceType:
          allOf:
          - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
          - description: "Source of the measurement: Was the measurement done LOCALy\
              \ or is the date provided by the PRODUCER?"
        state:
          description: State
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Name of an external Testboard the measurement references
              to
        testboardName:
          description: Name of an external Testboard the measurement references to
          type: string
        tolerance:
          format: double
          description: Tolerance
          type: number
        value:
          format: double
          description: Value
          type: number
    MeasurementDTO:
      description: Measurement Structure
      required:
      - state
      - value
      - name
      - measurementUnit
      type: object
      properties:
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Characteristic(Testplan)
        lowerActionLimit:
          description: Lower Action Limit Value
          type: string
        lowerScrapLimit:
          description: Lower Scrap Limit Value
          type: string
        maximum:
          description: Maximum Value
          type: string
        measurementUnit:
          description: Unit of the Measurement
          type: string
        minimum:
          description: Minimum Value
          type: string
        name:
          description: Name of the Measurement
          type: string
        nominal:
          description: Nominal Value
          type: string
        state:
          description: State of Booking
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SMOM-Testboard (only supported for numeric Measurements)
        testboardName:
          description: Name of an external Testplan (only supported for numeric Measurements)
          type: string
        tolerance:
          description: Tolerance Value
          type: string
        toleranceMaximum:
          description: Tolerance Maximum Value
          type: string
        toleranceMinimum:
          description: Tolerance Minimum Value
          type: string
        type:
          description: Type of the Measurement
          type: string
        upperActionLimit:
          description: Upper Action Limit Value
          type: string
        upperScrapLimit:
          description: Upper Scrap Limit Value
          type: string
        value:
          description: Value of Measurement
          type: string
    AvailabilityState:
      description: "Availability State of the part: AVAILABLE, DISCHARGED, BLOCKED,\
        \ DELETED"
      enum:
      - AVAILABLE
      - BLOCKED
      - DISCHARGED
      - DELETED
      type: string
    OrganizationUnitSetupMaterialBinView:
      description: What is setup at a OrganizationUnit (Station)
      type: object
      properties:
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit
        setupPositions:
          description: List MaterialBinSetupView
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinSetupView'
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder for which the Setup is active. May be null if no
              Setup is active
    OrganizationUnitMeasurementType:
      description: Fixed defined OrganizationTypes
      enum:
      - PROCESS
      - SERIAL
      type: string
    OrganizationUnitView:
      description: OrganizationUnitView Object
      required:
      - organizationUnit
      type: object
      properties:
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        processLocationList:
          type: array
          items:
            type: string
    HealthCheckResponse:
      type: object
      properties:
        data:
          type: object
          nullable: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/HealthCheckStatus'
    ParetoStackedValue:
      description: A ParetoStackedValue is the object that contains for a Name several
        ParetoValues
      type: object
      properties:
        name:
          description: The Name of the ParetoValue (for example FailureName)
          type: string
        paretoValueList:
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
      readOnly: true
    PartGroup:
      description: PartGroup definition.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    BookedUnitInfo:
      description: Info about Bookings
      required:
      - workorderId
      - workorderName
      - organizationUnitId
      - organizationUnitName
      - workorderWorkstepId
      - workorderWorkstepName
      type: object
      properties:
        fail:
          format: double
          description: Amount of PCBs with State FAIL or booked WorkstepQuantity with
            quantityFail
          type: number
          readOnly: true
        firstBookDate:
          format: date-time
          description: First BookDate
          type: string
          readOnly: true
        firstPass:
          format: double
          description: Amount of PCBs with State PASS and FirstBooking or booked WorkstepQuantity
            with quantityFirstPass
          type: number
          readOnly: true
        fpy:
          format: double
          description: First Pass Yield
          type: number
          readOnly: true
        lastBookDate:
          format: date-time
          description: Last BookDate
          type: string
          readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        pass:
          format: double
          description: Amount of PCBs with State PASS or booked WorkstepQuantity with
            quantityPass
          type: number
          readOnly: true
        processingTimeWorkplan:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Estimated time from Workplan needed to process this workstep
              by a machine
            readOnly: true
        scrap:
          format: double
          description: Amount of PCBs with State SCRAP or booked WorkstepQuantity
            with quantityScrap
          type: number
          readOnly: true
        setupTimeWorkplan:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Estimated time from Workplan needed to setup this workstep
              by a machine
            readOnly: true
        sumProcessingTimeMachine:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Sum of the booked Cycletimes (FROM MACHINE)
            readOnly: true
        sumSetupTimeMachine:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Sum of the booked SetupTimes (FROM MACHINE)
            readOnly: true
        total:
          format: double
          description: Total Amount of PCBs or sum of booked WorkstepQuantity of quantityPass/Fail/Scrap
          type: number
          readOnly: true
        transportTimeWorkplan:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Time needed from Workplan for Transport
            readOnly: true
        waitTimeWorkplan:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Time needed from Workplan for Wait
            readOnly: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Workorder
        workorderName:
          description: Name of the Workorder
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep
          type: string
    SerialunitBookingState:
      description: Fixed defined booking-states of a Serialunit
      enum:
      - PASS
      - FAIL
      - SCRAP
      - INPROCESS
      type: string
    AnalysisResult:
      type: object
      properties:
        analysisResultType:
          description: Result Type
          type: string
        equipmentId:
          format: int64
          description: Id of the Equipment
          type: integer
        equipmentName:
          description: Name of the Equipment
          type: string
        failurePercent:
          format: double
          description: Failure Percent
          type: number
        fromDate:
          format: date-time
          description: From Date
          type: string
        location:
          description: Location
          type: string
        materialBinId:
          format: int64
          description: Id of the MaterialBin
          type: integer
        materialBinName:
          description: Name of the MaterialBin
          type: string
        partId:
          format: int64
          description: Id of the Part(Product)
          type: integer
        partName:
          description: Name of the Part(Product)
          type: string
        qtyFailure:
          format: int64
          description: Quantity Failure
          type: integer
        qtyUsed:
          format: int64
          description: Quantity Used
          type: integer
        toDate:
          format: date-time
          description: To Date
          type: string
      readOnly: true
    WorkorderWorkstepOrganizationUnitLockGroupView:
      description: WorkorderWorkstepOrganizationUnitLockGroupView view. Active Locks
        of WorkorderWorkstepOrganizationUnits and the assigned LockGroup
      type: object
      properties:
        lockDate:
          format: date-time
          description: the LockDate when the Lock was established
          type: string
        lockDescription:
          description: a Description for the Lock
          type: string
        lockGroup:
          allOf:
          - $ref: '#/components/schemas/LockGroup'
          - description: The LockGroup that is assigned to the WorkorderWorkstepOrganizationUnit
        lockType:
          allOf:
          - $ref: '#/components/schemas/LockType'
          - description: The Type of the LockGroup that is assigned to the WorkorderWorkstepOrganizationUnit
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        workorderDescription:
          description: Description of the Workorder
          type: string
        workorderName:
          description: Name of the Workorder
          type: string
        workorderWorkstepOrganizationUnit:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnit'
          - description: the WorkorderWorkstepOrganizationUnit that holds the Lock
        workorderWorkstepOrganizationUnitLockGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstepOrganizationUnitLockGroup
      readOnly: true
    MessageView:
      description: "MessageView contains Message, MessageClass and MessageCategory"
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
        messageCategory:
          $ref: '#/components/schemas/MessageCategory'
        messageClass:
          $ref: '#/components/schemas/MessageClass'
      readOnly: true
    WorkorderWorkstepOrganizationUnit:
      description: WorkorderWorkstepOrganizationUnit Entity. Stations that may process
        this workstep and summed up book quantites of the station
      required:
      - organizationUnitId
      - workorderWorkstepId
      type: object
      properties:
        amountQuantityBookings:
          format: int32
          description: "Amount of QuantityBookings done for this organizationUnit\
            \ in this workstep, incremented with each workorderWorkstepBooking"
          type: integer
          readOnly: true
        amountSerialunitBookings:
          format: int32
          description: "Count of Serialunit Bookings done for this organizationUnit\
            \ in this workstep, incremented with each serialunitUpload"
          type: integer
          readOnly: true
        created:
          format: date-time
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        hasLockGroups:
          description: "True when the Entity has LockGroups in the LockSystem. Items\
            \ produced at this organizationUnit and workstep will be locked, if lockGroups\
            \ are assigned. Use API organizationunits/{id}/lockgroups... to set/remove\
            \ lockGroups."
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lastBookDate:
          format: date-time
          description: Date of the lastBooking (quantity or serialunit) to this worksterp
          type: string
          readOnly: true
        masterWorkcenterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the MasterData-Workcenter, might be NULL if the organizationUnit\
              \ was added during upload, without Workcenter-relation."
            readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit only used if Type is MACHINE
            nullable: false
        quantityFail:
          format: double
          description: Quantity of FAIL Bookings a station in the workstep
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Quantity of First PASS Bookings at a station in the workstep
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: Quantity of InProcess Bookings at a station in the workstep
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Quantity of PASS Bookings at a station in the workstep
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Quantity of SCRAP Bookings at a station in the workstep
          type: number
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: For updates of workstepState use activate/deactivate APIs
              PUT /resources/organizationunits...
            default: READY
            readOnly: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workorder
            readOnly: true
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workplan
            nullable: false
    OrganizationUnitMeasurementValue:
      description: Mesurementvalue booked by an OrganizationUnit
      type: object
      properties:
        bookDate:
          format: date-time
          description: BookDate of the Measurement
          type: string
        endDate:
          format: date-time
          description: EndDate of the Filter for OrganizationUnitMeasurementValue
          type: string
        maximum:
          format: double
          description: Max Value of the Measurement
          type: number
        maximumTextual:
          description: Max Value of the Measurement
          type: string
        measurementName:
          description: Name of the Measurement
          type: string
        minimum:
          format: double
          description: Min Value of the Measurement
          type: number
        minimumTextual:
          description: Min Value of the Measurement
          type: string
        nominal:
          format: double
          description: Nominal Value of the Measurement
          type: number
        nominalTextual:
          description: Nominal Value of the Measurement
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        serialUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SerialUnit for which the Booking was performed.
              (Only filled for serials)
        serialUnitName:
          description: Name of the SerialUnit for which the Booking was performed.
            (Only filled for serials)
          type: string
        startDate:
          format: date-time
          description: StartDate of the Filter for OrganizationUnitMeasurementValue
          type: string
        tolerance:
          format: double
          description: Tolerance Value of the Measurement
          type: number
        toleranceTextual:
          description: Tolerance Value of the Measurement
          type: string
        unit:
          description: Unit
          type: string
        value:
          format: double
          description: Value of the Measurement
          type: number
        valueTextual:
          description: Value of the Measurement
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder
      readOnly: true
    SerialunitState:
      description: Fixed defined states for Serialunit
      enum:
      - NEW
      - FINISHED
      - FINISHED_SCRAP
      - MERGED
      - INPROCESS
      type: string
    EquipmentView:
      description: EquipmentView with Part-Details
      required:
      - equipment
      type: object
      properties:
        equipment:
          $ref: '#/components/schemas/Equipment'
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the Equipment
    Downtime:
      description: Downtime. Aggregate by duration and amount
      type: object
      properties:
        amountBooking:
          format: int32
          description: Amount of Bookings performed
          type: integer
        amountDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Amount of total Duration performed
        condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          - description: Condition Object
      readOnly: true
    MaterialBinSetupView:
      description: "MaterialBinSetupView Definition MaterialBin with Part-, MaterialCharge\
        \ and Setup Infos"
      type: object
      properties:
        activeSetupSince:
          format: date-time
          description: Setup is activated for a workorder since. May be null if not
            activated
          type: string
        firstSetup:
          format: date-time
          description: Date when the first materialBin was setup on this position
            at this OrganizationUnit
          type: string
        materialBin:
          $ref: '#/components/schemas/MaterialBin'
        materialCharge:
          allOf:
          - $ref: '#/components/schemas/MaterialCharge'
          - description: MaterialCharge of the MaterialBin
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the MaterialBin
        producerContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Producer of the MaterialBin
        requiredByBom:
          description: Is this Part required by BOM. May be null if not activated
          type: boolean
        setupPosition:
          description: SetupPosition
          type: string
        setupSince:
          format: date-time
          description: Current MaterialBin is setup since
          type: string
        supplierContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Supplier of the MaterialBin
        workorderWorkstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: Workstep for which the Setup is active. May be null if no
              Setup is active
      readOnly: true
    ModelType:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    WorkorderWorkstepEquipmentBookingPk:
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
        equipmentId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    MaterialBinTransactionData:
      description: Frequently changing data for a materialBin
      type: object
      properties:
        created:
          format: date-time
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        currentQuantity:
          format: double
          description: Total MaterialBin Quantity
          type: number
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lastBookDate:
          format: date-time
          description: Last BookDate the MaterialBin was used for s Serialunit or
            WorkorderWorkstep -Booking
          type: string
        lastMeasurementBookDate:
          format: date-time
          description: Last BookDate a MeasurementBooking was done for the MaterialBin
          type: string
        minBookDate:
          format: date-time
          description: Min Booking Date of bookings for the MaterialBin. Null if no
            booking was done so far.
          type: string
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
    WarnType:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    AssignmentView:
      description: AssignmentView contains Assignment and Conditions
      type: object
      properties:
        assignment:
          $ref: '#/components/schemas/Assignment'
        conditionList:
          description: Use 'conditions' instead
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          deprecated: true
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
      readOnly: true
    SystemInfo:
      description: SystemInfo
      type: object
      properties:
        FlywayDbInfoList:
          description: List of FlywayDbInfos
          type: array
          items:
            $ref: '#/components/schemas/FlywayDbInfo'
        JdbcDriverInfoList:
          description: List of JdbcDriverInfos
          type: array
          items:
            $ref: '#/components/schemas/JdbcDriverInfo'
        availableProcessors:
          format: int32
          description: Available Processors
          type: integer
        freeMemory:
          format: int64
          description: "Free Memory [bytes]"
          type: integer
        javaVersion:
          description: Version of the Java
          type: string
        maxMemory:
          format: int64
          description: "Max Memory [bytes]"
          type: integer
        platformVersion:
          description: Version of the Platform (Payara or Quarkus)
          type: string
        postgresqlVersion:
          description: List of JdbcDriverInfos
          type: string
        totalMemory:
          format: int64
          description: "Total Memory [bytes]"
          type: integer
      readOnly: true
    SerialunitBooking:
      description: Bookings of a Serialunit
      required:
      - bookDate
      - serialunitId
      - organizationUnitId
      - bookState
      - workorderId
      - hasFailures
      - hasMeasurementsNumeric
      - hasMeasurementsTextual
      - hasMaterial
      - hasSmtEquipment
      - hasEquipment
      - partId
      - workorderWorkstepId
      - processLocation
      - cycleTime
      - setupTime
      type: object
      properties:
        bookDate:
          format: date-time
          description: Booking OffsetDateTime
          type: string
          nullable: false
        bookState:
          $ref: '#/components/schemas/SerialunitBookingState'
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        cycleTime:
          format: int64
          description: Cycletime for this Booking
          type: integer
        firstBooking:
          description: "Is First Booking of the serialunit in this workstep (is determinded\
            \ by the server from the for PASS, FAIL, SCRAP, but not for INPROCESS)."
          type: boolean
          readOnly: true
        firstPass:
          type: boolean
        hasEquipment:
          description: Are EquipmentBookings existing for this Booking
          type: boolean
        hasFailures:
          description: Are FailureBooking existing for this Booking
          type: boolean
        hasMaterial:
          description: Are MaterialBookings existing for this Booking
          type: boolean
        hasMeasurementsNumeric:
          description: Are MeasurementNumericBookings existing for this Booking
          type: boolean
        hasMeasurementsTextual:
          description: Are MeasurementTextualBookings existing for this Booking
          type: boolean
        hasSmtEquipment:
          description: Are SmtEquipmentBookings existing for this Booking
          type: boolean
        multipanelId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: SerialUnitId for this Booking
            nullable: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
            nullable: false
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: PartID for this Booking
            nullable: false
        processLocation:
          description: ProcessLocation of the Workstep for this Booking
          type: string
        quantityFail:
          format: double
          description: Delta FAIL-Quantity (0 or 1) for WorkstepBooking based on this
            booking
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Delta FIRST-PASS-Quantity (0 or 1) for WorkstepBooking set
            when PASS and firstBooking = true
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: Delta InProcess-Quantity (0 or 1) for WorkstepBooking. Use
            this state only for long running process steps
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Delta PASS-Quantity (0 or 1) for WorkstepBooking based on this
            booking
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Delta SCRAP-Quantity (0 or 1) for WorkstepBooking based on
            this booking
          type: number
          readOnly: true
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: SerialUnitId for this Booking
            nullable: false
        setupTime:
          format: int64
          description: Setuptime for this Booking
          type: integer
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ShiftId for this Booking, can be null"
            nullable: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Testboard for this Booking
        testboardName:
          description: Name of the Testboard for this Booking
          type: string
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderClusterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the WorkorderCluster, can be null"
        workorderClusterPosition:
          description: Position of the Workorder in a WorkorderCluster
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkorderId of the Booking
            nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep for this Booking
            nullable: false
    SerialunitMeasurementBookingNumericView:
      description: "MeasurementBookingNumericView is a Join over MeasurementBookingNumeric,\
        \ Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        calculatedState:
          description: Calculated
          type: string
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of a Characteristic
        created:
          format: date-time
          description: Creation Date of the Measurement
          type: string
        lowerActionLimit:
          format: double
          description: LowerActionLimit
          type: number
        lowerScrapLimit:
          format: double
          description: LowerScrapLimit
          type: number
        maximum:
          format: double
          description: Maximum
          type: number
        measurementUnit:
          description: Unit of measurment
          type: string
        minimum:
          format: double
          description: Minimum
          type: number
        name:
          description: Name
          type: string
        nominal:
          format: double
          description: Nominal
          type: number
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of the Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: Name of the Part
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId
        state:
          description: State
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of a Testboard
        testboardName:
          description: Name of a Testboard
          type: string
        tolerance:
          format: double
          description: Tolerance
          type: number
        toleranceMaximum:
          format: double
          description: ToleranceMaximum
          type: number
        toleranceMinimum:
          format: double
          description: ToleranceMinimum
          type: number
        upperActionLimit:
          format: double
          description: UpperActionLimit
          type: number
        upperScrapLimit:
          format: double
          description: UpperScrapLimit
          type: number
        value:
          format: double
          description: Value
          type: number
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    FailureSymptom:
      description: Failure Symptom. Updates to a FailureSymptom will be stored in
        an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    DateNumberPair:
      description: DateNumberPair
      type: object
      properties:
        time:
          format: date-time
          description: Time
          type: string
        value:
          format: double
          description: Number Value
          type: number
      readOnly: true
    WorkorderDTO:
      description: Workorder data including Workplan/Worksteps Bom/BomItems
      required:
      - quantity
      - numberOfBoards
      - name
      - type
      - erpState
      - partName
      - workplan
      - bom
      type: object
      properties:
        bom:
          allOf:
          - $ref: '#/components/schemas/BomDTO'
          - nullable: false
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of a CustomerContact
        description:
          description: Description
          type: string
        erpState:
          allOf:
          - $ref: '#/components/schemas/WorkorderErpState'
          - nullable: false
        finishMode:
          $ref: '#/components/schemas/WorkorderFinishMode'
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
          nullable: false
        numberOfBoards:
          format: int32
          description: Number of Units that are produced in one cycle (e.g. PCB with
            4 Positions)
          minimum: 1
          type: integer
          nullable: false
        orderSequenceNumber:
          format: int32
          description: Order sequence number of the workorder
          type: integer
        parentWorkorderName:
          description: Name of parent workorder
          type: string
        partName:
          description: Name of a Part
          type: string
          nullable: false
        payload:
          description: Payload
          type: string
        plannedDeliveryDate:
          format: date-time
          description: planned delivery-date of the Workorder
          type: string
        plannedEndDate:
          format: date-time
          description: Planned end-date of the Workorder
          type: string
        plannedStartDate:
          format: date-time
          description: Planned start-date of the Workorder
          type: string
        priorityCode:
          description: Priority of the workorder
          type: string
        productionController:
          description: Production Controller
          type: string
        purchaseOrderNumber:
          description: Purchase Order Number
          type: string
        quantity:
          format: double
          description: Workorder Quantity
          minimum: 1
          type: number
          nullable: false
        quantityAdjustmentMode:
          $ref: '#/components/schemas/WorkorderQuantityAdjustmentMode'
        quantityOverbookPercentage:
          format: int32
          description: Percentage value that the workorder quantity could be overbooked.
            In combination with finishMode the workorder quantity could be overbooked
            up to this value before the workorder state will be set automatically
            to finished
          minimum: 1
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/WorkorderType'
          - nullable: false
        unit:
          description: Unit of the workorder
          default: PIECE
          type: string
        workplan:
          allOf:
          - $ref: '#/components/schemas/WorkplanDTO'
          - nullable: false
    EquipmentType:
      description: "Types of equipments (Only certain fields are updatable when released,\
        \ see field's description)"
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    LockType:
      description: "Lock Type Entity (Only certain fields are updatable when released,\
        \ see field's description). Updates to a LockType will be stored in an audit-trail."
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    MergeSerialunitHistory:
      description: History for serialunit merges and unmerges
      required:
      - stamp
      - serialunitId
      - parentSerialunitId
      - state
      - mergeDate
      - created
      type: object
      properties:
        created:
          format: date-time
          type: string
          nullable: false
        mergeDate:
          format: date-time
          description: Date when the Merge was done
          type: string
          nullable: false
        mergeLocation:
          description: BOM-Location of the PArent-BOM where the Merge is done for
          type: string
        mergeOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnitId where the merge was done
        parentSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ParentSerialunitId the serialunit is/was merged to
            nullable: false
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: SerialunitId that is/was merged into a ParentSerialunit
            nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
          nullable: false
        state:
          allOf:
          - $ref: '#/components/schemas/MergeState'
          - nullable: false
        unmergeComment:
          description: Optional Comment regarding the unmerge
          type: string
        unmergeDate:
          format: date-time
          description: "Date when the Merge was removed/unmerged, is null when the\
            \ merge is still valid"
          type: string
        unmergeOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnitId where a unmerge was done
      readOnly: true
    OrganizationUnitMessageHistory:
      description: History of messages of an OrganizationUnit
      required:
      - organizationUnitId
      - messageId
      - openSince
      - itemId
      - openUser
      - closedSince
      - closedUser
      - confirmToCloseDuration
      - openToCloseDuration
      type: object
      properties:
        actions:
          description: Action to be done
          type: string
        closedInfo:
          description: Additional close message
          type: string
        closedSince:
          format: date-time
          description: Message close-time
          type: string
          nullable: false
        closedUser:
          description: Name of the user that closed the message
          type: string
          readOnly: true
          nullable: false
        confirmToCloseDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration between confirm and close
            readOnly: true
            nullable: false
        confirmedInfo:
          description: Additional confirm message
          type: string
        confirmedSince:
          format: date-time
          description: Message confirm-time
          type: string
        confirmedUser:
          description: Name of the user that confirmed the message
          type: string
          readOnly: true
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        equipmentName:
          description: "Name of the equipment, the message was sent for"
          type: string
        itemId:
          description: Identifies for which item of the machine the message was sent
          type: string
          nullable: false
        lossFactor:
          format: double
          description: Lost pieces per hour while the message is not closed
          type: number
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message
            nullable: false
        openSince:
          format: date-time
          description: "Message open-time. May be set on creation-time of the message,\
            \ subsequent updates are forbidden!"
          type: string
          nullable: false
        openToCloseDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration between open and close
            readOnly: true
            nullable: false
        openToConfirmDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration between open and confirm
            readOnly: true
        openUser:
          description: Name of the user that opened the message
          type: string
          readOnly: true
          nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
            nullable: false
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the plant
            readOnly: true
        responsibleUser:
          description: Name of the user that is responsible
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the shift during open-time
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    FailureDTO:
      description: Failure Structure containing the failure information for a Serialunit
        booking
      required:
      - failureName
      - failureLocation
      - isRepaired
      type: object
      properties:
        failureActionName:
          description: Action for the failure
          type: string
        failureCauseName:
          description: Cause for the failure
          type: string
        failureComment:
          description: Optional Comment for the failure
          type: string
        failureLocation:
          description: Position of the Part (Einbauort)
          type: string
        failureMaterialBinName:
          description: Name of the MaterialBin with/that causes the failure
          type: string
        failureName:
          description: Unique Name/Code of the failure
          type: string
        failurePartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialPart with/that causes the failure
        failurePartName:
          description: Name of the MaterialPart with/that causes the failure
          type: string
        failurePatternName:
          description: Pattern for the failure
          type: string
        failureRiskName:
          description: Risk for the failure
          type: string
        failureSymptomName:
          description: Symptom for the failure
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id may not set in the input structure, the id is defined\
              \ by the server and returned to the client"
            readOnly: true
        isPseudo:
          description: Failure-definition-flag if this failure is a pseudo failure.<BR/>
            Is only used when the failure doesn't exist in SmartMom and has to be
            created.
          type: boolean
        isRepaired:
          description: Flag if the failure is repaired
          type: boolean
        repairOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the module which has repaired the failure
        repairOrganizationUnitName:
          description: Number of the module which has repaired the failure
          type: string
    MaterialType:
      description: "Material Type of a part: PRODUCT, MATERIAL, etc. A Product is\
        \ based on a BOM, Material is not based on a BOM."
      enum:
      - PRODUCT
      - MATERIAL
      - EQUIPMENT
      type: string
    MessageState:
      enum:
      - OPEN
      - CONFIRMED
      type: string
    ImportRTOUnidentifiableSerialunitBookingDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    OrganizationUnitWorkerDeregistration:
      description: "History of registered Workers at a OrganizationUnit in the past,\
        \ but deregistered now"
      required:
      - organizationUnitId
      - workerId
      - stamp
      - deregisterOrganizationUnitId
      - deregisterDate
      - created
      type: object
      properties:
        created:
          format: date-time
          description: Creation date of the server.
          type: string
          readOnly: true
          nullable: false
        deregisterDate:
          format: date-time
          description: Date when the worker was deregistered
          type: string
          nullable: false
        deregisterOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that was used to deregister the
              Worker. Set from the server to Line or Station that was used to deregister
              the user.
            readOnly: true
            nullable: false
        deregisterUsername:
          description: Username of the user who has deregistered the worker from that
            station
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the Worker is registered to
            nullable: false
        registerDate:
          format: date-time
          description: "Optional, Registration Date provided by the registration,\
            \ otherwise same as created"
          type: string
        registerOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that was ued to register the Worker.
              Set from the server to Line or Station that was used to register the
              user.
            readOnly: true
        registerUsername:
          description: Username who has registered the worker at the station.
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Last change date of the tuple
          type: string
          nullable: false
        workerId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Worker that is registered at the organizationUnit
            nullable: false
    HistoryOrganizationUnitMaterialBinSetupView:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          format: date-time
          description: Changed on date
          type: string
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnitMaterialBinSetupView'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    SerialunitView:
      description: View of a Serialunit
      type: object
      properties:
        lockGroups:
          description: LockGroups assigned to the Serialunit
          type: array
          items:
            $ref: '#/components/schemas/LockGroup'
          readOnly: false
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the Serialunit
            readOnly: false
        serialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: Serialunit
            readOnly: true
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder of the Serialunit
            readOnly: false
      readOnly: true
    WorkorderWorkstepEquipmentBooking:
      description: Bookings for Equipments setup at an organizationUnit during a WorkorderWorkstep
        Quantity Booking.
      required:
      - bookDate
      - organizationUnitId
      - setupPosition
      - workorderId
      - equipmentId
      - equipmentPartId
      - usages
      - failures
      - workorderWorkstepId
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
          nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Equioment used for this booking
            nullable: false
        equipmentPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the part of the equipment (EquipmentDefinition) used
              for this booking
            nullable: false
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
          nullable: false
        id:
          $ref: '#/components/schemas/WorkorderWorkstepEquipmentBookingPk'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the booking was done for
            nullable: false
        setupPosition:
          description: SetupPosition at the OrganizationUnit.
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the booking was done for
            nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
    MaterialBinMeasurementBookingSourceType:
      description: "Source of the measurement: Was the measurement done LOCALY or\
        \ is the date provided by the PRODUCER?"
      enum:
      - PRODUCER
      - LOCAL
      type: string
    OrganizationUnitWorkorderActivationHistoryView:
      description: Historical activations of an organizationUnit for a Workorder at
        a Workstep
      type: object
      properties:
        activationStamp:
          format: date-time
          description: Date when the activation was done
          type: string
          readOnly: true
        activationUserName:
          description: Ident of the User who had done the activation
          type: string
        deactivationStamp:
          format: date-time
          description: Date when the activation was deactivated
          type: string
          readOnly: true
        deactivationUserName:
          description: Ident of the User who had done the deactivation
          type: string
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit that was activated
        topOrganizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: "The OrganizationUnit that was used for activation, that\
              \ can be the organizationUnit(station) itself or the parent of the organizationUnit(line)"
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the organizationunit was activated for
        workorderCluster:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterBase'
          - description: The WorkorderCluster of the activation. Can be null
        workstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: The Workstep of the workorder the organizationunit was activated
              for
    BookingType:
      description: Used in Quantity Views to differ which type of bookings the quantities
        belong to
      enum:
      - SERIALUNIT
      - WORKORDER_WORKSTEP
      type: string
    SerialunitMergeHistoryView:
      description: A MergeHistory of a ParentSerialunit with one (Child)-Serialunit
        with its workorder and Part wrapped as SerialunitView
      type: object
      properties:
        serialunitMergeHistory:
          allOf:
          - $ref: '#/components/schemas/MergeSerialunitHistory'
          - description: The MergeHistory for one Merge
        serialunitView:
          allOf:
          - $ref: '#/components/schemas/SerialunitView'
          - description: SerialunitView Object with the Child-Serialnumber that is/was
              merged into the ParentSerialunit
      readOnly: true
    TextComponent:
      description: "Fix Text as a part of an ID (Only certain fields are updatable\
        \ when released, see field's description)"
      required:
      - fillMode
      - fillWith
      - text
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
            nullable: false
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
          nullable: false
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        text:
          description: Text to use as part of the generated ID
          type: string
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    ZoneOffsetTransitionRule:
      type: object
      properties:
        dayOfMonthIndicator:
          format: int32
          type: integer
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        dom:
          format: byte
          type: string
        dow:
          $ref: '#/components/schemas/DayOfWeek'
        localTime:
          $ref: '#/components/schemas/LocalTime'
        midnightEndOfDay:
          type: boolean
        month:
          $ref: '#/components/schemas/Month'
        offsetAfter:
          $ref: '#/components/schemas/ZoneOffset'
        offsetBefore:
          $ref: '#/components/schemas/ZoneOffset'
        standardOffset:
          $ref: '#/components/schemas/ZoneOffset'
        time:
          $ref: '#/components/schemas/LocalTime'
        timeDefinition:
          $ref: '#/components/schemas/TimeDefinition'
        timeEndOfDay:
          type: boolean
    SerialunitEquipmentBookingPk:
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
        equipmentId:
          $ref: '#/components/schemas/UUID'
        serialunitId:
          $ref: '#/components/schemas/UUID'
    AssignmentCondition:
      description: Connection between Assignment and MDC-Condition. Updates to a AssignmentCondition
        will be stored in an audit-trail.
      required:
      - assignmentId
      - conditionId
      type: object
      properties:
        assignmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Assignment
        conditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MDC-condition
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderClusterItemView:
      description: View for WorkorderClusterItems
      type: object
      properties:
        created:
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        part:
          $ref: '#/components/schemas/Part'
        position:
          type: string
        stamp:
          format: date-time
          type: string
        version:
          format: int64
          type: integer
        workorder:
          $ref: '#/components/schemas/Workorder'
    WorkorderClusterItem:
      description: Item in a cluster of workorders
      required:
      - workorderId
      - position
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        position:
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
    Duration:
      format: duration
      type: string
      example: P1D
    Serialunit:
      description: Serialunit e.g. PCB. Updates to a Serialunit will be stored in
        an audit-trail.
      required:
      - lockedState
      - unitState
      - parent
      - lastBookState
      - lastBookWorkstepId
      type: object
      properties:
        created:
          format: date-time
          type: string
        description:
          type: string
        handlingUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the HandlingUnit
        handlingUnitPosition:
          description: Position of a HandlingUnit. Can be null
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        lastBookDate:
          format: date-time
          type: string
          example: 3000-12-13T00:00:00.0Z
        lastBookState:
          allOf:
          - $ref: '#/components/schemas/SerialunitBookingState'
          - description: Last booked State of the Serialunit
            deprecated: true
        lastBookWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of last booked Workstep of the Serialunit
            deprecated: true
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
            nullable: false
        mergeDate:
          format: date-time
          description: Date when the Serialunit was Merged
          type: string
        mergeLocation:
          description: BOM-Location of the Parent-BOM the Merge is done for
          type: string
        mergeOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnitId who has done the merge of this serialunit
        minBookDate:
          format: date-time
          description: Minimum Bookdate of the Serialunit. May be null if no booking
            done so far.
          type: string
        multipanelId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of a Multipanel the Serialunit is part of. Only set if
              the Serialunit is part of a Multipanel
            nullable: true
        multipanelPosition:
          description: Position of the Serialunit in a Multipanel. Only set if the
            Serialunit is part of a Multipanel
          type: string
          nullable: true
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        parent:
          description: If true the serialunit has merged (Child)Serilaunits
          type: boolean
          nullable: false
        parentSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the ParentSerialunit when merged. Null if not merged
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        payload:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        storagePlaceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the StoragePlace. Is set when the MaterialBin is stored
              via Storage Service
        storagePlaceName:
          description: Name of the StoragePlace. Is set when the MaterialBin is stored
            via Storage Service
          type: string
        unitState:
          $ref: '#/components/schemas/SerialunitState'
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Workorder
    WorkstepType:
      description: Type of the workstep
      enum:
      - MACHINE
      - HUMAN
      type: string
    BookingPerDayPk:
      type: object
      properties:
        fromDate:
          format: date-time
          type: string
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    ImportRTOBase:
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
    HistoryUUIdentifiableObject:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          format: date-time
          description: Changed on date
          type: string
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/UUIdentifiableObject'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    SmtEquipmentType:
      description: Fixed defined SmtEquipmentTypes
      enum:
      - NOZZLE
      - FEEDER
      - HEAD
      - TESTER
      - TRAY
      - SETUP_TABLE
      - PREPARE_TABLE
      type: string
      deprecated: true
    MaterialBinBaseDTO:
      description: MaterialBinBaseDTO import data to create a materialBin.
      type: object
      properties:
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
    MaterialSetupDTO:
      description: MaterialSetup data for a given SetupPosition with the materialBin
        setup on this setupPosition and the quantity consumed of each materialbin.<BR>
      required:
      - setupPosition
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        location:
          description: "BOM- Location(s) that are assembled with this materialBin\
            \ by this serialunit upload.<BR/> When FailurePareto should be used each\
            \ Location has to be given separately each within it's own SmtSetupDTO,<BR/>\
            \ otherwise upload the Locations comma separated within one SmtSetupDTO"
          type: string
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        quantity:
          format: double
          description: "(Delta)-booking quantity, that was consumed by this booking\
            \ and reduces the materialBin quantity"
          minimum: 1
          type: number
        setupPosition:
          description: "SetupPosition of the materialbin on the placing machine.<BR>The\
            \ Feeder the materialBin is located at, can be given in the SmtSetupEquipmentDTO-Array"
          minLength: 1
          type: string
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
    OrganizationUnitConditionMessage:
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
        condition:
          $ref: '#/components/schemas/ConditionView'
        id:
          $ref: '#/components/schemas/UUID'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        payload:
          type: string
        shiftId:
          $ref: '#/components/schemas/UUID'
        stillCurrentCondition:
          type: boolean
    WorkstepEquipmentDTO:
      description: Equipment required at a workstep of a workorder
      required:
      - partName
      - location
      type: object
      properties:
        alternatives:
          description: List of Alternatives for this equipment
          type: array
          items:
            $ref: '#/components/schemas/WorkstepEquipmentAlternativeDTO'
        location:
          type: string
          nullable: false
        partName:
          description: Name of a equipment-part
          type: string
          nullable: false
        quantity:
          format: int32
          type: integer
    ParallelSerialunitBookingSerialunitViewFilter:
      description: Filter for Parallel SerialunitBookings
      required:
      - fromDate
      - toDate
      type: object
      properties:
        fromDate:
          format: date-time
          type: string
          nullable: false
        limit:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        offset:
          format: int32
          minimum: 0
          type: integer
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Filter for OrganizationUnitId
        toDate:
          format: date-time
          type: string
          nullable: false
    WorkorderWorkstepOrganizationUnitLockGroup:
      description: "WorkorderWorkstepOrganizationUnitLockGroup Entity. Assigns LockGroups\
        \ to a WorkorderWorkstepOrganizationUnit. Each Serialnumber booked a the defined\
        \ workorder, workstep and machine will be marked as locked with the LockGroups\
        \ defined here. Updates to a WorkorderWorkstepOrganizationUnitLockGroup will\
        \ be stored in an audit-trail."
      required:
      - workorderWorkstepOrganizationUnitId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lockGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the LockGroup defined in LockService
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstepOrganizationUnit
            nullable: false
    QuantityMaterialBookingView:
      description: "MaterialBookingView is a Join over MaterialBooking, MaterialBin,\
        \ MaterialBinPart, Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        location:
          description: Location
          type: string
        materialBinDescription:
          description: Description of the MaterialBin
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        materialBinSectionReferenceEnd:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBinSectionReferenceStart:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBookingCreated:
          format: date-time
          description: Creation Date of the MaterialBooking
          type: string
        materialBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBooking
        materialChargeDatecode:
          description: Material Producer ChargeDateCode
          type: string
        materialChargeNumber:
          description: Material Producer ChargeNumber
          type: string
        organizationUnitDescription:
          description: Description of OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        partName:
          description: Name of the Part
          type: string
        producerContactDescription:
          description: Producer contact description
          type: string
        producerContactName:
          description: Producer contact name
          type: string
        quantity:
          format: double
          description: Quantity
          type: number
        setupPosition:
          description: Setup Position
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Workorder Id
        workorderName:
          description: Workorder Name
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    WorkorderWorkstepBookingViewFilter:
      description: "Filter for Serialunit-Bookings, contains Part,Workorder, Workstep,\
        \ OrganizationUnit and BookDate From-To"
      required:
      - fromDate
      - toDate
      type: object
      properties:
        fromDate:
          format: date-time
          type: string
          nullable: false
        limit:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        offset:
          format: int32
          minimum: 0
          type: integer
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        organizationUnitName:
          type: string
        partId:
          $ref: '#/components/schemas/UUID'
        partName:
          type: string
        toDate:
          format: date-time
          type: string
          nullable: false
        workorderClusterId:
          $ref: '#/components/schemas/UUID'
        workorderClusterName:
          type: string
        workorderClusterPosition:
          type: string
        workorderId:
          $ref: '#/components/schemas/UUID'
        workorderName:
          type: string
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
        workstepId:
          $ref: '#/components/schemas/UUID'
        workstepName:
          type: string
    Multipanel:
      description: Combination of multiple serialunits on one panel
      required:
      - workorderId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        name:
          description: Name
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Workorder
    OrganizationUnitWorkerRegistrationView:
      description: Active Users History by an OrganizationUnit
      type: object
      properties:
        isLineRegistration:
          description: Was the registration done by a Line login
          type: boolean
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        registerDate:
          format: date-time
          description: Registration date
          type: string
        registerUserName:
          description: Username who has registered the Worker
          type: string
        workerDescription:
          description: Description of the worker that is registered at the station
          type: string
        workerId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the worker that is registered at the station
        workerName:
          description: Name of the worker that is registered at the station
          type: string
      readOnly: true
    Action:
      enum:
      - CREATED
      - MODIFIED
      - DELETED
      type: string
    OrganizationUnitEquipmentSetup:
      description: Updates to a OrganizationUnitEquipmentSetup will be stored in an
        audit-trail.
      required:
      - equipmentId
      - organizationUnitId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        setupPosition:
          description: SetupPosition
          type: string
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderView:
      description: "Complete structure for a Workorder with produced part, workstep\
        \ and bomItems."
      type: object
      properties:
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part produced by the Workorder
        workorder:
          $ref: '#/components/schemas/Workorder'
        workorderWorkstepViewList:
          description: "Worksteps of the Workorder, with details (BomItems, etc.)"
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepView'
    LockEntity:
      description: Lock of an Entity
      required:
      - lockGroupId
      - entityId
      - entityType
      - entityName
      - userName
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        entityId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
            nullable: false
        entityName:
          type: string
          readOnly: true
          nullable: false
        entityType:
          type: string
          readOnly: true
          nullable: false
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lockGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
            nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        userName:
          type: string
          readOnly: true
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    MaterialBinSectionDTO:
      description: A sequential MaterialBin (e.g. a coil of metal) can be divided
        into several sections. Each section can have its own materialCharge and may
        be marked as not-usable.
      required:
      - sectionStart
      - sectionEnd
      type: object
      properties:
        deleteRequest:
          description: "If true Deletion of the Section is requested.<BR> Caution:\
            \ Deletion don't check if the Section might be referenced by measurements."
          type: boolean
        description:
          description: Optional description of the section
          type: string
        lockGroupName:
          description: "Section will be locked after creating when a LockGroupName\
            \ is passed.<BR/>If a lockGroup with that name already exists, the Lock\
            \ will be assigned to that lockGroup, otherwise a new LockGroup will be\
            \ created"
          type: string
        materialChargeDatecode:
          description: "Producer datecode of the orderName of the materialbinSection.<BR>Has\
            \ to be given togehter with materialChargeName, otherwise the materialCharge\
            \ will be inherited from it's materialBin."
          type: string
        materialChargeName:
          description: "Producer OrderName of the materialbinSection. If not given\
            \ on create, it will be inherited from it's materialBin."
          type: string
        name:
          description: "Name of the section, if empty name is set: [MaterialBinName]-[SectionStart],\
            \ e.g. MatBin001-12.3"
          type: string
        sectionEnd:
          format: double
          description: End of the section
          type: number
          nullable: false
        sectionStart:
          format: double
          description: Start of the section<BR>The section range may not overlap with
            other sections
          type: number
          nullable: false
    WorkorderEquipmentSetup:
      required:
      - equipmentId
      - organizationUnitId
      - workorderWorkstepId
      - validFrom
      - validTo
      - workorderId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        setupPosition:
          description: SetupPosition
          type: string
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        validFrom:
          format: date-time
          type: string
          readOnly: true
          nullable: false
        validTo:
          format: date-time
          type: string
          readOnly: true
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
    QuantityMaterialBookingViewGrouped:
      description: MaterialBookingViewGrouped is MaterialBookingView grouped by Part
        and Location
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        firstBookDate:
          format: date-time
          description: 'First Book Date '
          type: string
        lastBookDate:
          format: date-time
          description: 'Last Book Date '
          type: string
        location:
          description: Location
          type: string
        materialBinDescription:
          description: Description of the MaterialBin
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        materialBinPartDescription:
          description: Description of the MaterialBinPart
          type: string
        materialBinPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinPart
        materialBinPartName:
          description: Name of the MaterialBinPart
          type: string
        materialBinSectionReferenceEnd:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBinSectionReferenceStart:
          format: double
          description: Position/Reference in Section of the materialBin
          type: number
        materialBookingCreated:
          format: date-time
          description: Creation Date of the MaterialBooking
          type: string
        materialBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBooking
        materialChargeDatecode:
          description: Material Producer ChargeDateCode
          type: string
        materialChargeNumber:
          description: Material Producer ChargeNumber
          type: string
        maxMaterialBinSectionReferenceEnd:
          format: double
          description: Max. End Position/Reference in Section of the materialBin
          type: number
        maxMaterialBinSectionReferenceStart:
          format: double
          description: Max. Start Position/Reference in Section of the materialBin
          type: number
        minMaterialBinSectionReferenceEnd:
          format: double
          description: Min. End Position/Reference in Section of the materialBin
          type: number
        minMaterialBinSectionReferenceStart:
          format: double
          description: Min. Start Position/Reference in Section of the materialBin
          type: number
        organizationUnitDescription:
          description: Description of OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Part
        partName:
          description: Name of the Part
          type: string
        producerContactDescription:
          description: Producer contact description
          type: string
        producerContactName:
          description: Producer contact name
          type: string
        qtyBookings:
          format: int32
          description: 'Anount of Bookings for Group Key '
          type: integer
        quantity:
          format: double
          description: Quantity
          type: number
        setupPosition:
          description: Setup Position
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Workorder Id
        workorderName:
          description: Workorder Name
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    DurationPerDayPk:
      type: object
      properties:
        fromDate:
          format: date-time
          type: string
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
    ZoneOffset:
      type: object
      properties:
        rules:
          $ref: '#/components/schemas/ZoneRules'
        totalSeconds:
          format: int32
          type: integer
    CycleTime:
      description: Time needed for Production/Setup
      type: object
      properties:
        cycleTimeType:
          allOf:
          - $ref: '#/components/schemas/CycleTimeType'
          - description: Type for the Cycletime (Production)
            readOnly: true
        time:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: "CycleTime, calculated by sum of the WorkstepPositions"
            readOnly: true
    ImportRTOEquipmentDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    MaterialBinMeasurementBookingTextual:
      description: Textual measurement for a materialBin. A Measurement is unique
        for it's name and bookdate
      required:
      - name
      - measurementUnit
      - bookDate
      - materialBinId
      - sourceType
      - partId
      - value
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
          nullable: false
        calculatedState:
          type: string
        created:
          format: date-time
          type: string
          readOnly: true
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement for materialBin with this ID
            nullable: false
        materialBinSectionReference:
          format: double
          description: Measurement referencing a certain section of the materialBin
          type: number
        maximum:
          description: Maximun
          type: string
        measurementUnit:
          type: string
          nullable: false
        minimum:
          description: Minimun
          type: string
        name:
          type: string
          nullable: false
        nominal:
          description: Nominal
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement done by a organizationUnit with this ID
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement for materialBin of part with this ID
            nullable: false
        sourceType:
          allOf:
          - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
          - nullable: false
        stamp:
          format: date-time
          type: string
          readOnly: true
        state:
          description: State of the measured characteristic
          type: string
        testboardName:
          description: Name of an external Testboard the measurement references to
          type: string
        tolerance:
          description: Tolerance
          type: string
        value:
          description: Value
          type: string
          nullable: false
    TransactionRequirement:
      enum:
      - "OFF"
      - WARN
      - STRICT
      type: string
    ImportRTOUnidentifiable:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    WorkorderWorkstepView:
      type: object
      properties:
        equipments:
          description: List of Equipments required at that workstep
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepEquipmentView'
        workorderWorkstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: A Workstep of the Workorder
        workorderWorkstepBomItemViews:
          description: List of BomItems assigned to the Workstep
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepBomItemView'
        workorderWorkstepOrganizationUnits:
          description: List of OrganzizationUnitPositions assigned to that Workstep
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnitView'
    BomItemDTO:
      description: BomItem import data
      required:
      - location
      - partName
      - unit
      - workstepName
      type: object
      properties:
        alternatives:
          description: List of Alternatives for this BomItem
          type: array
          items:
            $ref: '#/components/schemas/BomItemAlternativeDTO'
        erpVersion:
          description: Optional ErpVersion of this bomItem. <BR/> Can be used if the
            part itself is a product and only a special ErpVersion should be assembled.
            <BR/> Default empty for Raw-Material or if all ErpVersion of the sub-product
            can be used
          type: string
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        location:
          description: "Location of Component on the Assembly (DE: Einbauort)"
          type: string
          nullable: false
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the partId of this component/material
        partName:
          description: Name of the material
          type: string
          nullable: false
        payload:
          type: string
        processLocation:
          description: Location of the BomItem. Used for example to differ between
            solder side and component side
          type: string
        quantity:
          format: double
          type: number
        setupRequired:
          description: Setup is required for this BomItem
          default: "true"
          type: boolean
        unit:
          default: PIECE
          type: string
          nullable: false
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the unit of this component
        workstepName:
          description: Name of a Workstep on which this material is consumed
          type: string
          nullable: false
    ZoneOffsetTransition:
      type: object
      properties:
        dateTimeAfter:
          format: date-time
          type: string
        dateTimeBefore:
          format: date-time
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        durationSeconds:
          format: int32
          type: integer
        epochSecond:
          format: int64
          type: integer
        gap:
          type: boolean
        instant:
          format: date-time
          type: string
        offsetAfter:
          $ref: '#/components/schemas/ZoneOffset'
        offsetBefore:
          $ref: '#/components/schemas/ZoneOffset'
        overlap:
          type: boolean
        transition:
          format: date-time
          type: string
        validOffsets:
          type: array
          items:
            $ref: '#/components/schemas/ZoneOffset'
    Condition:
      description: Definition of a Machine Data Condition. Updates to a Condition
        will be stored in an audit-trail.
      required:
      - level4
      type: object
      properties:
        color:
          allOf:
          - $ref: '#/components/schemas/GecColor'
          - description: "Color to be used, on display"
        conditionGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "If the condition is member of a group, this is this ID of\
              \ the group."
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        level2:
          allOf:
          - $ref: '#/components/schemas/Level2'
          - description: MDC-Level2 according to SEMI E 10
            readOnly: true
        level3:
          allOf:
          - $ref: '#/components/schemas/Level3'
          - description: MDC-Level3 according to SEMI E 10
            readOnly: true
        level4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - description: MDC-Level4 according to SEMI E 10
            nullable: false
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    DayOfWeek:
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      type: string
    IdGeneratorType:
      description: "null (Only certain fields are updatable when released, see field's\
        \ description)"
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    SerialunitBookingSerialunitView:
      description: SerialunitBookingSerialunitView is a Join over SerialunitBooking
        and Serialunit
      type: object
      properties:
        organizationUnitDescription:
          description: 'Description of the OrganizationUnit which has done the booking '
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the OrganizationUnit which has done the booking '
        organizationUnitName:
          description: 'Name of the OrganizationUnit which has done the booking '
          type: string
        organizationunitId:
          $ref: '#/components/schemas/UUID'
        partDescription:
          description: 'Description of the Part of the serialUnit '
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Name of the Part of the SerialUniz '
        partName:
          description: 'Name of the Part of the serialUnit '
          type: string
        serialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: Serialnumber
        serialunitBooking:
          allOf:
          - $ref: '#/components/schemas/SerialunitBooking'
          - description: 'Booking of a Serialnumber '
        workorderClusterView:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterView'
          - description: Workorder Cluster View
        workorderDescription:
          description: 'Description of the Workorder the serialUnit belongs to '
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Workorder the serialUnit belongs to '
        workorderName:
          description: 'Name of the Workorder the serialUnit belongs to '
          type: string
        workorderWorkstepDescription:
          description: 'Description of the WorkorderWorkstep the serialUnit belongs
            to '
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the WorkorderWorkstep the serialUnit belongs to '
        workorderWorkstepName:
          description: 'Name of the WorkorderWorkstep the serialUnit belongs to '
          type: string
      readOnly: true
    IdGeneratorComponentView:
      description: IdGeneratorComponent Object
      type: object
      properties:
        className:
          description: "ClassName to differ between the different Components (Counter,\
            \ DateTime, ....)"
          type: string
        idGeneratorComponent:
          $ref: '#/components/schemas/IdGeneratorComponent'
        sequenceNumber:
          format: int32
          description: sequenceNumber
          type: integer
      readOnly: true
    MaterialBinSectionView:
      description: A sequential MaterialBin (e.g. a coil of metal) can be divided
        into several sections. Each section can have its own materialCharge and may
        be marked as not-usable.
      type: object
      properties:
        description:
          description: Description
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBinSection
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: LockedState of the Section
        materialCharge:
          allOf:
          - $ref: '#/components/schemas/MaterialCharge'
          - description: MaterialCharge of the section
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        sectionEnd:
          format: double
          description: End of the section
          type: number
        sectionStart:
          format: double
          description: Start of the section
          type: number
      readOnly: true
    CategorizedDowntime:
      description: Downtime. Aggregated & categorized by duration
      type: object
      properties:
        amountBooking:
          format: int32
          description: Amount of Bookings performed
          type: integer
        amountDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Amount of total Duration performed
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          - description: Category
        end:
          format: date-time
          description: End
          type: string
        start:
          format: date-time
          description: Start
          type: string
      readOnly: true
    HistorySerialunit:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          format: date-time
          description: Changed on date
          type: string
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    IdGeneratorAssignment:
      description: Assignments of MasterData to an IdGenerator. Updates to a IdGeneratorAssignment
        will be stored in an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        idGeneratorId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator
        idGeneratorTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Type of IdGenerator
            readOnly: true
        masterDataId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MasterData
        masterDataType:
          allOf:
          - $ref: '#/components/schemas/MasterDataType'
          - description: Type of the MasterData. May be null if the IdGenerator is
              assigned to a type of masterData unknown in IdGenerator-Service.
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ImportRTOMaterialBinDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    OrganizationUnitProductionHistory:
      description: ProductionHistory of an OrganizationUnit
      type: object
      properties:
        amountBookings:
          format: int32
          description: 'Amount of Serialunit-Bookings for the Workorder and given
            Daterange '
          type: integer
        amountQuantityBookings:
          format: int32
          description: Amount of Quantity Bookings over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: integer
        amountSerialUnits:
          format: int32
          description: 'Amount of booked SerialUnits for the Workorder and given Daterange '
          type: integer
        amountStateFail:
          format: int32
          description: 'Amount of booked SerialUnits with State = FAIL for the Workorder
            and given Daterange '
          type: integer
        amountStateFailLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = FAIL for the
            Workorder and given Daterange '
          type: integer
        amountStateInProcess:
          format: int32
          description: 'Amount of booked SerialUnits with State = IN_PROCESS for the
            Workorder and given Daterange '
          type: integer
        amountStateInProcessLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = IN_PROCESS
            for the Workorder and given Daterange '
          type: integer
        amountStateInvalid:
          format: int32
          description: 'Amount of booked SerialUnits with State = Undefined or Null
            for the Workorder and given Daterange '
          type: integer
        amountStateInvalidLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = Undefined or
            Null for the Workorder and given Daterange '
          type: integer
        amountStatePass:
          format: int32
          description: 'Amount of booked SerialUnits with State = PASS for the Workorder
            and given Daterange '
          type: integer
        amountStatePassLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = PASS for the
            Workorder and given Daterange '
          type: integer
        amountStateScrap:
          format: int32
          description: 'Amount of booked SerialUnits with State = SCRAP for the Workorder
            and given Daterange '
          type: integer
        amountStateScrapLastBooking:
          format: int32
          description: 'Amount of booked SerialUnits with Last State = SCRAP for the
            Workorder and given Daterange '
          type: integer
        endDate:
          format: date-time
          description: 'EndDate-Filter of the OrganizationUnitProductionHistory to
            search for '
          type: string
        estimationCycleTime:
          format: double
          description: 'Estimation CycleTime of SerialUnits of the Workorder for given
            DateRange '
          type: number
        firstBookDate:
          format: date-time
          description: 'First Bookdate of a SerialunitBooking in the given DateRange '
          type: string
        firstBookedSerialUnitDescription:
          description: 'First Booked SerialUnitDescription of the Workorder for given
            DateRange '
          type: string
        firstBookedSerialUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'First Booked SerialUnitId of the Workorder for given DateRange '
        firstBookedSerialUnitName:
          description: 'First Booked SerialUnitName of the Workorder for given DateRange '
          type: string
        firstQuantityBookDate:
          format: date-time
          description: First Bookdate over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: string
        hasFailures:
          description: 'Are there Serialunit-Failure bookings existing for the Workorder
            and given Daterange '
          type: boolean
        hasMaterial:
          description: 'Are there Serialunit-Material bookings existing for the Workorder
            and given Daterange '
          type: boolean
        hasMeasurementNumeric:
          description: 'Are there Serialunit-MeasurementNumeric bookings existing
            for the Workorder and given Daterange '
          type: boolean
        hasMeasurementTextual:
          description: 'Are there Serialunit-MeasurementTextual bookings existing
            for the Workorder and given Daterange '
          type: boolean
        hasSmtEquipment:
          description: 'Are there Serialunit-Equipment bookings existing for the Workorder
            and given Daterange '
          type: boolean
        lastBookDate:
          format: date-time
          description: 'Last Bookdate of the Workorder for given DateRange '
          type: string
        lastBookedSerialUnitDescription:
          description: 'Last Booked SerialUnitDescription of the Workorder for given
            DateRange '
          type: string
        lastBookedSerialUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Last Booked SerialUnitId of the Workorder for given DateRange '
        lastBookedSerialUnitName:
          description: 'Last Booked SerialUnitName of the Workorder for given DateRange '
          type: string
        lastQuantityBookDate:
          format: date-time
          description: Last Bookdate over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: string
        maxCycleTime:
          format: int64
          description: 'Maximum CycleTime of SerialUnits of the Workorder for given
            DateRange '
          type: integer
        minCycleTime:
          format: int64
          description: 'Minimum CycleTime of SerialUnits of the Workorder for given
            DateRange '
          type: integer
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the OrganizationUnit '
        partDescription:
          description: 'Description of the Part '
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Part '
        partName:
          description: 'Name of the Part '
          type: string
        quantityFail:
          format: double
          description: Sum of FAIL quantities over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: number
        quantityFirstPass:
          format: double
          description: Sum of FIRST_PASS quantities over all QuantityBookings for
            Workorder/Workstep/Organizationunit and the given DateRange
          type: number
        quantityInProcess:
          format: double
          description: Sum of IN_PROCESS quantity over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: number
        quantityPass:
          format: double
          description: Sum of PASS quantities over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: number
        quantityScrap:
          format: double
          description: Sum of SCRAP quantities over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: number
        startDate:
          format: date-time
          description: 'StartDate-Filter of the OrganizationUnitProductionHistory
            to search for '
          type: string
        sumQuantityCycleTime:
          format: int64
          description: Sum of the CycleTimes over all QuantityBookings for Workorder/Workstep/Organizationunit
            and the given DateRange
          type: integer
        sumQuantitySetupTime:
          format: int64
          description: Sum of the SetupTimes quantities over all QuantityBookings
            for Workorder/Workstep/Organizationunit and the given DateRange
          type: integer
        workorderDescription:
          description: 'Description of the Workorder '
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Workorder '
        workorderName:
          description: 'Name of the Workorder '
          type: string
        workorderTotalQuantity:
          format: double
          description: 'Total Quantity of the Workorder '
          type: number
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the WorkorderWorkstep '
        workstepDescription:
          description: 'WorkstepDescription '
          type: string
        workstepLocation:
          description: 'WorkstepLocation '
          type: string
        workstepName:
          description: 'WorkstepName '
          type: string
      readOnly: true
    ImportBulkRTOEquipmentDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    BomDTO:
      description: "Bom-structure for an imported workorder. If no bom-items are defined\
        \ in smom on release of the workorder, the bom will be fetched from masterdata\
        \ and it's definition copied.\n * If a MasterBomId is given (see Workorder-Resource-API):\
        \ Load Bom from mdata for id. Else \n * If a Bom-name is given: Load newest\
        \ Bom from mdata for name and erpVersion. Else \n * Load newest Bom from mdata\
        \ for workorder's partId and erpVersion.\n\nOn Update of a released workorder\
        \ BOM may be changed: Add or remove bomItems and it's alternatives."
      required:
      - bomItemList
      type: object
      properties:
        bomItemList:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BomItemDTO'
        erpVersion:
          type: string
        name:
          type: string
    HistoryOrganizationUnitAssignment:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          format: date-time
          description: Changed on date
          type: string
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnitAssignment'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    MaterialBin:
      description: Container for material. Updates to a MaterialBin will be stored
        in an audit-trail.
      required:
      - lockedState
      - totalQuantity
      - currentQuantity
      type: object
      properties:
        created:
          format: date-time
          type: string
        currentQuantity:
          format: double
          description: "Current MaterialBin Quantity. Must be given on creation, but\
            \ should no be updated. Will be decremented by material-bookings only."
          minimum: 0
          type: number
          nullable: false
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lastBookDate:
          format: date-time
          description: Last BookDate the MaterialBin was used for a Serialunit or
            WorkorderWorkstep-Booking
          type: string
          readOnly: true
        lastMeasurementBookDate:
          format: date-time
          description: Last BookDate a MeasurementBooking was done for the MaterialBin
          type: string
          readOnly: true
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
            nullable: false
        materialChargeId:
          $ref: '#/components/schemas/UUID'
        minBookDate:
          format: date-time
          description: Min Booking Date of bookings for the MaterialBin. Null if no
            booking was done so far.
          type: string
          readOnly: true
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Reference to the part. Will be set to the partId of the materialCharge
            readOnly: true
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the producer-contact,stored in address-service."
        sectionized:
          description: MaterialBin consists of multiple sections (see MaterialBinSection).
            Only set by the server when sections are added/removed
          type: boolean
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        storagePlaceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "If the materialBin is stored: ID of the storagePlace"
            readOnly: true
        storagePlaceName:
          description: "If the materialBin is stored: Name of the storagePlace"
          type: string
          readOnly: true
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the supplier-contact, stored in address-service"
        totalQuantity:
          format: double
          description: Total MaterialBin Quantity
          minimum: 0
          type: number
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ProcessMeasurementBookingDTO:
      description: Measurement Structure  with given MeasurementArray
      required:
      - organizationUnitName
      - measurementDataList
      type: object
      properties:
        bookDate:
          format: date-time
          description: "bookDate for the given pcb booking, if not given the server\
            \ date is used"
          type: string
        measurementDataList:
          description: 'Measurement Data '
          type: array
          items:
            description: Measurement Structure
            required:
            - state
            - value
            - name
            - measurementUnit
            type: object
            properties:
              state:
                description: State of Booking
                type: string
              minimum:
                description: Minimum Value
                type: string
              maximum:
                description: Maximum Value
                type: string
              nominal:
                description: Nominal Value
                type: string
              tolerance:
                description: Tolerance Value
                type: string
              value:
                description: Value of Measurement
                type: string
              name:
                description: Name of the Measurement
                type: string
              type:
                description: Type of the Measurement
                type: string
              measurementUnit:
                description: Unit of the Measurement
                type: string
              characteristicId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: ID of the Characteristic(Testplan)
              testboardId:
                allOf:
                - $ref: '#/components/schemas/UUID'
                - description: ID of the SMOM-Testboard (only supported for numeric
                    Measurements)
              testboardName:
                description: Name of an external Testplan (only supported for numeric
                  Measurements)
                type: string
              toleranceMinimum:
                description: Tolerance Minimum Value
                type: string
              toleranceMaximum:
                description: Tolerance Maximum Value
                type: string
              lowerActionLimit:
                description: Lower Action Limit Value
                type: string
              upperActionLimit:
                description: Upper Action Limit Value
                type: string
              lowerScrapLimit:
                description: Lower Scrap Limit Value
                type: string
              upperScrapLimit:
                description: Upper Scrap Limit Value
                type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit(optional). Can be set if available
              otherwise use OrganizationUnitName instead
        organizationUnitName:
          description: Name of the station that performes the booking
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part(optional). Can be set if available otherwise
              use WorkorderName instead
        partName:
          description: Name of the Product the Process Booking belongs to
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Testboard(optional).
        testboardName:
          description: Name of the Testboard the Process Booking belongs to
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder(optional). Can be set if available otherwise
              use WorkorderName instead
        workorderName:
          description: Name of the Workorder the Process Booking belongs to
          type: string
    Equipment:
      description: Equipment used in production. Updates to a Equipment will be stored
        in an audit-trail.
      required:
      - lockedState
      - maintenanceIntervalGroups
      - equipmentTypeId
      - partId
      - usageFactor
      type: object
      properties:
        created:
          format: date-time
          type: string
        description:
          description: Description
          type: string
        equipmentTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        failures:
          format: int32
          type: integer
          readOnly: true
        failuresTotal:
          format: int32
          type: integer
          readOnly: true
        finalExpiration:
          allOf:
          - $ref: '#/components/schemas/FinalMaintenanceInterval'
          - description: "Final Expiration. If expired, the Object must be discarded,\
              \ should not longer be used!"
        firstBookDate:
          format: date-time
          type: string
          readOnly: true
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lastBookDate:
          format: date-time
          type: string
          readOnly: true
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
            nullable: false
        maintenanceIntervalGroups:
          description: each MaintenanceIntervalGroup-name has to be unique
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceIntervalGroup'
          nullable: false
        maintenanceState:
          allOf:
          - $ref: '#/components/schemas/MaintenanceState'
          - readOnly: true
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        nextDurationMaintenance:
          format: date-time
          description: Available for duration-based MaintenanceInterval only
          type: string
          readOnly: true
        nextDurationMaintenanceName:
          allOf:
          - $ref: '#/components/schemas/MaintenanceName'
          - description: Available for duration-based MaintenanceInterval only
            readOnly: true
        nextFailureMaintenance:
          format: int32
          description: Available for failure-based MaintenanceInterval only
          type: integer
          readOnly: true
        nextFailureMaintenanceName:
          allOf:
          - $ref: '#/components/schemas/MaintenanceName'
          - description: Available for failure-based MaintenanceInterval only
            readOnly: true
        nextUsageMaintenance:
          format: int32
          description: Available for usage-based MaintenanceInterval only
          type: integer
          readOnly: true
        nextUsageMaintenanceName:
          allOf:
          - $ref: '#/components/schemas/MaintenanceName'
          - description: Available for usage-based MaintenanceInterval only
            readOnly: true
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "id of the producer, null if there is no producer"
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        storagePlaceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "If the materialBin is stored: ID of the storagePlace"
            readOnly: true
        storagePlaceName:
          description: "If the materialBin is stored: Name of the storagePlace"
          type: string
          readOnly: true
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "id of the supplier, null if there is no supplier"
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
          nullable: false
        usages:
          format: int32
          type: integer
          readOnly: true
        usagesTotal:
          format: int32
          type: integer
          readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    GroupKeyEnum:
      description: Fixed defined GroupKeys
      enum:
      - PRODUCT
      - STATION
      type: string
    MultipanelSerialUnitBookingStateDTO:
      description: 'MultipanelSerialUnitBookingState data '
      required:
      - organizationUnitName
      - workstepName
      type: object
      properties:
        bookDate:
          format: date-time
          description: "optional creation date of the bookings, if not given the server\
            \ date is used"
          type: string
        bookState:
          $ref: '#/components/schemas/SerialunitBookingState'
        confirmationNumber:
          description: "ConfirmationNumber, can be used alternatively instead of Workorder\
            \ and Workstep parameter, to identify the Workorder and the workstep based\
            \ on a unique confirmationNumber passed from the ERP-System to identify\
            \ the WorkorderWorkstep."
          type: string
        cycleTime:
          format: int64
          description: optional cycletime in milliseconds to build the unit(s) or
            this booking
          type: integer
        equipmentSetups:
          description: List of used equipments for this booking
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSetupDTO'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Multipanel (UUID), is set from the server"
            readOnly: true
        multiPanelName:
          description: Name of the Multipanel.
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit(optional). Can be set if available\
              \ otherwise use OrganizationUnitName instead <BR />When no OrganizationUnitName\
              \ or Id is given, the OrganizationUnit is detected via the Workstep\
              \ OrganizatioinUnits , but only when there is one OrganizationUnit assigned\
              \ to the Workstep.<BR />When multiple OrganizationUnits are assigned\
              \ to a Workstep, the OrganizationUnitName or ID is mandatory."
        organizationUnitName:
          description: "Name of the station that performes the booking<BR /> When\
            \ no OrganizationUnit-Name or Id is given, the OrganizationUnit is detected\
            \ via the Workstep OrganizatioinUnits, but only when there is one OrganizationUnit\
            \ assigned to the Workstep.<BR/> When multiple OrganizationUnits are assigned\
            \ to a Workstep, the OrganizationUnit-Name or ID is mandatory."
          type: string
        serialunitName:
          description: Name of a Serialunit. Used to identify a Multipanel.
          type: string
        setupTime:
          format: int64
          description: SetupTime needed for setup preparation before building the
            unit(s)
          type: integer
        workorderClusterPosition:
          description: Booking belongs to this position in a WorkorderCluster
          type: string
          nullable: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The ID of the Workorder the booking should be done for.Can
              be set if available otherwise use WorkorderName instead '
        workorderName:
          description: The Name of the Workorder the booking should be done for.WorkorderId
            can be used alternatively.
          type: string
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The Id of the Workstep the booking should be done for.Can
              be set if available otherwise use WorkstepName instead '
        workstepName:
          description: The Name of the Workstep the booking should be done for.WorkstepId
            can be used alternatively.
          type: string
    HandlingUnitSerialunit:
      description: Object to assign multiple Serialunits to a HandlingUnit
      required:
      - serialunitName
      type: object
      properties:
        handlingUnitPosition:
          description: Position of the SerialUnit in a HandlingUnit
          type: string
        serialunitName:
          description: Name of a SerialUnit
          type: string
          nullable: false
        workorderName:
          description: "Name of a Workorder, must be given if SerialunitName is not\
            \ unique"
          type: string
    PredictionRunResult:
      description: Prediction Run Result
      required:
      - predictionRunId
      - created
      - stamp
      - type
      - typePayload
      - fromDate
      - toDate
      type: object
      properties:
        created:
          format: date-time
          type: string
          nullable: false
        fromDate:
          format: date-time
          type: string
          nullable: false
        id:
          format: int64
          type: integer
        predictionRunId:
          format: int64
          type: integer
          nullable: false
        qtyUsed:
          format: int64
          type: integer
        qtyUsedTotal:
          format: int64
          type: integer
        qtyUsedTotalWithFailure:
          format: int64
          type: integer
        qtyUsedWithFailure:
          format: int64
          type: integer
        stamp:
          format: date-time
          type: string
          nullable: false
        toDate:
          format: date-time
          type: string
          nullable: false
        type:
          type: string
          nullable: false
        typePayload:
          type: string
          readOnly: true
          nullable: false
      readOnly: true
    CurrentCounter:
      description: CurrentCounter of an IdGenerator and MasterData
      required:
      - idGeneratorId
      - masterDataId
      - currentValue
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        currentValue:
          description: current value of the counter
          type: string
          readOnly: true
          nullable: false
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        idGeneratorId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator
            nullable: false
        lastGenerated:
          description: last generated ID
          type: string
          readOnly: true
        masterDataId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MasterData
            nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ListString:
      type: array
      items:
        type: string
    OrganizationUnitWorkerRegistration:
      description: Workers curently registered at a OrganizationUnit
      required:
      - organizationUnitId
      - workerId
      - stamp
      - created
      type: object
      properties:
        created:
          format: date-time
          description: Creation date of the server.
          type: string
          readOnly: true
          nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the Worker is registered to
            nullable: false
        registerDate:
          format: date-time
          description: "Optional, Registration Date provided by the registration,\
            \ otherwise same as created"
          type: string
        registerOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that was ued to register the Worker.
              Set from the server to Line or Station that was used to register the
              user.
            readOnly: true
        registerUsername:
          description: Username who has registered the worker at the station.
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Last change date of the tuple
          type: string
          nullable: false
        workerId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Worker that is registered at the organizationUnit
            nullable: false
    WorkorderErpState:
      description: |
        Defined Workorder ERP States.
         * CREATED corresponds to Release-STATE IN_PROCESS
         * RELEASED, PARTLY_CONFIRMED and COMPLETELY_CONFIRMED correspond to Release-STATE RELEASED
         * MARKED_FOR_DELETION corresponds to Release-STATE ARCHIVED
         * LOCKED will keep the current Release-STATE
      enum:
      - CREATED
      - RELEASED
      - PARTLY_CONFIRMED
      - COMPLETELY_CONFIRMED
      - LOCKED
      - MARKED_FOR_DELETION
      type: string
    OrganizationUnitMessageView:
      description: "OrganizationUnitMessageView contains Message, OrganizationUnitMessage"
      type: object
      properties:
        messageView:
          $ref: '#/components/schemas/MessageView'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        organizationUnitMessage:
          $ref: '#/components/schemas/OrganizationUnitMessage'
      readOnly: true
    DateTimeComponent:
      description: "Date or Time as a part of an ID (Only certain fields are updatable\
        \ when released, see field's description)"
      required:
      - fillMode
      - fillWith
      - dateTimeFormat
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        dateTimeFormat:
          description: DateTimeFormat-String defining a Date/Time-String as part of
            the generated ID
          type: string
          nullable: false
        description:
          description: Description (Updatable when released)
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
            nullable: false
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
          nullable: false
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
        zoneId:
          allOf:
          - $ref: '#/components/schemas/ZoneId'
          - description: "Id of the TimeZone, if not provided, configured default\
              \ will be used"
            example: Europe/Berlin
    GecWarning:
      description: A WarnCondition that was found during processing the businesslogic.
      type: object
      properties:
        apiCallHash:
          description: Unique identifier for logs
          type: string
          nullable: true
        failure:
          description: The FailureType that occured (see ResponseCodeMapping- & Warning-Schema)
          type: string
          nullable: false
        message:
          description: Additonal Message of that failure
          type: string
          nullable: true
        object:
          description: The ObjectType where the failure occured
          type: string
          nullable: false
    OrganizationUnitMaterialBinSetupView:
      description: View Object of OrganizationUnitMaterialBinSetup
      type: object
      properties:
        materialBin:
          $ref: '#/components/schemas/MaterialBin'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        organizationUnitMaterialBinSetup:
          $ref: '#/components/schemas/OrganizationUnitMaterialBinSetup'
    MessageGroup:
      description: Defintion of a Message Group. Updates to a MessageGroup will be
        stored in an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderWorkstepEquipmentSetupDTO:
      description: Setup data for a given SetupPosition with the equipment setup on
        this setupPosition
      required:
      - usageFactor
      - setupPosition
      - usages
      type: object
      properties:
        bookDate:
          format: date-time
          description: "optional creation date of the bookings, if not given the server\
            \ date is used"
          type: string
        description:
          description: Description of the equipment.<BR />Only used when the Equipment
            has to be created
          type: string
        equipmentTypeName:
          description: "Type name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment."
          type: string
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the equipment, can be used instead of the\
              \ equipmentName.<BR />.The Id of equipment is returned for a given equipmentName\
              \ or if a equipment was created by the Import."
        name:
          description: Name of the equipment
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the equipment, can be used instead\
              \ of the partName.<BR />.The Id of part is returned when the partName\
              \ is found, or a equipment is found by it's name."
        partName:
          description: "Part name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment.<BR /> Either this partName is required or alternatively\
            \ the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the producer-contact,stored in address-service."
        setupPosition:
          minLength: 1
          type: string
          nullable: false
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the supplier-contact, stored in address-service"
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
          nullable: false
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
          nullable: false
    HistoryOrganizationUnitEquipmentSetupView:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          format: date-time
          description: Changed on date
          type: string
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnitEquipmentSetupView'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    EquipmentDTO:
      description: EquipmentDTO import data to create a equipment.
      required:
      - usageFactor
      type: object
      properties:
        description:
          description: Description of the equipment.<BR />Only used when the Equipment
            has to be created
          type: string
        equipmentTypeName:
          description: "Type name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment."
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the equipment, can be used instead of the\
              \ equipmentName.<BR />.The Id of equipment is returned for a given equipmentName\
              \ or if a equipment was created by the Import."
        name:
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the equipment, can be used instead\
              \ of the partName.<BR />.The Id of part is returned when the partName\
              \ is found, or a equipment is found by it's name."
        partName:
          description: "Part name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment.<BR /> Either this partName is required or alternatively\
            \ the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the producer-contact,stored in address-service."
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the supplier-contact, stored in address-service"
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
          nullable: false
    Assignment:
      description: Definition of an Assignment. Updates to a Assignment will be stored
        in an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ConnectionPoolMetrics:
      type: object
      properties:
        acquireCount:
          format: int64
          type: integer
        activeCount:
          format: int64
          type: integer
        availableCount:
          format: int64
          type: integer
        awaitingCount:
          format: int64
          type: integer
        blockingTimeAverage:
          $ref: '#/components/schemas/Duration'
        blockingTimeMax:
          $ref: '#/components/schemas/Duration'
        blockingTimeTotal:
          $ref: '#/components/schemas/Duration'
        creationCount:
          format: int64
          type: integer
        creationTimeAverage:
          $ref: '#/components/schemas/Duration'
        creationTimeMax:
          $ref: '#/components/schemas/Duration'
        creationTimeTotal:
          $ref: '#/components/schemas/Duration'
        destroyCount:
          format: int64
          type: integer
        flushCount:
          format: int64
          type: integer
        invalidCount:
          format: int64
          type: integer
        leakDetectionCount:
          format: int64
          type: integer
        maxUsedCount:
          format: int64
          type: integer
        reapCount:
          format: int64
          type: integer
    HistorySerialunitReservedNumber:
      description: History of an audited entity
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: Kind of change
        changeDate:
          format: date-time
          description: Changed on date
          type: string
        changedFields:
          description: Changed fields in the entity
          uniqueItems: true
          type: array
          items:
            type: string
        entity:
          allOf:
          - $ref: '#/components/schemas/SerialunitReservedNumber'
          - description: The audited entity
        userName:
          description: Changing user
          type: string
      readOnly: true
    ReleaseState:
      description: State of a Releasable
      enum:
      - IN_PROCESS
      - RELEASED
      - ARCHIVED
      type: string
    TopFailureLocation:
      description: Object for TopFailures for a Part and Location
      type: object
      properties:
        location:
          description: Location where the failure occurs
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: name of the Part
          type: string
    WorkorderWorkstepEquipment:
      description: Equipment needed at a workstep of a workorder. A workstep-equipment
        is not releasable by itself but inherits the release-state from it's workorder.
        (No longer updatable when released). Updates to a WorkorderWorkstepEquipment
        will be stored in an audit-trail.
      required:
      - quantity
      - partId
      - workorderWorkstepId
      - location
      type: object
      properties:
        alternatives:
          description: Alternatives for a equipment at a workorderWorkstep have to
            be unique (it's not allowed to have the same EquipmentPart as an alternative
            twice)
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepEquipmentAlternative'
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        location:
          description: Location has to be unique for all equipments assigned to one
            workorderWorkstep
          type: string
          nullable: false
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the part/equipmentDefinition of this equipment
            nullable: false
        quantity:
          format: int32
          minimum: 1
          type: integer
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workorder
            readOnly: true
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "References the workorderWorkstep, this equipment belongs\
              \ to"
            nullable: false
    OrganizationUnitMessagePK:
      type: object
      properties:
        itemId:
          type: string
        messageId:
          $ref: '#/components/schemas/UUID'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
    MaterialBinSection:
      description: A sequential MaterialBin (e.g. a coil of metal) can be divided
        into several sections. Each section can have its own materialCharge and may
        be marked as not-usable. Updates to a MaterialBinSection will be stored in
        an audit-trail.
      required:
      - lockedState
      - materialBinId
      - sectionStart
      - sectionEnd
      - materialChargeId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        lockedState:
          allOf:
          - $ref: '#/components/schemas/LockedState'
          - description: if at least one lockGroup is assigned to this materialBinSection
            default: NEVER_LOCKED
            nullable: false
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the parent materialBin of the section
            nullable: false
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the materialCharge of the section. If not given on\
              \ create, it will be inherited from it's materialBin."
            nullable: false
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        sectionEnd:
          format: double
          description: End of the section
          type: number
          nullable: false
        sectionStart:
          format: double
          description: Start of the section
          type: number
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    BookingPerShiftPk:
      type: object
      properties:
        fromDate:
          format: date-time
          type: string
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        shiftId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    Failure:
      description: Definition of Failures used in failure bookings. Updates to a Failure
        will be stored in an audit-trail.
      required:
      - isPseudo
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        isPseudo:
          description: Pseudo failure
          type: boolean
          nullable: false
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    MasterDataType:
      description: Type of Masterdata that can be used as component of an id-generator
      enum:
      - PART
      - WORKORDER
      - ORGANIZATION_UNIT
      type: string
    FailureType:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    SerialunitViewFilterMode:
      enum:
      - created
      - lastBookDate
      type: string
    LocalTime:
      format: local-time
      type: string
      externalDocs:
        description: As defined by 'partial-time' in RFC3339
        url: https://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14
      example: 13:45.30.123456789
    MaterialBinView:
      type: object
      properties:
        materialBin:
          $ref: '#/components/schemas/MaterialBin'
        materialCharge:
          allOf:
          - $ref: '#/components/schemas/MaterialCharge'
          - description: MaterialCharge of the MaterialBin
        measurementsNumeric:
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinMeasurementBookingNumericView'
        measurementsTextual:
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinMeasurementBookingTextualView'
        organizationUnitMaterialBinSetupView:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnitMaterialBinSetupView'
          - description: Setup Infos for the MaterialBin
        part:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part of the MaterialBin
        producerContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Producer of the MaterialBin
        sections:
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinSectionView'
        supplierContact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          - description: Supplier of the MaterialBin
      readOnly: true
    SerialunitFailureBookingView:
      description: SerialunitFailureBookingView is a Join over FailureBooking and
        Serialunit
      type: object
      properties:
        failureAction:
          description: 'Failure Action '
          type: string
        failureCause:
          description: 'Failure Cause '
          type: string
        failureComment:
          description: 'Failure Comment '
          type: string
        failureLocation:
          description: 'Failure Location '
          type: string
        failureName:
          description: 'Failure Name '
          type: string
        failurePattern:
          description: 'Failure Pattern '
          type: string
        failureRisk:
          description: 'Failure Risk '
          type: string
        failureSymptom:
          description: 'Failure Sympton '
          type: string
        isPseudo:
          description: 'is Pseudo '
          type: boolean
        isRepaired:
          description: 'is Failure Repaired '
          type: boolean
        serialunitDescription:
          description: 'Description of the Serialunit '
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Serialunit '
        serialunitName:
          description: 'Name of the Serialunit '
          type: string
        serialunitPosition:
          description: 'Position of the Serialunit '
          type: string
      readOnly: true
    PreviewResult:
      description: Result of a Preview Call
      type: object
      properties:
        value:
          description: Preview Value
          type: string
          readOnly: true
    SerialunitMeasurementBookingTextualView:
      description: "MeasurementBookingTextualView is a Join over MeasurementBookingTextual,\
        \ Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        calculatedState:
          description: Calculated
          type: string
        created:
          format: date-time
          description: Creation Date of the Measurement
          type: string
        maximum:
          description: Maximum
          type: string
        measurementUnit:
          description: Unit of measurment
          type: string
        minimum:
          description: Minimum
          type: string
        name:
          description: Name
          type: string
        nominal:
          description: Nominal
          type: string
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of the Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: Name of the Part
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId
        state:
          description: State
          type: string
        tolerance:
          description: Tolerance
          type: string
        value:
          description: Value
          type: string
        workstepLocation:
          description: WorkstepLocation
          type: string
        workstepNumber:
          description: WorkstepNumber
          type: string
      readOnly: true
    WorkorderWorkstep:
      description: "Workstep Entity for a Workorder. (Only certain fields are updatable\
        \ when released, see field's description). Updates to a WorkorderWorkstep\
        \ will be stored in an audit-trail."
      required:
      - mandatory
      - type
      - name
      - processLocation
      - setupTimeWorker
      - setupTimeMachine
      - processingTimeWorker
      - processingTimeMachine
      - transportTime
      - workorderId
      - waitTime
      type: object
      properties:
        amountQuantityBookings:
          format: int32
          description: "Amount of QuantityBookings done for this workstep, incremented\
            \ with each workorderWorkstepBooking"
          type: integer
          readOnly: true
        amountSerialunitBookings:
          format: int32
          description: "Amount of SerialunitBookings done for this workstep, incremented\
            \ with each serialunitUpload"
          type: integer
          readOnly: true
        confirmationNumber:
          description: Unique workorder dependend ConfirmationNumber for a workstep
            given from the ERP-System. It is sent back with each confirmation of that
            Workorder-Workstep to the ERP-System. Can be used in Upload Booking. <BR/>Master
            Workplan have no ConfirmationNumber!
          type: string
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description of this WorkorderWorkstep (AVO) (Updatable when
            released)
          type: string
        erpConfirmation:
          description: If TRUE bookings at this workstep has to be confirmed to the
            ERP-System
          default: "false"
          type: boolean
        erpConfirmationThreshold:
          format: int32
          description: "Threshold of amount of units that can be booked, before the\
            \ confirmation to the ERP-System is done, e.g. setting to 10 send a ERP-Confirmation\
            \ when 10 units are booked"
          type: integer
        erpVersion:
          description: Version of this workstep in ERP
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        jobParallel:
          format: int32
          description: parallel job order
          minimum: 0
          type: integer
        jobSequentiell:
          format: int32
          description: sequentiell job order
          minimum: 0
          type: integer
        lastBookDate:
          format: date-time
          description: Date of the lastBooking (quantity or serialunit) to this workstep
          type: string
          readOnly: true
        mandatory:
          description: Is this WorkorderWorkstep a mandatory Step
          type: boolean
          nullable: false
        masterWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workstep im MasterData-Service
        maxBookingCountWorkstep:
          format: int32
          description: Maximum Number of allowed bookings for one Serialunit at this
            Workstep.</B> Values greater than 0 restrict the amount of Bookings.
          minimum: 0
          type: integer
        maxBookingCountWorkstepOrganizationUnit:
          format: int32
          description: Maximum Number of allowed bookings for one Serialunit for a
            Station at this Workstep.</B> Values greater than 0 restrict the amount
            of Bookings at one Station in the Workstep.
          minimum: 0
          type: integer
        name:
          description: Name of this WorkorderWorkstep (AVO)
          type: string
          nullable: false
        payload:
          description: Optional Payload as Json-String (Updatable when released)
          type: string
        position:
          format: int64
          description: Position/Order of this Workstep
          type: integer
          readOnly: true
        processLocation:
          description: Location the Workstep is working at. Used for example to differ
            between solder side and component side
          type: string
          nullable: false
        processingTimeMachine:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to process this workstep by a machine
              (Updatable when released)
            nullable: false
        processingTimeWorker:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to process this workstep by a worker
              (Updatable when released)
            nullable: false
        quantityFail:
          format: double
          description: Quantity of FAIL Bookings in this workstep
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Quantity of First PASS Bookings in this workstep
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: "Quantity of InProcess Bookings at this workstep, Use InProcess\
            \ only for long running process steps"
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Quantity of PASS Bookings in this workstep
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Quantity of SCRAP Bookings in this workstep
          type: number
          readOnly: true
        setupTimeMachine:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to setup this workstep by a machine
              (Updatable when released)
            nullable: false
        setupTimeWorker:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to setup this workstep by a worker
              (Updatable when released)
            nullable: false
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: "For updates of workstepState use API PUT /resources/workorderworksteps/{id}/state/{state}"
            default: READY
            readOnly: true
        transportTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Time needed for Transport (Updatable when released)
            nullable: false
        type:
          allOf:
          - $ref: '#/components/schemas/WorkstepType'
          - description: "Type of this Workstep(Machine, Human, ....)"
            example: MACHINE
            nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
        waitTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Time needed for Wait (Updatable when released)
            nullable: false
        workcenterName:
          description: Name of the workcenter
          type: string
        workerCountProduction:
          format: int32
          description: Number of workers needed to perform this workstep (Updatable
            when released)
          minimum: 0
          type: integer
        workerCountSetup:
          format: int32
          description: Number of workers needed to setup this workstep (Updatable
            when released)
          minimum: 0
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding Workorder
            nullable: false
      readOnly: true
    MaintenanceIntervalGroup:
      description: |
        Combination of a number of MaintenanceIntervals for a certain reason
        (e.g. 'Inspection' has two MaintenanceIntervals: every 10.000 usages and once a year)
      required:
      - name
      - items
      type: object
      properties:
        items:
          description: each MaintenanceInterval-name has to be unique (Must not be
            empty)
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceInterval'
        name:
          pattern: \S
          type: string
          nullable: false
    EquipmentSetupDTO:
      description: EquipmentSetup data for a given SetupPosition
      required:
      - usageFactor
      - setupPosition
      - usages
      type: object
      properties:
        bookDate:
          format: date-time
          description: "optional creation date of the bookings, if not given the server\
            \ date is used"
          type: string
        description:
          description: Description of the equipment.<BR />Only used when the Equipment
            has to be created
          type: string
        equipmentTypeName:
          description: "Type name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment."
          type: string
        failures:
          format: int32
          description: Number of failed usages of the equipment
          minimum: 0
          type: integer
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the equipment, can be used instead of the\
              \ equipmentName.<BR />.The Id of equipment is returned for a given equipmentName\
              \ or if a equipment was created by the Import."
        name:
          description: Name of the equipment
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the equipment, can be used instead\
              \ of the partName.<BR />.The Id of part is returned when the partName\
              \ is found, or a equipment is found by it's name."
        partName:
          description: "Part name of the equipment (see EquipmentDefinition), required\
            \ to create the equipment.<BR /> Either this partName is required or alternatively\
            \ the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the producer-contact,stored in address-service."
        setupPosition:
          minLength: 1
          type: string
          nullable: false
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Reference to the supplier-contact, stored in address-service"
        usageFactor:
          format: int32
          description: Factor describes the factor of wear. Should be considered when
            reporting usages.
          minimum: 1
          type: integer
          nullable: false
        usages:
          format: int32
          description: Number of usages of the equipment
          minimum: 1
          type: integer
          nullable: false
    OrganizationUnitEquipmentSetupView:
      description: View Object of OrganizationUnitEquipmentSetup
      type: object
      properties:
        equipment:
          $ref: '#/components/schemas/Equipment'
        organizationUnit:
          $ref: '#/components/schemas/OrganizationUnit'
        organizationUnitEquipmentSetup:
          $ref: '#/components/schemas/OrganizationUnitEquipmentSetup'
    WorkorderWorkstepBomItemAlternative:
      description: Alternative to a WorkorderworkstepBomItem Entity. Updates to a
        WorkorderWorkstepBomItemAlternative will be stored in an audit-trail.
      required:
      - usageProbability
      - materialPartId
      - quantity
      - unitId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        erpVersion:
          description: Optional ErpVersion of this bomItem. <BR/> Can be used if the
            part itself is a product and only a special ErpVersion should be assembled.
            <BR/> Default empty for Raw-Material or if all ErpVersion of the sub-product
            can be used
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        masterBomItemAlternativeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the corresponding MasterData BomItem Alternative
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the partId of this component/material
            nullable: false
        payload:
          type: string
        quantity:
          format: double
          type: number
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the unit of this component
            nullable: false
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          type: integer
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ConditionView:
      description: ConditionView contains Condition and ConditionGroup
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/Condition'
        conditionGroup:
          $ref: '#/components/schemas/ConditionGroup'
      readOnly: true
    LockEntityHistory:
      description: History of a lock of an Entity
      required:
      - lockEntityId
      type: object
      properties:
        createUser:
          description: Name of user that created the lock
          type: string
        deleteUser:
          description: Name of user that removed the lock
          type: string
        entityId:
          $ref: '#/components/schemas/UUID'
        entityName:
          type: string
        entityType:
          type: string
        fromDate:
          format: date-time
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        lockEntityId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        lockGroupDescription:
          type: string
        lockGroupId:
          $ref: '#/components/schemas/UUID'
        lockGroupName:
          type: string
        lockTypeDescription:
          type: string
        lockTypeId:
          $ref: '#/components/schemas/UUID'
        lockTypeName:
          type: string
        toDate:
          format: date-time
          type: string
      readOnly: true
    LoggerLevel:
      enum:
      - "OFF"
      - SEVERE
      - ERROR
      - FATAL
      - WARNING
      - WARN
      - INFO
      - DEBUG
      - TRACE
      - CONFIG
      - FINE
      - FINER
      - FINEST
      - ALL
      type: string
    LockGroupTypeRestriction:
      description: LockGroupTypeRestriction holds a lockGroup with its lockType and
        its defined lockRestrictions
      type: object
      properties:
        lockGroup:
          allOf:
          - $ref: '#/components/schemas/LockGroup'
          - description: The lockType
        lockType:
          allOf:
          - $ref: '#/components/schemas/LockType'
          - description: The lockType
        restrictions:
          description: the lockRestriction for that lockType
          type: array
          items:
            $ref: '#/components/schemas/LockTypeLockRestriction'
    WorkorderWorkstepEquipmentView:
      required:
      - quantity
      - partId
      type: object
      properties:
        alternatives:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepEquipmentAlternativeView'
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        equipment:
          $ref: '#/components/schemas/Equipment'
        equipmentDefinitionView:
          $ref: '#/components/schemas/EquipmentDefinitionView'
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of exact one dedicated equipment, if null 'any' of the\
              \ EquipmentDefintion defined by partId suffices."
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        location:
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the equipmentDefinition.
            nullable: false
        quantity:
          format: int32
          description: "Quantity will be evaluated, if not one exact, dedicated equipment\
            \ is defined but a equipmentDefinition."
          minimum: 1
          type: integer
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    ImportBulkRTOSerialunitDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    NameDescription:
      type: object
      properties:
        description:
          description: Description
          type: string
        name:
          description: Name
          type: string
    CurrentCounterView:
      description: View of the CurrentCounter of an IdGenerator and MasterData
      type: object
      properties:
        created:
          format: date-time
          type: string
        currentValue:
          description: current value of the counter
          type: string
        lastGenerated:
          description: last generated ID
          type: string
        masterDataDescription:
          description: Description of the MasterData
          type: string
        masterDataId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MasterData
        masterDataName:
          description: Name of the MasterData
          type: string
        stamp:
          format: date-time
          type: string
      readOnly: true
    MaintenanceInterval:
      description: Maintenance Interval
      required:
      - name
      type: object
      properties:
        afterDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: |-
              If given, must be greater one hour.
              If current usage-duration exceeds this value, a maintenance should be done.
              Usage-duration:
              For repeatable intervals: Start is last maintenance Date (or creation date if no maintenance was done by now).
              For final interval start is creation date.
              End is current system date.
        afterFailures:
          format: int32
          description: |-
            If given, must be greater zero.
            If current number of usages exceeds this number, a maintenance should be done.
          type: integer
        afterUsages:
          format: int32
          description: |-
            If given, must be greater zero.
            If current number of usages exceeds this number, a maintenance should be done.
          type: integer
        name:
          pattern: \S
          type: string
          nullable: false
        warnAfterDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: |-
              If given, must be greater one hour. May be given, only if afterDuration is given, too.
              If current usage-duration exceeds this value, a maintenance should be done soon.
              Usage-duration:
              For repeatable intervals: Start is last maintenance Date (or creation date if no maintenance was done by now).
              For final interval: start is creation date.
              End is current system date.
        warnAfterFailures:
          format: int32
          description: |-
            If given, must be greater zero. May be given, only if afterFailures is given, too.
            If current number of usages exceeds this number, a maintenance should be done soon.
          type: integer
        warnAfterUsages:
          format: int32
          description: |-
            If given, must be greater zero. May be given, only if afterUsages is given, too.
            If current number of usages exceeds this number, a maintenance should be done soon.
          type: integer
    SerialunitFailureBooking:
      required:
      - serialunitId
      - bookDate
      - failureId
      - failureLocation
      - workorderId
      - partId
      - organizationUnitId
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
          nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        failureActionId:
          $ref: '#/components/schemas/UUID'
        failureCauseId:
          $ref: '#/components/schemas/UUID'
        failureComment:
          type: string
        failureId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        failureLocation:
          type: string
          nullable: false
        failurePatternId:
          $ref: '#/components/schemas/UUID'
        failureRiskId:
          $ref: '#/components/schemas/UUID'
        failureSymptomId:
          $ref: '#/components/schemas/UUID'
        isRepaired:
          type: boolean
        materialPartId:
          $ref: '#/components/schemas/UUID'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        repairOrgaUnitId:
          $ref: '#/components/schemas/UUID'
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
    MaintenanceState:
      enum:
      - AVAILABLE
      - SHOULD_BE_IN_MAINTENANCE_SOON
      - SHOULD_BE_IN_MAINTENANCE
      - IN_MAINTENANCE
      - FINALLY_EXPIRED_SOON
      - FINALLY_EXPIRED
      type: string
    BomItemAlternativeDTO:
      description: BomItem alternatives import data
      required:
      - usageProbability
      - unit
      type: object
      properties:
        erpVersion:
          description: Optional ErpVersion of this bomItem. <BR/> Can be used if the
            part itself is a product and only a special ErpVersion should be assembled.
            <BR/> Default empty for Raw-Material or if all ErpVersion of the sub-product
            can be used
          type: string
        info1:
          type: string
        info2:
          type: string
        info3:
          type: string
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the partId of this component/material
        partName:
          type: string
          nullable: false
        payload:
          type: string
        quantity:
          format: double
          type: number
        unit:
          default: PIECE
          type: string
          nullable: false
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the unit of this component
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          type: integer
          nullable: false
    OrganizationUnitWorkorderActivationView:
      description: Current activation of an organizationUnit for a Workorder at a
        Workstep
      type: object
      properties:
        created:
          format: date-time
          type: string
          readOnly: true
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit that is activated
        topOrganizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: "The OrganizationUnit that was used for activation, that\
              \ can be the organizationUnit(station) itself or the parent of the organizationUnit(line)"
        userName:
          description: Ident of the User who has done the activation
          type: string
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the organizationunit is activated for
        workorderCluster:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterBase'
          - description: The WorkorderCluster of the activation. Can be null
        workstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: The Workstep of the workorder the organizationunit is activated
              for
    WorkorderCluster:
      description: "Cluster of workorders (Only certain fields are updatable when\
        \ released, see field's description)"
      required:
      - items
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        finished:
          format: date-time
          type: string
          readOnly: true
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        items:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/WorkorderClusterItem'
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plannedEndDate:
          format: date-time
          type: string
        plannedStartDate:
          format: date-time
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        processState:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterProcessState'
          - readOnly: true
        quantity:
          format: double
          minimum: 1
          type: number
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        started:
          format: date-time
          type: string
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    CycleTimeType:
      description: "Types of the CycleTime (Production, Setup)"
      enum:
      - PRODUCTION
      - SETUP
      type: string
    ImportBulkRTOUnidentifiableProcessMeasurementBookingDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    MessageCategory:
      description: Defintion of a Message Category. Updates to a MessageCategory will
        be stored in an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    OrganizationUnitAssignment:
      description: Connection between Assignment and OrganizationUnit. Updates to
        a OrganizationUnitAssignment will be stored in an audit-trail.
      required:
      - assignmentId
      - organizationUnitId
      type: object
      properties:
        assignmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Assignment
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the organization_unit
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderWorkstepMaterialBookingPk:
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
        location:
          type: string
        materialBinId:
          $ref: '#/components/schemas/UUID'
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        workorderWorkstepId:
          $ref: '#/components/schemas/UUID'
    GecFailure:
      description: A FailureCondition that was found during processing the businesslogic.
      type: object
      properties:
        apiCallHash:
          description: Unique identifier for logs
          type: string
          nullable: true
        failure:
          description: The FailureType that occured (see ResponseCodeMapping- & Warning-Schema)
          type: string
          nullable: false
        message:
          description: Additonal Message of that failure
          type: string
          nullable: true
        object:
          description: The ObjectType where the failure occured
          type: string
          nullable: false
    ImportRTOUnidentifiableWorkorderWorkstepBookingDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    DurationPerShift:
      description: Consolidated durations for a OrganizationUnit per shift
      required:
      - fromDate
      - toDate
      - bookDate
      - organizationUnitId
      - organizationUnitName
      - plantId
      - lastLevel4
      type: object
      properties:
        bookDate:
          format: date-time
          description: date of last booking (might be before the fromDate)
          type: string
          example: 1970-01-01T00:00:00.0Z
          nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          - description: Day Of Week
        fromDate:
          format: date-time
          description: Consolidation From
          type: string
          example: 1970-01-01T00:00:00.0Z
          nullable: false
        id:
          $ref: '#/components/schemas/DurationPerShiftPk'
        lastLevel2:
          allOf:
          - $ref: '#/components/schemas/Level2'
          - description: Last booked MDC-Level2 according to SEMI E 10
        lastLevel3:
          allOf:
          - $ref: '#/components/schemas/Level3'
          - description: Last booked MDC-Level3 according to SEMI E 10
        lastLevel4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - description: Last booked MDC-Level4 according to SEMI E 10
            nullable: false
        level2Durations:
          description: Summarized duration and quantity of conditions for a Level2
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        level3Durations:
          description: Summarized duration and quantity of conditions for a Level3
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        level4Durations:
          description: Summarized duration and quantity of conditions for a Level4
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
            nullable: false
        organizationUnitName:
          description: OrganizationUnit name
          type: string
          nullable: false
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the plant of this Booking
            nullable: false
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId for this Booking
            nullable: false
        shiftName:
          description: ShiftName for this Booking
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        toDate:
          format: date-time
          description: Consolidation To
          type: string
          example: 1970-01-01T00:00:00.0Z
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        weekOfYear:
          format: int32
          description: Week of Year
          type: integer
      readOnly: true
    SerialunitMaterialBooking:
      description: MaterialBin setup at a setupPosition at an organizationUnit used
        to build a serialunit uploaded via a serialunitBooking.<BR>One tulple is created
        for each materialBin used for build the serialunit. Additionally the used
        SmtEquipment is availabe via SerialunitSmtEquipmentBooking for the involved
        (BOM)-locations
      required:
      - bookDate
      - organizationUnitId
      - setupPosition
      - workorderId
      - materialBinId
      - location
      - materialPartId
      - quantity
      - unitId
      - serialunitId
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
          nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        location:
          description: "One BOM- Location that is processed with this materialBooking.If\
            \ multiple locations are processed with this booking, each individual\
            \ location has to be send in it's own materialBooking. If not given the\
            \ default:[-] is used."
          type: string
          nullable: false
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialBin used for this material booking
            nullable: false
        materialBinSectionReference:
          format: double
          description: "Section of the materialBin used for this booking (valid for\
            \ sequential MaterialBins, see MaterialBinSection)"
          type: number
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the part of the materialBin used for this material
              booking
            nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit the booking was done for
            nullable: false
        quantity:
          format: double
          description: "(Delta)-material quantity, that was consumed by this booking\
            \ from the materialBin"
          minimum: 0
          type: number
          nullable: false
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the serialaunit build with this material booking
            nullable: false
        setupPosition:
          description: SetupPosition at the OrganizationUnit.
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the unit of materialBin used for this material booking
            nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the booking was done for
            nullable: false
    WorkorderCheckConsistencyResult:
      description: Contains all failed consistency Checks for given Workorder
      type: object
      properties:
        failureList:
          description: Contains all Failures/Failed ConsistencyChecks for the Workorder
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder that was checked
      readOnly: true
    LockGroup:
      description: Lock Group Entity. Updates to a LockGroup will be stored in an
        audit-trail.
      required:
      - lockTypeId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lockTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the LockType
            nullable: false
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SmtEquipmentCorrelation:
      description: Correlations concerning Equipment used in production
      type: object
      properties:
        equipment:
          description: ParetoAnalysis Values showing correlations to other equipment
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
        failures:
          description: ParetoAnalysis Values showing correlations to failures
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
        material:
          description: ParetoAnalysis Values showing correlations to material
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
        materialBin:
          description: ParetoAnalysis Values showing correlations to material bins
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
        positions:
          description: ParetoAnalysis Values showing correlations to positions
          type: array
          items:
            $ref: '#/components/schemas/ParetoValue'
      readOnly: true
    DurationPerShiftPk:
      type: object
      properties:
        fromDate:
          format: date-time
          type: string
        organizationUnitId:
          $ref: '#/components/schemas/UUID'
        shiftId:
          $ref: '#/components/schemas/UUID'
    MultipanelSerialunitView:
      description: View of a serialunit in a multipanel
      type: object
      properties:
        multipanelPosition:
          description: multipanelPosition
          type: string
        serialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: serialunit
      readOnly: true
    WorkorderFinishMode:
      description: Modes to set the workorder state automatically to finish
      enum:
      - NONE
      - FINISH_ON_QUANTITY_STARTED
      - FINISH_ON_QUANTITY_FINISHED
      type: string
    IdGeneratorView:
      description: IdGenerator Object - All containing Objects are filled
      type: object
      properties:
        components:
          description: List of IdGeneratorComponentView for given IdGenerator
          type: array
          items:
            $ref: '#/components/schemas/IdGeneratorComponentView'
        currentCounters:
          description: List of CurrentCounters
          type: array
          items:
            $ref: '#/components/schemas/CurrentCounterView'
        idGenerator:
          $ref: '#/components/schemas/IdGenerator'
        type:
          $ref: '#/components/schemas/IdGeneratorType'
      readOnly: true
    WorkorderWorkstepOrganizationUnitLockGroupHistoryView:
      description: History of Locks and Unlocks of WorkorderWorkstepOrganizationUnit
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstepOrganizationUnitLock
        lockDate:
          format: date-time
          description: Date when the Lock was established to the WorkorderWorkstepOrganizationUnit
          type: string
        lockGroupDescription:
          description: Description of the LockGroup that was assigned to the WorkorderWorkstepOrganizationUnit
          type: string
        lockGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the LockGroup that was assigned to the WorkorderWorkstepOrganizationUnit
        lockGroupName:
          description: Name of the LockGroup that was assigned to the WorkorderWorkstepOrganizationUnit
          type: string
        lockUsername:
          description: UserName who established the Lock
          type: string
        unlockDate:
          format: date-time
          description: "Date when the Lock was removed(unlocked) to the WorkorderWorkstepOrganizationUnit,\
            \ max be null whern the lock ist still active"
          type: string
        unlockUsername:
          description: UserName who removed the Lock
          type: string
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstepOrganizationUnit the lock as assigned
              to
      readOnly: true
    WorkorderClusterView:
      description: View for WorkorderCluster Item are contained
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WorkorderClusterItemView'
        workorderCluster:
          $ref: '#/components/schemas/WorkorderClusterBase'
    WorkorderWorkstepBookingView:
      description: Quantity Bookings of a organizationUnit for a Workorder at a Workstep
      type: object
      properties:
        booking:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstepBooking'
          - description: "The Booking Object, with details of the booking"
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit that is activated
        partDescription:
          description: Description of the Part of the workorder
          type: string
          readOnly: true
        partName:
          description: Name of the Part of the Workorder
          type: string
          readOnly: true
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: The Workorder the organizationunit is activated for
        workorderClusterView:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterView'
          - description: Workorder Cluster View
        workstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: The Workstep of the workorder the organizationunit is activated
              for
    ImportRTOMultipanelSerialUnitBookingStateDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    IdGeneratorComponents:
      description: Part of an IdGenerator
      required:
      - idGeneratorId
      - sequenceNumber
      - idGeneratorComponentId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        idGeneratorComponentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator-Component
            nullable: false
        idGeneratorId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Id-Generator
            nullable: false
        sequenceNumber:
          format: int32
          description: Place in the sequence of IdGeneratorComponents the Id-Generator
            consists of
          minimum: 1
          type: integer
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SerialunitSmtEquipmentBooking:
      description: SmtEquipment used to assembling the (BOM)-location for a serialunit
        at an organizationUnit uploaded via a serialunitBooking
      required:
      - stamp
      - bookDate
      - serialunitId
      - smtEquipmentId
      - location
      - organizationUnitId
      - partId
      - materialPartId
      - workorderId
      - smtEquipmentSetupPosition
      - created
      - materialBinId
      type: object
      properties:
        bookDate:
          format: date-time
          description: BookDate when the booking was done
          type: string
          nullable: false
        created:
          format: date-time
          type: string
          readOnly: true
          nullable: false
        location:
          description: (BOM)-Location(s) that was placed/processed with this smtEquipment
          type: string
          nullable: false
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialBin the SmtEquipment for the (BOM)-location
              was used for
            readOnly: true
            nullable: false
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part of the Material placed/processed with the
              smtEquipment
            nullable: false
        misspicks:
          format: int64
          description: MissPicks occured at the smtEquipment during processing this
            location(s)
          type: integer
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the organizationUnit that performes the SmtEquipmentBooking
            nullable: false
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part of the Serialunit
            nullable: false
        picks:
          format: int64
          description: Picks done from the smtEquipment to assemble this location(s)
          type: integer
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the serialaunit the SmtEquipmentBooking was done for
        smtEquipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the smtEquipment used for this SmtEquipmentBooking
            nullable: false
        smtEquipmentSetupPosition:
          description: "SetupPosition this smtEquipment was setup at. This can be\
            \ different for every Equipment used by a Smt-Upload, e.g. a Nozzle was\
            \ setup at Pos:12 at the header and was used to place localtion R1, Pos:11\
            \ was used to place R2, ..."
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
          nullable: false
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the Serialunit belongs to
            nullable: false
      deprecated: true
    MdcFact:
      description: MdcFact contains OrganizationUnitConditionHistory
      type: object
      properties:
        cbBookDate:
          format: date-time
          type: string
          readOnly: true
        cbConditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        cbFromDate:
          format: date-time
          type: string
          readOnly: true
        cbId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        cbOuId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        cbShiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        cbToDate:
          format: date-time
          type: string
          readOnly: true
    DurationQuantity:
      description: duration and quantity
      type: object
      properties:
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: "duration, will be set if the condition ends"
        quantity:
          format: int64
          description: number of started conditions in this time-frame
          type: integer
    FlywayDbInfo:
      description: Infos from FlywayDB
      type: object
      properties:
        description:
          description: Description of the Flyway Migration
          type: string
        executionTime:
          format: int32
          description: Execution Time of the Flyway Migration
          type: integer
        installedBy:
          description: Installed By of the Flyway Migration
          type: string
        installedOn:
          format: date-time
          description: Installed On of the Flyway Migration
          type: string
        installedRank:
          format: int32
          description: Installed Rank of the Flyway Migration
          type: integer
        script:
          description: Script of the Flyway Migration
          type: string
        success:
          description: Success of the Flyway Migration
          type: boolean
        type:
          description: Type of the Flyway Migration
          type: string
        version:
          description: Version of the Flyway Migration
          type: string
      readOnly: true
    ImportRTOUnidentifiableProcessMeasurementBookingDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item without id
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    SerialunitCheckGecFailures:
      description: "Failure-Result of checkSerialunit used for Multipanel check, to\
        \ get an individual Failure-Result for each Serialunits of the Panel"
      type: object
      properties:
        failures:
          description: List of GecFailures found during the Check of this Serialunit
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        serialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: The Serialunit the Check founds failures for
    WorkorderClusterProcessState:
      description: State of process of a WorkorderCluster
      enum:
      - NEW
      - STARTED
      - FINISHED
      type: string
    ImportBulkRTOUnidentifiableOrganizationUnitMessageDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    WorkstepDTO:
      description: "Workstep import data (type, workcenter, etc.)"
      required:
      - name
      - mandatory
      - processLocation
      - type
      - workcenterName
      - setupTimeWorker
      - setupTimeMachine
      - processingTimeWorker
      - processingTimeMachine
      - transportTime
      - waitTime
      - state
      type: object
      properties:
        confirmationNumber:
          description: Unique workorder dependend ConfirmationNumber for a workstep
            given from the ERP-System. It is sent back with each confirmation of that
            Workorder-Workstep to the ERP-System. Can be used in Upload Booking. <BR/>Master
            Workplan have no ConfirmationNumber!
          type: string
        description:
          description: Description of this WorkorderWorkstep (AVO)
          type: string
        equipments:
          description: List of Equipments to be used at this workstep
          type: array
          items:
            $ref: '#/components/schemas/WorkstepEquipmentDTO'
        erpConfirmation:
          description: If TRUE bookings at this workstep has to be confirmed to the
            ERP-System
          default: "false"
          type: boolean
        erpConfirmationThreshold:
          format: int32
          description: "Threshold of amount of units that can be booked, before the\
            \ confirmation to the ERP-System is done, e.g. setting to 10 send a ERP-Confirmation\
            \ when 10 units are booked"
          type: integer
        erpVersion:
          description: Version of this workstep in ERP
          type: string
        jobParallel:
          format: int32
          description: parallel job order
          minimum: 0
          type: integer
        jobSequentiell:
          format: int32
          description: sequentiell job order
          minimum: 0
          type: integer
        mandatory:
          description: Is this WorkorderWorkstep a mandatory Step
          type: boolean
          nullable: false
        maxBookingCountWorkstep:
          format: int32
          description: Maximum Number of allowed bookings for one Serialunit at this
            Workstep.</B> Values greater than 0 restrict the amount of Bookings.
          minimum: 0
          type: integer
        maxBookingCountWorkstepOrganizationUnit:
          format: int32
          description: Maximum Number of allowed bookings for one Serialunit for a
            Station at this Workstep.</B> Values greater than 0 restrict the amount
            of Bookings at one Station in the Workstep.
          minimum: 0
          type: integer
        name:
          description: Name of this WorkorderWorkstep (AVO)
          type: string
          nullable: false
        payload:
          description: Optional Payload as Json-String
          type: string
        processLocation:
          description: Location the Workstep is working at. Used for example to differ
            between solder side and component side
          type: string
          nullable: false
        processingTimeMachine:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to process this workstep by a machine
            nullable: false
        processingTimeWorker:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to process this workstep by a worker
            nullable: false
        setupTimeMachine:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to setup this workstep by a machine
            nullable: false
        setupTimeWorker:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Estimated time needed to setup this workstep by a worker
            nullable: false
        state:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: State of the Workstep
            default: READY
            nullable: false
        transportTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Time needed for Transport
            nullable: false
        type:
          allOf:
          - $ref: '#/components/schemas/WorkstepType'
          - description: "Type of this Workstep(Machine, Human, ....)"
            example: MACHINE
            nullable: false
        waitTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Time needed for wait before units can be send to the next
              workstep
            nullable: false
        workcenterName:
          description: Name of Workcenter assigned to this workstep
          type: string
          nullable: false
        workerCountProduction:
          format: int32
          description: Number of workers needed to perform this workstep
          minimum: 0
          type: integer
        workerCountSetup:
          format: int32
          description: Number of workers needed to setup this workstep
          minimum: 0
          type: integer
    ImportRTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    LockTypeLockRestriction:
      description: Lock Restriction for a Lock Type
      required:
      - entityType
      - name
      type: object
      properties:
        created:
          format: date-time
          type: string
        description:
          description: Description of the lockRestriction for that lockType
          type: string
        entityType:
          description: the entityType of the lockable Entity that is locked by this
            restriction
          type: string
          nullable: false
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - readOnly: true
        lockTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of lockType that has the lockRestriction applied
            readOnly: true
        name:
          description: Name of the lockRestriction that is applied to this lockType
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
    MultipanelState:
      description: State-change of the multipanel
      enum:
      - CREATED
      - SEPARATED
      type: string
    OrganizationUnitSetupEquipmentView:
      description: What is setup at a OrganizationUnit (Station)
      type: object
      properties:
        organizationUnit:
          allOf:
          - $ref: '#/components/schemas/OrganizationUnit'
          - description: The OrganizationUnit
        setupPositions:
          description: List EquipmentSetupView
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSetupView'
        workorder:
          allOf:
          - $ref: '#/components/schemas/Workorder'
          - description: Workorder for which the Setup is active. May be null if no
              Setup is active
    ParetoValue:
      description: "A ParetoValue is the inner object of a pareto analysis and contains\
        \ the id, name and count of an single entry"
      type: object
      properties:
        count:
          format: int32
          description: The Count of the ParetoValue
          type: integer
        description:
          description: The Description of the ParetoValue (for example FailureDescription)
          type: string
        id:
          description: The ID of the ParetoValue (for example FailureId)
          type: string
        name:
          description: The Name of the ParetoValue (for example FailureName)
          type: string
        payload:
          description: Additional Payload for the ParetoValue (for example FailureType)
          type: string
      readOnly: true
    WorkorderSerialunitBookingProductionProgress:
      description: WorkorderProductionProgress contains the amount of produced Units
        so far base on the highest Workstepnumber and workstepLocation
      type: object
      properties:
        amountProducedUnits:
          format: int64
          description: Amount of produced Units
          type: integer
        maxWorkstepLocation:
          description: Max WorkstepLocation
          type: string
        maxWorkstepNumber:
          format: int64
          description: Max WorkstepNumber
          type: integer
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrgUnit
      readOnly: true
    OrganizationUnitCondition:
      description: Condition of a Machine at a time
      required:
      - organizationUnitId
      - conditionId
      - bookDate
      type: object
      properties:
        bookDate:
          format: date-time
          description: Start-Time of the station-condition
          default: current system date&time
          type: string
        conditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MDC-condition
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the organization_unit
        payload:
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the shift assigned to booking organizationUnit at server-time
              on creation of this condition
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    GecOrganizationUnitType:
      description: Fixed defined OrganizationUnitTypes
      type: object
    SmtEquipmentUsageData:
      description: Object for Usage of a SmtEquipment
      type: object
      properties:
        qty:
          format: int64
          description: Qty of the SmtEquipment
          type: integer
        smtEquipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SmtEquipment
        smtEquipmentName:
          description: Name of the SmtEquipment
          type: string
      deprecated: true
    WorkorderQuantityAdjustmentMode:
      description: QuantityAjustment for the workorder quantity. Defines whether the
        workorder quantity should be increased in special cases (e.g. increase by
        Scrap-Booking)
      enum:
      - NONE
      - ADJUST_SCRAP
      type: string
    LockRestrictionDefinition:
      description: Provide all lockRestrictions for an entityType
      type: object
      properties:
        entityType:
          description: "name of the SMom entityType the restrictiona are usable for,\
            \ e.g. Serialunit"
          type: string
        restrictions:
          description: name and description of the lockRestriction
          type: array
          items:
            $ref: '#/components/schemas/NameDescription'
    WorkorderClusterBase:
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        finished:
          format: date-time
          type: string
          readOnly: true
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plannedEndDate:
          format: date-time
          type: string
        plannedStartDate:
          format: date-time
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        processState:
          allOf:
          - $ref: '#/components/schemas/WorkorderClusterProcessState'
          - readOnly: true
        quantity:
          format: double
          minimum: 1
          type: number
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        started:
          format: date-time
          type: string
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    FillMode:
      description: "If minimal length of a IdGeneratorComponent is not reached, fill\
        \ according to this mode"
      enum:
      - RIGHT
      - LEFT
      - BOTH_START_RIGHT
      - BOTH_START_LEFT
      type: string
    JdbcDriverInfo:
      description: Infos fOR JDBC-Driver
      type: object
      properties:
        jdbcDriver:
          description: Driver toString
          type: string
        jdbcDriverMajorVersion:
          format: int32
          description: Driver Major Version
          type: integer
        jdbcDriverMinorVersion:
          format: int32
          description: Driver Minor Version
          type: integer
      readOnly: true
    OrganizationUnitMessageDTO:
      description: OrganizationUnitMessage booking for a OrganizationUnit
      required:
      - organizationUnitName
      - messageName
      type: object
      properties:
        actions:
          description: Action to be done
          type: string
        closedInfo:
          description: Additional close message
          type: string
        closedSince:
          format: date-time
          description: "Message is open since this date. If given, the message will\
            \ be closed (must be after or equal to confirmedSince)."
          type: string
        confirmedInfo:
          description: Additional confirm message
          type: string
        confirmedSince:
          format: date-time
          description: "Message confirm-time this date. If given, the message will\
            \ be confirmed (must be after or equal to openSince)."
          type: string
        equipmentName:
          description: "Name of the equipment, the message was sent for"
          type: string
        itemId:
          description: Identifies for which item of the machine the message was sent
          type: string
        lossFactor:
          format: double
          description: Lost pieces per hour while the message is not closed
          type: number
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message(optional). Can be set if available otherwise
              use MessageName instead
        messageName:
          description: Name of the Message that should be booked
          type: string
        openSince:
          format: date-time
          description: "Message is open since this date. If given, the message will\
            \ be opened."
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit(optional). Can be set if available
              otherwise use OrganizationUnitName instead
        organizationUnitName:
          description: Name of the station that performes the booking
          type: string
        responsibleUser:
          description: Name of the user that is responsible
          type: string
    OrganizationUnitType:
      description: "Types of OrganizationUnits. There are predefinied Types, the Customer\
        \ can add additional Types"
      required:
      - name
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description of the OrganizationUnit Type
          type: string
        name:
          description: Name of the OrganizationUnit Type
          type: string
          nullable: false
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the referencing Plant
        rank:
          format: int32
          description: Unique Rank to structure different OrganizationUnit Types
          minimum: 1
          type: integer
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        systemDefined:
          description: "TRUE, when the Type is an System Type, System Types must not\
            \ be deleted.<BR />FALSE, if the Type is a user defined Type."
          type: boolean
          readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    HandlingUnitView:
      description: View of a handlingUnit with it's definition and assigned serialUnits
      type: object
      properties:
        handlingUnit:
          $ref: '#/components/schemas/HandlingUnit'
        handlingUnitDefinition:
          $ref: '#/components/schemas/HandlingUnitDefinition'
        serialunits:
          type: array
          items:
            $ref: '#/components/schemas/Serialunit'
      readOnly: true
    OrganizationUnitMeasurementValueMaterialBin:
      description: MaterialBin Mesurementvalue booked by an OrganizationUnit
      type: object
      properties:
        bookDate:
          format: date-time
          description: BookDate of the Measurement
          type: string
        endDate:
          format: date-time
          description: EndDate of the Filter for OrganizationUnitMeasurementValue
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MaterialBin for which the Booking was performed.
        materialBinName:
          description: Name of the MaterialBin for which the Booking was performed.
          type: string
        maximum:
          format: double
          description: Max Value of the Measurement
          type: number
        measurementName:
          description: Name of the Measurement
          type: string
        minimum:
          format: double
          description: Min Value of the Measurement
          type: number
        nominal:
          format: double
          description: Nominal Value of the Measurement
          type: number
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        startDate:
          format: date-time
          description: StartDate of the Filter for OrganizationUnitMeasurementValue
          type: string
        tolerance:
          format: double
          description: Tolerance Value of the Measurement
          type: number
        unit:
          description: Unit
          type: string
        value:
          format: double
          description: Value of the Measurement
          type: number
      readOnly: true
    Unit:
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkstepState:
      description: State of the OrganizationUnit in that workstep
      enum:
      - STARTED
      - PAUSED
      - FINISHED
      - READY
      - NOT_READY
      type: string
    SerialunitGroupedBookingView:
      type: object
      properties:
        amountBookingTotal:
          format: int32
          description: Amount of total bookings used to group the Data
          type: integer
        amountSerialunits:
          format: int32
          description: Amount of distinct Serialunits in the grouped Data
          type: integer
          readOnly: true
        bookingType:
          allOf:
          - $ref: '#/components/schemas/BookingType'
          - description: "BookingType: SERIALUNIT, WORKORDER_WORKSTEP"
        maxBookDate:
          format: date-time
          description: Maximum Bookdate of the grouped Data
          type: string
        minBookDate:
          format: date-time
          description: Minimum Bookdate of the grouped Data
          type: string
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has done the booking
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has done the booking
        organizationUnitName:
          description: Name of the OrganizationUnit which has done the booking
          type: string
        partDescription:
          description: Description of the Part of the Booking
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Name of the Part of the Booking
        partName:
          description: Name of the Part of the Booking
          type: string
        quantityFail:
          format: double
          description: Amount of bookings with state FAIL
          type: number
        quantityFirstPass:
          format: double
          description: Amount of First PASS bookings
          type: number
        quantityInProcess:
          format: double
          description: Amount of bookings with state IN_PROCESS
          type: number
        quantityPass:
          format: double
          description: Amount of bookings with state PASS
          type: number
        quantityScrap:
          format: double
          description: Amount of bookings with state SCRAP
          type: number
        sumCycleTime:
          format: int64
          description: Sum Cycle Time
          type: integer
        sumSetupTime:
          format: int64
          description: Sum Setup Time
          type: integer
        workorderDescription:
          description: Description of the Workorder the Booking belongs to
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the Booking belongs to
        workorderName:
          description: Name of the Workorder the Booking belongs to
          type: string
        workorderWorkstepDescription:
          description: Description of the WorkorderWorkstep the Booking belongs to
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstep the Booking belongs to
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep the Booking belongs to
          type: string
    BookingPerShift:
      description: "Consolidated bookings for a OrganizationUnit, Workorder and Workstep\
        \ per shift"
      required:
      - fromDate
      - workorderWorkstepId
      - organizationUnitId
      - toDate
      - bookDate
      - organizationUnitName
      - workorderId
      - workorderName
      - workorderWorkstepName
      - workorderWorkstepPosition
      - cycleTime
      - setupTime
      - plantId
      type: object
      properties:
        bookDate:
          format: date-time
          description: Booking OffsetDateTime
          type: string
          nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        cycleTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Cycletime for this Booking
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          - description: Day Of Week
            readOnly: true
        fromDate:
          format: date-time
          description: Consolidation From
          type: string
          nullable: false
        id:
          $ref: '#/components/schemas/BookingPerShiftPk'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
            nullable: false
        organizationUnitName:
          description: OrganizationUnit name
          type: string
          nullable: false
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the plant of this Booking
            nullable: false
        quantityBookings:
          format: int32
          description: total number of bookings
          type: integer
          readOnly: true
        quantityFail:
          format: double
          description: Sum FAIL-Quantity
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Sum FIRST-PASS-Quantity
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: Sum InProcess-Quantity
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Sum PASS-Quantity
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Sum SCRAP-Quantity
          type: number
          readOnly: true
        setupTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Setuptime for this Booking
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ShiftId for this Booking
            nullable: false
        shiftName:
          description: ShiftName for this Booking
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        toDate:
          format: date-time
          description: Consolidation To
          type: string
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        weekOfYear:
          format: int32
          description: Week of Year
          type: integer
          readOnly: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkorderId of the Booking
            nullable: false
        workorderName:
          description: Workorder name
          type: string
          nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep for this Booking
            nullable: false
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep for this Booking
          type: string
          nullable: false
        workorderWorkstepPosition:
          format: int64
          description: Position of the WorkorderWorkstep for this Booking
          type: integer
          nullable: false
      readOnly: true
    OrganizationUnitMeasurement:
      description: Mesurement booked by an OrganizationUnit
      type: object
      properties:
        amountBookings:
          format: int64
          description: Amnount  of Bookings
          type: integer
        endDate:
          format: date-time
          description: EndDate of the Filter for OrganizationUnitMeasurement
          type: string
        firstBookDate:
          format: date-time
          description: First BookDate of the Measurement
          type: string
        lastBookDate:
          format: date-time
          description: Last BookDate of the Measurement
          type: string
        maxMaximum:
          format: double
          description: Max Value of the Maximum
          type: number
        maxMaximumTextual:
          description: Max Value of the Maximum
          type: string
        maxTolerance:
          format: double
          description: Max Value of the Tolerance
          type: number
        maxToleranceTextual:
          description: Max Value of the Tolerance
          type: string
        measurementName:
          description: Name of the Measurement
          type: string
        minMinimum:
          format: double
          description: Min Value of the Minimum
          type: number
        minMinimumTextual:
          description: Min Value of the Minimum
          type: string
        minNominal:
          format: double
          description: Min Value of the Nominal
          type: number
        minNominalTextual:
          description: Min Value of the Nominal
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        startDate:
          format: date-time
          description: StartDate of the Filter for OrganizationUnitMeasurement
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder
      readOnly: true
    MaterialBinDTO:
      description: 'MaterialBin data including Part Data '
      type: object
      properties:
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        measurements:
          description: "Materialbin measurements<BR>Measurements are transaction data\
            \ of the materialBin, so when an materialBin is imported again, there\
            \ is no delta-comparition for measurements, each time a MaterialBin with\
            \ measurement values is imported, the measurements are saved"
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinMeasurementDTO'
        name:
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        sections:
          description: "Materialbin sections<BR>Sections are master data of a materialBin,\
            \ so when an materialBin is imported again, there is a delta-comparision\
            \ of the sections based on the name of the sections<BR> * Sections with\
            \ a new name are created<BR> * Sections with a existing name are verified\
            \ and chnages are updated<BR> * Sections with a deleteRequest are deleted<BR>\
            \ * Existing sections that are not part of the imported sections are not\
            \ modified<BR> * If no sections to import are given, no change on existing\
            \ sections is done<BR>Important: the Section must not overlap with other\
            \ sections, this would cause an failure"
          type: array
          items:
            $ref: '#/components/schemas/MaterialBinSectionDTO'
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
    WorkorderState:
      description: Fixed defined states of a workorder-process
      enum:
      - NEW
      - STARTED
      - FINISHED
      type: string
    MaterialBinMeasurementBookingNumeric:
      description: Numeric measurement for a materialBin. A Measurement is unique
        for it's name and bookdate
      required:
      - name
      - measurementUnit
      - bookDate
      - materialBinId
      - sourceType
      - partId
      - value
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
          nullable: false
        calculatedState:
          type: string
        characteristicId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Characteristic (Testplan) for this Booking
        created:
          format: date-time
          type: string
          readOnly: true
        lowerActionLimit:
          format: double
          description: Lower action limit value
          type: number
        lowerScrapLimit:
          format: double
          description: Lower scrap limit value
          type: number
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement for materialBin with this ID
            nullable: false
        materialBinSectionReference:
          format: double
          description: Measurement referencing a certain section of the materialBin
          type: number
        maximum:
          format: double
          description: Maximum
          type: number
        measurementUnit:
          type: string
          nullable: false
        minimum:
          format: double
          description: Minimum
          type: number
        name:
          type: string
          nullable: false
        nominal:
          format: double
          description: Nominal
          type: number
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement done by a organizationUnit with this ID
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Measurement for materialBin of part with this ID
            nullable: false
        sourceType:
          allOf:
          - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
          - nullable: false
        stamp:
          format: date-time
          type: string
          readOnly: true
        state:
          description: State of the measured characteristic
          type: string
        testboardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the SMOM-Testboard the measurement references to
        testboardName:
          type: string
        tolerance:
          format: double
          description: Tolerance
          type: number
        toleranceMaximum:
          format: double
          description: Tolerance maximum value
          type: number
        toleranceMinimum:
          format: double
          description: Tolerance minimum value
          type: number
        upperActionLimit:
          format: double
          description: Upper action limit value
          type: number
        upperScrapLimit:
          format: double
          description: Upper scrap limit value
          type: number
        value:
          format: double
          description: Value
          type: number
          nullable: false
    OrganizationUnitConditionHistory:
      description: History of conditions of a Machine
      required:
      - organizationUnitId
      - conditionId
      - bookDate
      type: object
      properties:
        bookDate:
          format: date-time
          description: Start-Time of the station-condition
          default: current system date&time
          type: string
        conditionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MDC-condition
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the organization_unit
        payload:
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the shift assigned to booking organizationUnit at server-time
              on creation of this condition
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    OrganizationUnitWorkorderActivationHistory:
      description: Removed activation of an organizationUnit for a Workorder at a
        Workstep
      required:
      - organizationUnitId
      - workorderId
      - workorderWorkstepId
      - workorderWorkstepOrganizationUnitId
      - topOrganizationUnitId
      - userName
      - created
      - stamp
      - deactivationStamp
      - deactivationUserName
      type: object
      properties:
        created:
          format: date-time
          type: string
          readOnly: true
          nullable: false
        deactivationStamp:
          format: date-time
          description: Stamp when the Activation was removed
          type: string
          nullable: false
        deactivationUserName:
          description: UserIdent of the User who has done the activation
          type: string
          nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit that is activated for the workorder
            nullable: false
        stamp:
          format: date-time
          type: string
          readOnly: true
          nullable: false
        stateBeforeActivation:
          allOf:
          - $ref: '#/components/schemas/WorkstepState'
          - description: State of the WorkorderWorkstepOrganizationUnit before it
              was activated
            default: READY
        topOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit that was used for activation,\
              \ may be organizationUnit itself or a parent of the organizationUnit"
            nullable: false
        userName:
          description: Ident of the User who has done the activation
          type: string
          nullable: false
        workorderClusterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the WorkorderCluster, can be null"
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the organizationunit is activated for
            nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstep the organizationunit is activated
              for
            nullable: false
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of a WorkorderWorkstepOrganizationUnit, the entiy that\
              \ builds the reference between the OrganizationUnit and the Workorderworkstep\
              \ based on the Workcenter"
            nullable: false
    TimeDefinition:
      enum:
      - UTC
      - WALL
      - STANDARD
      type: string
    UUID:
      format: uuid
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    SerialunitMergeHistoryChildView:
      description: A MergeHistory of a (Child)-Serialunit merged into a ParentSerialunit
        with the (Parent)-Workorder and (Parent)-Part wrapped as SerialunitView
      type: object
      properties:
        parentSerialunit:
          allOf:
          - $ref: '#/components/schemas/SerialunitView'
          - description: The Parent-Serialnumber the Child is/was merged into
        serialunitMerge:
          allOf:
          - $ref: '#/components/schemas/MergeSerialunitHistory'
          - description: The MergeHistory for one Merge
      readOnly: true
    FailureAction:
      description: Failure Action to solve the failure. Updates to a FailureAction
        will be stored in an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    GroupBy:
      enum:
      - HOUR
      - DAY
      type: string
    EquipmentMaintenanceProtocol:
      description: Protocol of maintenances for a Equipment
      required:
      - maintainableId
      - maintenanceName
      - maintenanceStart
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        endUserName:
          type: string
        failuresTotal:
          format: int32
          type: integer
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        maintainableId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: id of the equipment
            nullable: false
        maintenanceComment:
          type: string
        maintenanceEnd:
          format: date-time
          type: string
        maintenanceName:
          allOf:
          - $ref: '#/components/schemas/MaintenanceName'
          - nullable: false
        maintenanceStart:
          format: date-time
          type: string
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        startUserName:
          type: string
        usagesTotal:
          format: int32
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    OrganizationUnitCurrentConditionView:
      description: OrganizationUnitCurrentConditionView contains OrganizationUnitConditionMessage
        and all childOrganizationUnits
      type: object
      properties:
        childOrganizationUnits:
          description: List of Child OrganizationUnits of that OrganizationUnit
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUnitCurrentConditionView'
          readOnly: true
        organizationUnitConditionMessage:
          $ref: '#/components/schemas/OrganizationUnitConditionMessage'
      readOnly: true
    FinalMaintenanceInterval:
      description: Final Maintenance Interval
      type: object
      properties:
        afterDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: |-
              If given, must be greater one hour.
              If current usage-duration exceeds this value, a maintenance should be done.
              Usage-duration:
              For repeatable intervals: Start is last maintenance Date (or creation date if no maintenance was done by now).
              For final interval start is creation date.
              End is current system date.
        afterFailures:
          format: int32
          description: |-
            If given, must be greater zero.
            If current number of usages exceeds this number, a maintenance should be done.
          type: integer
        afterUsages:
          format: int32
          description: |-
            If given, must be greater zero.
            If current number of usages exceeds this number, a maintenance should be done.
          type: integer
        warnAfterDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: |-
              If given, must be greater one hour. May be given, only if afterDuration is given, too.
              If current usage-duration exceeds this value, a maintenance should be done soon.
              Usage-duration:
              For repeatable intervals: Start is last maintenance Date (or creation date if no maintenance was done by now).
              For final interval: start is creation date.
              End is current system date.
        warnAfterFailures:
          format: int32
          description: |-
            If given, must be greater zero. May be given, only if afterFailures is given, too.
            If current number of usages exceeds this number, a maintenance should be done soon.
          type: integer
        warnAfterUsages:
          format: int32
          description: |-
            If given, must be greater zero. May be given, only if afterUsages is given, too.
            If current number of usages exceeds this number, a maintenance should be done soon.
          type: integer
    SerialunitHierarchyState:
      description: "State of the SerialunitHierarchy: MERGES, UNMERGED"
      enum:
      - MERGE
      - UNMERGE
      type: string
    SerialunitReservedNumberView:
      description: View of reserved numbers of a serialunit
      type: object
      properties:
        reservedNumbers:
          type: array
          items:
            $ref: '#/components/schemas/SerialunitReservedNumber'
        serialunit:
          $ref: '#/components/schemas/Serialunit'
      readOnly: true
    IdGenerator:
      description: "null (Only certain fields are updatable when released, see field's\
        \ description)"
      required:
      - counterBase
      - idGeneratorTypeId
      type: object
      properties:
        counterBase:
          allOf:
          - $ref: '#/components/schemas/CounterBase'
          - description: Counter of this IdGenerator will be attachted to MasterData
              of this type
            nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        idGeneratorTypeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Type of IdGenerator
            nullable: false
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    DurationPerDay:
      description: Consolidated durations for a OrganizationUnit per day
      required:
      - fromDate
      - toDate
      - bookDate
      - organizationUnitId
      - organizationUnitName
      - plantId
      - lastLevel4
      type: object
      properties:
        bookDate:
          format: date-time
          description: date of last booking (might be before the fromDate)
          type: string
          example: 1970-01-01T00:00:00.0Z
          nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          - description: Day Of Week
        fromDate:
          format: date-time
          description: Consolidation From
          type: string
          example: 1970-01-01T00:00:00.0Z
          nullable: false
        id:
          $ref: '#/components/schemas/DurationPerDayPk'
        lastLevel2:
          allOf:
          - $ref: '#/components/schemas/Level2'
          - description: Last booked MDC-Level2 according to SEMI E 10
        lastLevel3:
          allOf:
          - $ref: '#/components/schemas/Level3'
          - description: Last booked MDC-Level3 according to SEMI E 10
        lastLevel4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - description: Last booked MDC-Level4 according to SEMI E 10
            nullable: false
        level2Durations:
          description: Summarized duration and quantity of conditions for a Level2
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        level3Durations:
          description: Summarized duration and quantity of conditions for a Level3
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        level4Durations:
          description: Summarized duration and quantity of conditions for a Level4
            according to SEMI E 10
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationQuantity'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
            nullable: false
        organizationUnitName:
          description: OrganizationUnit name
          type: string
          nullable: false
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the plant of this Booking
            nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        toDate:
          format: date-time
          description: Consolidation To
          type: string
          example: 1970-01-01T00:00:00.0Z
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        weekOfYear:
          format: int32
          description: Week of Year
          type: integer
      readOnly: true
    WorkorderWorkstepEquipmentAlternativeView:
      required:
      - quantity
      - partId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        equipment:
          $ref: '#/components/schemas/Equipment'
        equipmentDefinitionView:
          $ref: '#/components/schemas/EquipmentDefinitionView'
        equipmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of exact one dedicated equipment, if null 'any' of the\
              \ EquipmentDefintion defined by partId suffices."
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the equipmentDefinition.
            nullable: false
        quantity:
          format: int32
          description: "Quantity will be evaluated, if not one exact, dedicated equipment\
            \ is defined but a equipmentDefinition."
          minimum: 1
          type: integer
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          default: "100"
          type: integer
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SmtEquipment:
      description: "SmtEquipment used in SMT for Nozzle, Feeder, Head, ..."
      required:
      - partId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lastBookDate:
          format: date-time
          description: last BookDate /usageDate of this SmtEquipment
          type: string
        misspicks:
          format: int64
          description: MissPicks done by this SmtEquipment
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: PartId of the SmtEquipment-Part
            nullable: false
        payload:
          description: Payload
          type: string
        picks:
          format: int64
          description: Picks done by this SmtEquipment
          type: integer
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        storagePlaceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the StoragePlace. Is set when the MaterialBin is stored
              via Storage Service
        storagePlaceName:
          description: Name of the StoragePlace. Is set when the MaterialBin is stored
            via Storage Service
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/SmtEquipmentType'
          - description: "Type of this SmtEquipment, see SmtEquipmentType"
            example: HEAD
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
      deprecated: true
    Level4Data:
      description: Additional infos to MDC-Level 4. Updates to a Level4Data will be
        stored in an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        level4:
          allOf:
          - $ref: '#/components/schemas/Level4'
          - description: Level4
        payload:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: PlantId
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    PredictionRun:
      description: Prediction Run Data
      type: object
      properties:
        continuousRun:
          type: boolean
        created:
          format: date-time
          type: string
          readOnly: true
        description:
          type: string
        filter:
          type: string
          example: "{ \"partId\":\"17\"}"
        finished:
          format: date-time
          type: string
          readOnly: true
        fromDate:
          format: date-time
          type: string
        id:
          format: int64
          type: integer
          readOnly: true
        lastDataDay:
          type: string
          readOnly: true
        message:
          type: string
          readOnly: true
        name:
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: PlantId
            readOnly: true
        progress:
          type: string
          readOnly: true
        slice:
          type: string
        stamp:
          format: date-time
          type: string
          readOnly: true
        started:
          format: date-time
          type: string
          readOnly: true
        state:
          type: string
          readOnly: true
        toDate:
          format: date-time
          type: string
        topId:
          format: int64
          type: integer
          readOnly: true
        type:
          type: string
    ImportBulkRTOUnidentifiableSerialunitBookingDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    MaintenanceProtocolViewEquipmentEquipmentMaintenanceProtocol:
      type: object
      properties:
        maintainable:
          $ref: '#/components/schemas/Equipment'
        protocols:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentMaintenanceProtocol'
    OrganizationUnit:
      description: OrganizationUnit used in production
      required:
      - state
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        lastBookDateProcess:
          format: date-time
          type: string
          readOnly: true
        lastBookDateSerialunit:
          format: date-time
          type: string
          readOnly: true
        lastBookDateWorkstep:
          format: date-time
          type: string
          readOnly: true
        latitude:
          format: double
          description: GEO-Location - Latitude
          type: number
        longitude:
          format: double
          description: GEO-Location - Longitude
          type: number
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        parentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "the id of the parent organizationUnit, e.g. the id of the\
              \ line for a station"
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: "State of the OrganizationUnit (IN_PROCESS, RELEASED, ARCHIVED)<BR>IN_PROCESS\
              \ is only used in Masterdata, so we will only see: RELEASED and ARCHIVED\
              \ in this Service."
            nullable: false
        type:
          description: "Type of the OrganizationUnit. TYPES:PLANT, LINE, STATION,\
            \ ..."
          type: string
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        zoneId:
          allOf:
          - $ref: '#/components/schemas/ZoneId'
          - description: Id of the TimeZone of the station
            example: Europe/Berlin
    WorkorderHierarchy:
      description: WorkorderHierarchy contains the Workorder-Infos and quantity of
        merged Units from serial_unit_hierarchy
      type: object
      properties:
        partDescription:
          description: Part Description
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: partId
        partName:
          description: Part Name
          type: string
        serialUnitQuantity:
          format: int64
          description: Amount of merged Units
          type: integer
        workorderDescription:
          description: Workorder Description
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: workorderId
        workorderName:
          description: Workorder Name
          type: string
        workorderQuantity:
          format: double
          description: Total Quantity of workorder
          type: number
      readOnly: true
    FailureRisk:
      description: Classify the risk of the failure. Updates to a FailureRisk will
        be stored in an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    BookingPerDay:
      description: "Consolidated bookings for a OrganizationUnit, Workorder and Workstep\
        \ per day"
      required:
      - fromDate
      - workorderWorkstepId
      - organizationUnitId
      - toDate
      - bookDate
      - organizationUnitName
      - workorderId
      - workorderName
      - workorderWorkstepName
      - workorderWorkstepPosition
      - cycleTime
      - setupTime
      - plantId
      type: object
      properties:
        bookDate:
          format: date-time
          description: Booking OffsetDateTime
          type: string
          nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        cycleTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Cycletime for this Booking
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          - description: Day Of Week
            readOnly: true
        fromDate:
          format: date-time
          description: Consolidation From
          type: string
          nullable: false
        id:
          $ref: '#/components/schemas/BookingPerDayPk'
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: OrganizationUnit Id
            nullable: false
        organizationUnitName:
          description: OrganizationUnit name
          type: string
          nullable: false
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the plant of this Booking
            nullable: false
        quantityBookings:
          format: int32
          description: total number of bookings
          type: integer
          readOnly: true
        quantityFail:
          format: double
          description: Sum FAIL-Quantity
          type: number
          readOnly: true
        quantityFirstPass:
          format: double
          description: Sum FIRST-PASS-Quantity
          type: number
          readOnly: true
        quantityInProcess:
          format: double
          description: Sum InProcess-Quantity
          type: number
          readOnly: true
        quantityPass:
          format: double
          description: Sum PASS-Quantity
          type: number
          readOnly: true
        quantityScrap:
          format: double
          description: Sum SCRAP-Quantity
          type: number
          readOnly: true
        setupTime:
          allOf:
          - $ref: '#/components/schemas/GecDuration'
          - description: Setuptime for this Booking
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        toDate:
          format: date-time
          description: Consolidation To
          type: string
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
        weekOfYear:
          format: int32
          description: Week of Year
          type: integer
          readOnly: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: WorkorderId of the Booking
            nullable: false
        workorderName:
          description: Workorder name
          type: string
          nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep for this Booking
            nullable: false
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep for this Booking
          type: string
          nullable: false
        workorderWorkstepPosition:
          format: int64
          description: Position of the WorkorderWorkstep for this Booking
          type: integer
          nullable: false
      readOnly: true
    ImportRTOWorkorderDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    MultipanelSerialunitHistory:
      description: History of combination and separation of serialunits to a multipanel
      required:
      - multipanelPosition
      - serialunitId
      - state
      type: object
      properties:
        created:
          format: date-time
          type: string
        multipanelId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: MultipanelId
        multipanelName:
          description: MultipanelName
          type: string
        multipanelPosition:
          description: MultipanelPosition
          type: string
          nullable: false
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: SerialunitId
            nullable: false
        stamp:
          format: date-time
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/MultipanelState'
          - nullable: false
      readOnly: true
    ConnectionPoolConfig:
      type: object
      properties:
        acquisitionTimeout:
          $ref: '#/components/schemas/Duration'
        autoCommit:
          type: boolean
        flushOnClose:
          type: boolean
        idleValidationTimeout:
          $ref: '#/components/schemas/Duration'
        initialSQL:
          type: string
        initialSize:
          format: int32
          type: integer
        leakTimeout:
          $ref: '#/components/schemas/Duration'
        maxLifeTime:
          $ref: '#/components/schemas/Duration'
        maxSize:
          format: int32
          type: integer
        metricsEnabled:
          type: boolean
        minSize:
          format: int32
          type: integer
        poolName:
          type: string
        principal:
          type: string
        reapTimeout:
          $ref: '#/components/schemas/Duration'
        stamp:
          format: date-time
          type: string
        transactionRequirement:
          $ref: '#/components/schemas/TransactionRequirement'
        validationTimeout:
          $ref: '#/components/schemas/Duration'
    Category:
      description: "Categories for Downtimes. (Lower Bound Inclusive, Upper Bound\
        \ Exclusive)"
      enum:
      - GREATER_THAN_TEN_MINUTES
      - ONE_TO_TEN_MINUTES
      - THIRTY_SECONDS_TO_ONE_MINUTE
      - TEN_SECONDS_TO_THIRTY_SECONDS
      - ONE_SECOND_TO_TEN_SECONDS
      - LESS_THAN_ONE_SECOND
      type: string
      readOnly: true
    HandlingUnitDefinition:
      description: "null (Only certain fields are updatable when released, see field's\
        \ description)"
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        singleVarietyRequired:
          description: Single Variety Required
          type: boolean
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    MasterDataComponent:
      description: "null (Only certain fields are updatable when released, see field's\
        \ description)"
      required:
      - fillMode
      - fillWith
      - masterDataType
      - masterDataField
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
            nullable: false
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
          nullable: false
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        masterDataField:
          description: Field of masterdata (e.g. name)
          type: string
          nullable: false
        masterDataType:
          allOf:
          - $ref: '#/components/schemas/MasterDataType'
          - description: Type of masterdata (e.g. PART)
            nullable: false
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    Message:
      description: Defintion of a Message. Updates to a Message will be stored in
        an audit-trail.
      type: object
      properties:
        cause:
          description: Cause
          type: string
        consequence:
          description: Consequence
          type: string
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        messageCategoryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message Category
        messageClassId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message Class
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        priority:
          format: int32
          description: Priority value
          type: integer
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    WorkorderWorkstepBookingDTO:
      description: WorkorderWorkstep booking for a workorder at a workstep for a station
      required:
      - organizationUnitName
      - workstepName
      type: object
      properties:
        bookDate:
          format: date-time
          description: "optional creation date of the bookings, if not given the server\
            \ date is used"
          type: string
        bookInfo:
          description: "an optional information text for this booking. If length exceeds\
            \ 2000, it's trimmed."
          type: string
        confirmationNumber:
          description: "ConfirmationNumber, can be used alternatively instead of Workorder\
            \ and Workstep parameter, to identify the Workorder and the workstep based\
            \ on a unique confirmationNumber passed from the ERP-System to identify\
            \ the WorkorderWorkstep."
          type: string
        cycleTime:
          format: int64
          description: optional cycletime in milliseconds to build the unit(s) or
            this booking
          type: integer
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration to build the amount for booking quantiy of this
              workstep
        equipmentSetups:
          description: List of used equipments for this booking
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSetupDTO'
        name:
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the OrganizationUnit(optional). Can be set if available\
              \ otherwise use OrganizationUnitName instead <BR />When no OrganizationUnitName\
              \ or Id is given, the OrganizationUnit is detected via the Workstep\
              \ OrganizatioinUnits , but only when there is one OrganizationUnit assigned\
              \ to the Workstep.<BR />When multiple OrganizationUnits are assigned\
              \ to a Workstep, the OrganizationUnitName or ID is mandatory."
        organizationUnitName:
          description: "Name of the station that performes the booking<BR /> When\
            \ no OrganizationUnit-Name or Id is given, the OrganizationUnit is detected\
            \ via the Workstep OrganizatioinUnits, but only when there is one OrganizationUnit\
            \ assigned to the Workstep.<BR/> When multiple OrganizationUnits are assigned\
            \ to a Workstep, the OrganizationUnit-Name or ID is mandatory."
          type: string
        quantityFail:
          format: double
          description: Fail quantity send with this booking
          type: number
        quantityFirstPass:
          format: double
          description: First Pass quantity send with this booking
          type: number
        quantityInProcess:
          format: double
          description: InProcess quantity send with this booking. Use InProcess only
            for long running process steps
          type: number
        quantityPass:
          format: double
          description: Pass quantity send with this booking
          type: number
        quantityScrap:
          format: double
          description: Scrap quantity send with this booking
          type: number
        setupList:
          description: List of SetupData with materialBins and the used smtEquipments
            for this booking
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepMaterialSetupDTO'
        setupTime:
          format: int64
          description: SetupTime needed for setup preparation before building the
            unit(s)
          type: integer
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Unit the quantities of booking are send with,\
              \ if not given the unit of the workorder is used"
        unitName:
          description: "Name of the Unit the quantities of booking are send with,\
            \ if not given the unbit of the workorder is used"
          type: string
        workorderClusterPosition:
          description: Booking belongs to this position in a WorkorderCluster
          type: string
          nullable: true
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The ID of the Workorder the booking should be done for.Can
              be set if available otherwise use WorkorderName instead '
        workorderName:
          description: The Name of the Workorder the booking should be done for.WorkorderId
            can be used alternatively.
          type: string
        workstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The Id of the Workstep the booking should be done for.Can
              be set if available otherwise use WorkstepName instead '
        workstepName:
          description: The Name of the Workstep the booking should be done for.WorkstepId
            can be used alternatively.
          type: string
    ImportBulkRTOMultipanelSerialUnitBookingStateDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    OrganizationUnitSmall:
      description: Small Class OrganizationUnit
      type: object
      properties:
        description:
          description: Description of the OrganizationUnit
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        name:
          description: Name of the OrganizationUnit
          type: string
      readOnly: true
    ListLoggerInfo:
      type: array
      items:
        $ref: '#/components/schemas/ListLoggerInfo'
    WorkorderWorkstepBooking:
      description: WorkorderWorkstepBooking Entity. Single quantity booking of a station
        at a workstep of a workorder
      required:
      - workorderWorkstepId
      - bookDate
      - organizationUnitId
      - workorderId
      - created
      - workorderWorkstepOrganizationUnitId
      - setupTime
      - userName
      - hasEquipment
      type: object
      properties:
        bookDate:
          format: date-time
          description: Optional Bookdate for that booking (date given from the client
            or if not given the server date is used)
          type: string
          nullable: false
        bookInfo:
          description: an optional information text for this booking
          type: string
        created:
          format: date-time
          description: Creation date for the booking (Serverdate)
          type: string
          readOnly: true
          nullable: false
        cycleTime:
          format: int64
          description: cycletime in milliseconds to build the given amount of units
            in this workstep
          type: integer
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration to build the amount for booking quantiy of this
              workstep
        hasEquipment:
          description: Are EquipmentBookings existing for this Booking
          type: boolean
        hasMaterial:
          description: Are MaterialBookings existing for this Booking
          type: boolean
          readOnly: true
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the OrganizationUnit that created the booking '
            nullable: false
        quantityFail:
          format: double
          description: Quantity of FAIL for this booking
          type: number
        quantityFailWorkstep:
          format: double
          description: Total Quantity FAIL for the workstep after this booking
          type: number
        quantityFirstPass:
          format: double
          description: Quantity of FIRST PASS Bookings for this booking
          type: number
        quantityFirstPassWorkstep:
          format: double
          description: Total Quantity FIRST PASS for the workstep after this booking
          type: number
        quantityInProcess:
          format: double
          description: "Quantity of InProcess Bookings for this booking, Use InProcess\
            \ only for long running process steps"
          type: number
        quantityInProcessWorkstep:
          format: double
          description: Total Quantity InProcess for the workstep after this booking
          type: number
        quantityPass:
          format: double
          description: Quantity of PASS Bookings for this booking
          type: number
        quantityPassWorkstep:
          format: double
          description: Total Quantity PASS for the workstep after this booking
          type: number
        quantityScrap:
          format: double
          description: Quantity of SCRAP Bookings for this booking
          type: number
        quantityScrapWorkstep:
          format: double
          description: Total Quantity SCRAP for the workstep after this booking
          type: number
        setupTime:
          format: int64
          description: cycletime in milliseconds to setup the given amount of units
            in this workstep
          type: integer
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ShiftId for this Booking, can be null"
            nullable: true
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Unit the quantities of booking are send with,\
              \ if not given the unit of the workorder is used"
        userName:
          description: User who created the booking
          type: string
          readOnly: true
          nullable: false
        workorderClusterId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the WorkorderCluster, can be null"
        workorderClusterPosition:
          description: "Id of the WorkorderCluster, can be null"
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the workorder the booking belongs to
            nullable: false
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstep that does the booking
            nullable: false
        workorderWorkstepOrganizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the WorkorderWorkstepOrganizationUnit that does the
              booking
            nullable: false
    GroupedBookingView:
      description: "Group the Serialunit or WorkorderWoerkstep - Bookings  for part,\
        \ OrganizationUnit and Workorder ang get the grouped quantity for PASS, FAIL,\
        \ SCRAP,IN_PROCESS for the given Filter"
      type: object
      properties:
        amountBookingTotal:
          format: int32
          description: Amount of total bookings used to group the Data
          type: integer
        bookingType:
          allOf:
          - $ref: '#/components/schemas/BookingType'
          - description: "BookingType: SERIALUNIT, WORKORDER_WORKSTEP"
        maxBookDate:
          format: date-time
          description: Maximum Bookdate of the grouped Data
          type: string
        minBookDate:
          format: date-time
          description: Minimum Bookdate of the grouped Data
          type: string
        organizationUnitDescription:
          description: Description of the OrganizationUnit which has done the booking
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit which has done the booking
        organizationUnitName:
          description: Name of the OrganizationUnit which has done the booking
          type: string
        partDescription:
          description: Description of the Part of the Booking
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Name of the Part of the Booking
        partName:
          description: Name of the Part of the Booking
          type: string
        quantityFail:
          format: double
          description: Amount of bookings with state FAIL
          type: number
        quantityFirstPass:
          format: double
          description: Amount of First PASS bookings
          type: number
        quantityInProcess:
          format: double
          description: Amount of bookings with state IN_PROCESS
          type: number
        quantityPass:
          format: double
          description: Amount of bookings with state PASS
          type: number
        quantityScrap:
          format: double
          description: Amount of bookings with state SCRAP
          type: number
        sumCycleTime:
          format: int64
          description: Sum Cycle Time
          type: integer
        sumSetupTime:
          format: int64
          description: Sum Setup Time
          type: integer
        workorderDescription:
          description: Description of the Workorder the Booking belongs to
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder the Booking belongs to
        workorderName:
          description: Name of the Workorder the Booking belongs to
          type: string
        workorderWorkstepDescription:
          description: Description of the WorkorderWorkstep the Booking belongs to
          type: string
        workorderWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the WorkorderWorkstep the Booking belongs to
        workorderWorkstepName:
          description: Name of the WorkorderWorkstep the Booking belongs to
          type: string
      readOnly: true
    OrganizationUnitMessage:
      description: Message of an OrganizationUnit
      required:
      - organizationUnitId
      - messageId
      - openSince
      - itemId
      - openUser
      type: object
      properties:
        actions:
          description: Action to be done
          type: string
        confirmedInfo:
          description: Additional confirm message
          type: string
        confirmedSince:
          format: date-time
          description: Message confirm-time
          type: string
        confirmedUser:
          description: Name of the user that confirmed the message
          type: string
          readOnly: true
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        equipmentName:
          description: "Name of the equipment, the message was sent for"
          type: string
        id:
          $ref: '#/components/schemas/OrganizationUnitMessagePK'
        itemId:
          description: Identifies for which item of the machine the message was sent
          type: string
          nullable: false
        lossFactor:
          format: double
          description: Lost pieces per hour while the message is not closed
          type: number
        messageId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Message
            nullable: false
        messageState:
          allOf:
          - $ref: '#/components/schemas/MessageState'
          - description: State of the message
            readOnly: true
        openSince:
          format: date-time
          description: "Message open-time. May be set on creation-time of the message,\
            \ subsequent updates are forbidden!"
          type: string
          nullable: false
        openToConfirmDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: Duration between open and confirm
            readOnly: true
        openUser:
          description: Name of the user that opened the message
          type: string
          readOnly: true
          nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
            nullable: false
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the plant
            readOnly: true
        responsibleUser:
          description: Name of the user that is responsible
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the shift during open-time
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    GecFailureBase:
      type: object
      properties:
        apiCallHash:
          description: Unique identifier for logs
          type: string
          nullable: true
        failure:
          description: The FailureType that occured (see ResponseCodeMapping- & Warning-Schema)
          type: string
          nullable: false
        message:
          description: Additonal Message of that failure
          type: string
          nullable: true
        object:
          description: The ObjectType where the failure occured
          type: string
          nullable: false
      readOnly: true
    MessageGroupView:
      description: MessageGroupView contains MessageGroup and their assigned Messages
      type: object
      properties:
        messageGroup:
          $ref: '#/components/schemas/MessageGroup'
        messageList:
          type: array
          items:
            $ref: '#/components/schemas/Message'
      readOnly: true
    WorkorderWorkstepEquipmentAlternative:
      description: Alternative to a equipment required at a workstep of a workorder
      required:
      - quantity
      - partId
      - usageProbability
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: references the part/equipmentDefinition of this equipment
            nullable: false
        quantity:
          format: int32
          minimum: 1
          type: integer
          nullable: false
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        usageProbability:
          format: int32
          description: "Usage probability (usually in percent, alternatives with higher\
            \ usage probability will be preferred)"
          default: "100"
          type: integer
          nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    FailureBookingView:
      description: "FailureBookingView is a Join over FailureBooking, Part and OrganizationUnit"
      type: object
      properties:
        bookDate:
          format: date-time
          description: 'Book Date '
          type: string
        failureAction:
          description: 'Failure Action '
          type: string
        failureBookingCreated:
          format: date-time
          description: 'Creation Date of the FailureBooking '
          type: string
        failureBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the FailureBooking '
        failureCause:
          description: 'Failure Cause '
          type: string
        failureComment:
          description: Optional Failure Comment during failure-upload
          type: string
        failureDescription:
          description: 'Failure Description '
          type: string
        failureId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Failure '
        failureLocation:
          description: 'Failure Location '
          type: string
        failureName:
          description: 'Failure Name '
          type: string
        failurePattern:
          description: 'Failure Pattern '
          type: string
        failureRisk:
          description: 'Failure Risk '
          type: string
        failureSymptom:
          description: 'Failure Sympton '
          type: string
        isPseudo:
          description: 'is Pseudo Failure '
          type: boolean
        isRepaired:
          description: 'is Failure Repaired '
          type: boolean
        materialPartDescription:
          description: 'Description of Material-Part '
          type: string
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the Material-Part '
        materialPartName:
          description: 'Name of the Material-Part '
          type: string
        organizationUnitDescription:
          description: 'Description of the OrganizationUnit '
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the OrganizationUnit '
        organizationUnitName:
          description: 'Name of the OrganizationUnit '
          type: string
        partDescription:
          description: 'Description of the Product-Part '
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Product-Part '
        partName:
          description: 'Name of the Product-Part '
          type: string
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the Serialunit '
        serialunitName:
          description: 'Serialunit Name '
          type: string
        serialunitPosition:
          description: 'Serialunit Position '
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Shift
        workstepLocation:
          description: 'WorkstepLocation '
          type: string
        workstepNumber:
          description: 'WorkstepNumber '
          type: string
      readOnly: true
    ImportRTOSerialunitDTO:
      description: ImportResultTransferObject(RTO) Structure containing the result
        of the Import of one Item
      type: object
      properties:
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        failureItems:
          description: GecFailures
          type: array
          items:
            $ref: '#/components/schemas/GecFailure'
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id is filled with the UUID of the created or already existing
              Item
        message:
          description: "Additional info regarding the import, e.g. may be used to\
            \ list the updated fields"
          type: string
        name:
          description: Name of the Item that should be Imported
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the plant, the import was done for."
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ImportProcessState'
          - description: Processing State of the Import Item
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
        warnItems:
          description: List ofGecWarnings
          type: array
          items:
            $ref: '#/components/schemas/GecWarning'
      readOnly: true
    OutputOverTime:
      description: Information about the Output per Minute for a OrgUnit
      type: object
      properties:
        targetMax:
          format: double
          description: TargetMax
          type: number
        targetMin:
          format: double
          description: TargetMin
          type: number
        values:
          description: List of the Date NumberPairs
          type: object
          items:
            $ref: '#/components/schemas/DateNumberPair'
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Workorder
      readOnly: true
    MaterialBinMeasurementBookingTextualView:
      type: object
      properties:
        bookDate:
          format: date-time
          description: Book Date
          type: string
        calculatedState:
          description: Calculated
          type: string
        created:
          format: date-time
          description: Creation Date of the Measurement
          type: string
        materialBinSectionReference:
          format: double
          description: Measurement referencing a certain section of the materialBin
          type: number
        maximum:
          description: Maximum
          type: string
        measurementUnit:
          description: Unit of measurment
          type: string
        minimum:
          description: Minimum
          type: string
        name:
          description: Name
          type: string
        nominal:
          description: Nominal
          type: string
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        partDescription:
          description: Description of the Part
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the Part
        partName:
          description: Name of the Part
          type: string
        sourceType:
          allOf:
          - $ref: '#/components/schemas/MaterialBinMeasurementBookingSourceType'
          - description: "Source of the measurement: Was the measurement done LOCALy\
              \ or is the date provided by the PRODUCER?"
        state:
          description: State
          type: string
        testboardName:
          description: Name of an external Testboard the measurement references to
          type: string
        tolerance:
          description: Tolerance
          type: string
        value:
          description: Value
          type: string
    OrganizationUnitWorkerDeregistrationView:
      description: History of deregistration of Workers that was registered and then
        deregistred at a OrganizationUnit
      type: object
      properties:
        deregisterDate:
          format: date-time
          description: Deregistration date
          type: string
        deregisterUserName:
          description: Username who has deregistered the Worker
          type: string
        isLineDeregistration:
          description: Was the deregistration done by a Line
          type: boolean
        isLineRegistration:
          description: Was the registration done by a Line
          type: boolean
        organizationUnitDescription:
          description: Description of the OrganizationUnit
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
        registerDate:
          format: date-time
          description: Registration date
          type: string
        registerUserName:
          description: Username who has registered the Worker
          type: string
        workerDescription:
          description: Description of the worker that was registered at the station
          type: string
        workerId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the worker that was registered at the station
        workerName:
          description: Name of the worker that was registered at the station
          type: string
      readOnly: true
    UUIdentifiableObject:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
    MaterialBinUsageData:
      description: Object for Usage of a MaterialBin
      type: object
      properties:
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the MaterialBin
        materialBinName:
          description: Name of the MaterialBin
          type: string
        qty:
          format: int64
          description: Qty/Count of the MaterialBin
          type: integer
    OrganizationUnitProductionHistoryMeanCycleTime:
      type: object
      properties:
        amount:
          format: int32
          description: Amount of Bookings
          type: integer
        calculatedCycleTime:
          format: double
          description: Calculated CycleTime
          type: number
        endBookDate:
          format: date-time
          description: End Bookdate
          type: string
        meanCycleTime:
          format: double
          description: Mean CycleTime
          type: number
        meanUnitsPerMillis:
          format: double
          description: Mean Units per Millisecond
          type: number
        startBookDate:
          format: date-time
          description: Start Bookdate
          type: string
        unitsPerMillis:
          format: double
          description: Units per Millisecond
          type: number
      readOnly: true
    SerialunitHistoryView:
      type: object
      properties:
        mergeSerialunitHistoryList:
          description: List of MergeSerialunitHistory of this Serialunit.<BR>In which
            ParentSerialunit is the Serialunit currently merged in.<BR>In which ParentSerialunit
            was the Serialunit merged in but later unmerged from
          type: array
          items:
            $ref: '#/components/schemas/MergeSerialunitHistory'
          readOnly: true
        serialunitBookingList:
          type: array
          items:
            $ref: '#/components/schemas/SerialunitBooking'
          readOnly: true
        serialunitView:
          allOf:
          - $ref: '#/components/schemas/SerialunitView'
          - description: SerialUnitView contains the Serialnuber the Workorder and
              the Part
            readOnly: true
    CounterType:
      description: |
        CounterType
         * DECIMAL: Decimal counter (base 10)
         * HEXADECIMAL: Hexa-Decimal counter (base 16)
         * BASE32_RFC4684: Base 32 counter letters (digits: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V)
         * BASE32_IJQR: Base-32 counter without letters I, J, Q, R (digits: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,K,L,M,N,O,P,S,T,U,V,W,X,Y,Z)
         * BASE32_IOXZ: Base-32 counter without letters I, O, X, Z (digits: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,J,K,L,M,N,P,Q,R,S,T,U,V,W,Y)
      enum:
      - DECIMAL
      - HEXADECIMAL
      - BASE32_RFC4684
      - BASE32_IJQR
      - BASE32_IOXZ
      type: string
    ZoneId:
      type: object
      properties:
        id:
          type: string
        rules:
          $ref: '#/components/schemas/ZoneRules'
    FailureBookingViewGrouped:
      description: "FailureBookingViewGrouped is FailureBookingView grouped by Station,\
        \ Part and Location"
      type: object
      properties:
        bookDate:
          format: date-time
          description: 'Book Date '
          type: string
        failureAction:
          description: 'Failure Action '
          type: string
        failureBookingCreated:
          format: date-time
          description: 'Creation Date of the FailureBooking '
          type: string
        failureBookingId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the FailureBooking '
        failureCause:
          description: 'Failure Cause '
          type: string
        failureComment:
          description: Optional Failure Comment during failure-upload
          type: string
        failureDescription:
          description: 'Failure Description '
          type: string
        failureId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Failure '
        failureLocation:
          description: 'Failure Location '
          type: string
        failureName:
          description: 'Failure Name '
          type: string
        failurePattern:
          description: 'Failure Pattern '
          type: string
        failureRisk:
          description: 'Failure Risk '
          type: string
        failureSymptom:
          description: 'Failure Sympton '
          type: string
        firstBookDate:
          format: date-time
          description: 'First Book Date '
          type: string
        firstSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'First SerialunitId '
        firstSerialunitName:
          description: 'First SerialunitName '
          type: string
        isPseudo:
          description: 'is Pseudo Failure '
          type: boolean
        isRepaired:
          description: 'is Failure Repaired '
          type: boolean
        lastBookDate:
          format: date-time
          description: 'Last Book Date '
          type: string
        lastSerialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Last SerialunitId '
        lastSerialunitName:
          description: 'Last SerialunitName '
          type: string
        location:
          description: 'Location '
          type: string
        locationList:
          type: array
          items:
            type: string
        materialPartDescription:
          description: 'Description of Material-Part '
          type: string
        materialPartId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the Material-Part '
        materialPartName:
          description: 'Name of the Material-Part '
          type: string
        organizationUnitDescription:
          description: 'Description of the OrganizationUnit '
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the OrganizationUnit '
        organizationUnitName:
          description: 'Name of the OrganizationUnit '
          type: string
        partDescription:
          description: 'Description of the Product-Part '
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Id of the Product-Part '
        partName:
          description: 'Name of the Product-Part '
          type: string
        productList:
          type: array
          items:
            $ref: '#/components/schemas/PartSmall'
        qtyBookings:
          format: int32
          description: 'Amount of Bookings for Group Key '
          type: integer
        serialunitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'ID of the Serialunit '
        serialunitName:
          description: 'Serialunit Name '
          type: string
        serialunitPosition:
          description: 'Serialunit Position '
          type: string
        shiftId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Shift
        stationList:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUnitSmall'
        workstepLocation:
          description: 'WorkstepLocation '
          type: string
        workstepNumber:
          description: 'WorkstepNumber '
          type: string
      readOnly: true
    CounterComponent:
      description: "Numerical counter as a part of an ID (Only certain fields are\
        \ updatable when released, see field's description)"
      required:
      - fillMode
      - fillWith
      - incrementBy
      - start
      - max
      - counterType
      type: object
      properties:
        counterType:
          allOf:
          - $ref: '#/components/schemas/CounterType'
          - description: Counter-Type of the counter
            default: DECIMAL
            nullable: false
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description (Updatable when released)
          type: string
        fillMode:
          allOf:
          - $ref: '#/components/schemas/FillMode'
          - description: "If minimal length is not reached, fill with this mode"
            default: LEFT
            nullable: false
        fillWith:
          description: "If minimal length is not reached, fill with this string"
          default: ' '
          minLength: 1
          type: string
          nullable: false
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        incrementBy:
          description: Increment counter by this value for each new ID
          default: "1"
          type: string
          nullable: false
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        max:
          description: Maximal value of the counter
          default: "2147483647"
          type: string
          nullable: false
        minLength:
          format: int32
          description: Minimal length of the generated ID-Part
          maximum: 1000
          minimum: 1
          type: integer
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        start:
          description: Start of the counter
          default: "0"
          type: string
          nullable: false
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
    ImportBulkRTOWorkorderDTO:
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          description: List of all Import Results
          type: array
          items: {}
          nullable: false
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
    OrganizationUnitMaterialBinSetup:
      description: Updates to a OrganizationUnitMaterialBinSetup will be stored in
        an audit-trail.
      required:
      - materialBinId
      - organizationUnitId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - nullable: false
        setupPosition:
          description: SetupPosition
          type: string
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ProcurementType:
      description: Procurement Type of a part
      enum:
      - INHOUSE
      - EXTERNAL
      type: string
    ConditionGroup:
      description: Group of a Machine Data Conditions. A Condition can (but not has
        to be) a member of a group. Updates to a ConditionGroup will be stored in
        an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    Contact:
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    Workorder:
      description: "Workorder (Only certain fields are updatable when released, see\
        \ field's description). Updates to a Workorder will be stored in an audit-trail."
      required:
      - numberOfBoards
      - type
      - partId
      - processState
      - lastWorkstepId
      - firstWorkstepId
      - unitId
      type: object
      properties:
        autoFinishComment:
          description: "Finish Comment, is set when the workorder is automatically\
            \ set to finished, based on the FINISH_MODE (Updatable when released)"
          type: string
          readOnly: true
        bomErpVersion:
          type: string
        bomName:
          description: "On release of the workorder: If no bomItems defined for this\
            \ workorder, the bom with given name an erpVersion will be fetched from\
            \ masterdata and it's definition copied."
          type: string
        created:
          format: date-time
          type: string
        customerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the CustomerContact
        deliveryDate:
          format: date-time
          description: Delivery date of the Workorder (Updatable when released)
          type: string
        description:
          description: Description (Updatable when released)
          type: string
        endDate:
          format: date-time
          description: "EndDate of the Workorder, is implicit set when a workorder\
            \ is set to finished (Updatable when released)"
          type: string
          readOnly: true
        erpState:
          $ref: '#/components/schemas/WorkorderErpState'
        finishMode:
          $ref: '#/components/schemas/WorkorderFinishMode'
        firstWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the first mandatory workstep in the workorder (Updatable
              when released)
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1 (Updatable when released)
          type: string
        info2:
          description: Info Text 2 (Updatable when released)
          type: string
        info3:
          description: Info Text 3 (Updatable when released)
          type: string
        lastBookDate:
          format: date-time
          description: Date of the last booking done for the workorder
          type: string
          readOnly: true
        lastWorkstepId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the last/final mandatory workstep in the workorder
              (Updatable when released)
        locked:
          description: "When true, Workorder is locked (Updatable when released)"
          type: boolean
        masterBomId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MasterBom
        masterWorkplanId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the MasterWorkplan
        minBookDate:
          format: date-time
          description: Min BookDate of the Workorder. Null if no booking has been
            done so far.
          type: string
          readOnly: true
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        numberOfBoards:
          format: int32
          description: Number of Units that are produced in one cycle (e.g. PCB with
            4 Positions)
          minimum: 1
          type: integer
          nullable: false
        orderSequenceNumber:
          format: int32
          description: Order sequence number of the workorder (Updatable when released)
          type: integer
        parentWorkorderName:
          description: Name of parent workorder (Updatable when released)
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Product-Part that should be build with that Workorder
        payload:
          description: Payload (Updatable when released)
          type: string
        plannedDeliveryDate:
          format: date-time
          description: planned delivery-date of the Workorder (Updatable when released)
          type: string
        plannedEndDate:
          format: date-time
          description: Planned end-date of the Workorder (Updatable when released)
          type: string
        plannedStartDate:
          format: date-time
          description: Planned start-date of the Workorder (Updatable when released)
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        prevProcessState:
          allOf:
          - $ref: '#/components/schemas/WorkorderState'
          - description: previous process state (Updatable when released)
            readOnly: true
        priorityCode:
          description: Priority of the workorder (Updatable when released)
          type: string
        processState:
          $ref: '#/components/schemas/WorkorderState'
        productionController:
          description: Production Controller (Updatable when released)
          type: string
        purchaseOrderNumber:
          description: Purchase Order Number (Updatable when released)
          type: string
        quantity:
          format: double
          description: Workorder Quantity (Updatable when released)
          type: number
        quantityAdjustmentMode:
          $ref: '#/components/schemas/WorkorderQuantityAdjustmentMode'
        quantityErp:
          format: double
          description: Inital Workorder Quantity requested from the ERP-System
          type: number
        quantityFinished:
          format: double
          description: Total finished quantity booked at the last mandatory Workstep
          type: number
          readOnly: true
        quantityMax:
          format: double
          description: Calculated maximum quantity of the workorder based on quantity
            and overbookPercentage used in finish the workorder (Updatable when released)
          type: number
          readOnly: true
        quantityOverbookPercentage:
          format: int32
          description: Percentage value that the workorder quantity could be overbooked.
            In combination with finishMode the workorder quantity could be overbooked
            up to this value before the workorder state will be set automatically
            to finished (Updatable when released)
          type: integer
        quantityScrap:
          format: double
          description: Total scrapped quantity booked at any Workstep
          type: number
          readOnly: true
        quantityScrapAdjust:
          format: double
          description: Scrap Quantity that was used to increased the workorder quantity
            based on Scrap Adjust setting
          type: number
        quantityStarted:
          format: double
          description: Total started quantity booked at the first mandatory Workstep
          type: number
          readOnly: true
        releaseDate:
          format: date-time
          description: ReleaseDate is set when the state was switched from IN_PROCESS
            to RELEASED
          type: string
          readOnly: true
        stamp:
          format: date-time
          description: Date of last change (Updatable when released)
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        startDate:
          format: date-time
          description: "StartDate of the Workorder, is implicit set when a workorder\
            \ is set to started (Updatable when released)"
          type: string
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/ReleaseState'
          - description: ReleaseState (set by release / archive APIs)
            readOnly: true
        type:
          $ref: '#/components/schemas/WorkorderType'
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: UnitId of the workorder
            nullable: false
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates. (Updatable when released)"
          type: integer
        workplanErpVersion:
          type: string
        workplanName:
          description: "On release of the workorder: If no worksteps defined for this\
            \ workorder, the workplan with given name an erpVersion will be fetched\
            \ from masterdata and it's definition copied."
          type: string
    FirstLastOrganizationUnitBooking:
      type: object
      properties:
        firstBooking:
          format: date-time
          description: Creation Date of the OrganizationUnit-Booking
          type: string
        lastBooking:
          format: date-time
          description: Stamp of the OrganizationUnit-Booking
          type: string
        organizationUnitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the OrganizationUnit
        organizationUnitName:
          description: Name of the OrganizationUnit
          type: string
    MultipanelDTO:
      description: 'Multipanel data '
      required:
      - multipanelSerialunits
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Multipanel (UUID), is set from the server"
            readOnly: true
        multiPanelName:
          description: Name of the Multipanel. Can be null
          type: string
        multipanelSerialunits:
          description: List of SerialUnits that should be created and assigned to
            the Multipanel
          type: array
          items:
            $ref: '#/components/schemas/MultipanelSerialunitDTO'
        name:
          type: string
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'The ID of the Workorder the booking should be done for.Can
              be set if available otherwise use WorkorderName instead '
        workorderName:
          description: The Name of the Workorder the booking should be done for.WorkorderId
            can be used alternatively.
          type: string
    WorkorderHighestBookedWorkstep:
      description: "WorkorderWorkstepHighestBooked contains the highest booked workstep\
        \ (PASS-bookings) for a workorder, including the booking organizationUnits\
        \ with there quantities"
      type: object
      properties:
        bookedOrganizationUnitList:
          description: List of WorkorderWorkstepOrganizationUnit that has done the
            bookings in the highest booked workstep position
          type: array
          items:
            $ref: '#/components/schemas/WorkorderWorkstepOrganizationUnit'
        workorderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the workorder
        workorderWorkstep:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstep'
          - description: Highest booked workstep position in this workorder
      readOnly: true
    HandlingUnit:
      description: HandlingUnit Entity. Updates to a HandlingUnit will be stored in
        an audit-trail.
      required:
      - handlingUnitDefinitionId
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        handlingUnitDefinitionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Reference to the HandlingUnitDefinition
            nullable: false
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        hasDocuments:
          description: True when the Entity has documents in the DocumentSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        singleVarietyRequired:
          description: Single Variety Required
          type: boolean
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    SerialunitMergeView:
      type: object
      properties:
        parentSerialunit:
          allOf:
          - $ref: '#/components/schemas/Serialunit'
          - description: 'The Parent-Serialnumber that has merged (Child)-Serialunits '
            readOnly: true
        serialunitViewList:
          description: List of (Child)SerialunitViews (Serialunit/Workorder/Part)
            that are merged into this ParentSerialunit
          type: array
          items:
            $ref: '#/components/schemas/SerialunitView'
          readOnly: true
    ImportBulkRTO:
      description: ImportResultTransferObject(RTO) of an Bulk Import for an ImportType
      type: object
      properties:
        cntAlreadyAvailable:
          format: int32
          description: Count of already existing Items or skipped Items
          type: integer
        cntCreated:
          format: int32
          description: Count of created Items
          type: integer
        cntFailed:
          format: int32
          description: Count of Failures during Import (Items or not imported)
          type: integer
        cntSkipped:
          format: int32
          description: Count of skipped Items
          type: integer
        cntTotal:
          format: int32
          description: Total count of processed Items
          type: integer
        cntUpdated:
          format: int32
          description: Count of updated Items
          type: integer
        cntWarningDuringCreation:
          format: int32
          description: Count of successful processed imports (created/updated) with
            Warnings
          type: integer
        endTime:
          format: date-time
          description: The time when the import was finished
          type: string
        importResults:
          type: array
          items:
            $ref: '#/components/schemas/ImportRTOBase'
        startTime:
          format: date-time
          description: The time when the import was started
          type: string
        totalDuration:
          format: int64
          description: Duration of the complete Bulk-Process in ms
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/ModelType'
          - description: Type of the Data to Import
      readOnly: true
    EquipmentDefinitionView:
      type: object
      properties:
        equipmentDefinition:
          $ref: '#/components/schemas/EquipmentDefinition'
        equipmentType:
          $ref: '#/components/schemas/EquipmentType'
        part:
          $ref: '#/components/schemas/Part'
    WorkorderWorkstepBomItemAlternativeView:
      type: object
      properties:
        materialPart:
          allOf:
          - $ref: '#/components/schemas/Part'
          - description: Part Object used in WorkorderWorkstepBomItem (Material)
            readOnly: true
        unit:
          allOf:
          - $ref: '#/components/schemas/Unit'
          - description: Unit Object used in WorkorderWorkstepBomItem
            readOnly: true
        workorderWorkstepBomItemAlternative:
          allOf:
          - $ref: '#/components/schemas/WorkorderWorkstepBomItemAlternative'
          - description: Workorder Workstep Bom Item Alternative
            readOnly: true
    WorkorderWorkstepMaterialSetupDTO:
      description: "Setup data for a given SetupPosition with the materialBin setup\
        \ on this setupPosition, contains also the involved (BOM)-Location(s) and\
        \ the quantity consumed of the materialbin.<BR>When MaterialBin-FailurePareto\
        \ based on the (BOM)-Location should be used, each (BOM)-Location has to be\
        \ passed separately."
      required:
      - setupPosition
      type: object
      properties:
        bookDate:
          format: date-time
          type: string
        currentQuantity:
          format: double
          description: "Current quantity of the materialBin, can be used to set another\
            \ quantity than totalQuantity.<BR /> If not given currentQuantity is set\
            \ to totlQuantity.<BR>It's not allowed to change the currentQuantity for\
            \ a stored in materialBin.<BR>"
          type: number
        location:
          description: "BOM- Location(s) that are assembled with this materialBin\
            \ by this serialunit upload.<BR/> When FailurePareto should be used each\
            \ Location has to be given separately each within it's own SmtSetupDTO,<BR/>\
            \ otherwise upload the Locations comma separated within one SmtSetupDTO"
          type: string
        materialBinDescription:
          description: Description of the materialBin.<BR />Only used when the MaterialBin
            has to be created
          type: string
        materialBinId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of the materialBin, can be used instead of the\
              \ materialBinName.<BR />. The Id of materialBin is returned for a given\
              \ materialBinName or if a materialBin was created by the Import."
        materialBinName:
          description: Name of the materialBin
          type: string
        materialBinSectionReferenceEnd:
          format: double
          description: "End-Position in the materialBin used for this booking (valid\
            \ for sequential MaterialBins, see MaterialBinTyp and MaterialBinItem\
            \ from/to)"
          type: number
        materialBinSectionReferenceStart:
          format: double
          description: "Start-Position in the materialBin used for this booking (valid\
            \ for sequential MaterialBins, see MaterialBinTyp and MaterialBinItem\
            \ from/to)"
          type: number
        materialChargeDatecode:
          description: Supplier datecode of the ordernumber of the materialbin
          type: string
        materialChargeId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Id of the SupplierOrder<BR/>To create the MaterialCharge
              of the  MaterialBin either this id is required or alternatively the
              materialChargeName and materialChargeDateCode and the producerContactId
        materialChargeName:
          description: Name of the SupplierOrder of the materialbin<BR/>To create
            the MaterialCharge of the MaterialBin either this materialChargeName and
            the materialChargeDateCode and the producerContactId are required or alternatively
            the materialChargeId
          type: string
        partId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Internal Id of Part of the materialBin, can be used instead\
              \ of the partName.<BR />. The Id of part is returned when the partName\
              \ is found, or a materialBin is found by it's name."
        partName:
          description: "Part name of the materialBin, required to create the materialBin.<BR\
            \ /> Either this partName is required or alternatively the partId"
          type: string
        producerContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "ID of the Producer of the materialbin. Neccessary to create\
              \ MaterialCharge with name, datecode, etc. If given, an existing found\
              \ MaterialBin has to match this producer, otherwise a failure will be\
              \ returned. If not given, an existing found MaterialBin may or may not\
              \ define any producer."
        quantity:
          format: double
          description: "(Delta)-booking quantity, that was consumed by this booking\
            \ and reduces the materialBin quantity"
          minimum: 1
          type: number
        setupPosition:
          description: "SetupPosition of the materialbin on the placing machine.<BR>The\
            \ Feeder the materialBin is located at, can be given in the SmtSetupEquipmentDTO-Array"
          minLength: 1
          type: string
        supplierContactId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ID of the Supplier of the materialbin
        totalQuantity:
          format: double
          description: "Total quantity of the materialBin, is required when materialBin\
            \ is created, otherwise not used"
          type: number
        unitId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Id of the Unit, only used when the materialBin is created.<BR\
              \ /> Either this Id or the Name can be given, if both are not given\
              \ the unit of the Part is used"
        unitName:
          description: "Name of the Unit, only used when the materialBin is created.<BR\
            \ /> Either this Id or the Name can be given, if both are not given the\
            \ unit of the Part is used"
          type: string
    ChronoUnit:
      enum:
      - NANOS
      - MICROS
      - MILLIS
      - SECONDS
      - MINUTES
      - HOURS
      - HALF_DAYS
      - DAYS
      - WEEKS
      - MONTHS
      - YEARS
      - DECADES
      - CENTURIES
      - MILLENNIA
      - ERAS
      - FOREVER
      type: string
    FailureCause:
      description: Failure Cause of this failure. Updates to a FailureCause will be
        stored in an audit-trail.
      type: object
      properties:
        created:
          format: date-time
          description: Date of creation
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        description:
          description: Description
          type: string
        hasAttribute:
          description: True when the Entity has Attributes in the AttributeSystem
          type: boolean
          readOnly: true
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "Unique Identifier of the entity. Required for updates. Generated\
              \ on server-side, must not be given in creates."
        info1:
          description: Info Text 1
          type: string
        info2:
          description: Info Text 2
          type: string
        info3:
          description: Info Text 3
          type: string
        name:
          description: Name has to be given on creation of the object and is not updatable
            afterwards
          type: string
        payload:
          description: Payload
          type: string
        plantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: "PlantId, references the plant the entity belongs to"
            readOnly: true
        stamp:
          format: date-time
          description: Date of last change
          type: string
          readOnly: true
          example: 1970-01-01T00:00:00.0Z
        version:
          format: int64
          description: "Internal version of the entity, used for optimistic locking.\
            \ Required for updates. Generated on server-side, must not be given in\
            \ creates."
          type: integer
    ResponseCodeMapping412:
      description: |-
        Precondition Failed
        * *VERSION_MISMATCH* Version in DB does not match given version. Reload required (Optimistic lock).
    ResponseCodeMapping417:
      description: |-
        Expectation Failed
        * *EXPECTATION_FAILED* The excpectation failed. Check invalid
        * *FINALLY_EXPIRED* finaly expired
        * *FINALLY_EXPIRED_SOON* will soon be finaly expired
        * *IN_MAINTENANCE* in maintenance
        * *SHOULD_BE_IN_MAINTENANCE* Should be in maintenance
        * *SHOULD_BE_IN_MAINTENANCE_SOON* Should be in maintenance soon (warn reached)
    ResponseCodeMapping405:
      description: |-
        Method Not Allowed
        * *NOT_ALLOWED* Http Method not allowed for this URL
    ResponseCodeMapping400:
      description: |-
        Bad Request
        * *EXCEPTION* Exception occured. See Message for further details
    ResponseCodeMapping422:
      description: |-
        Unprocessable Entity
        * *IMPORT_FAILED* Import of all Import Items failed.
    ResponseCodeMapping406:
      description: |-
        Not Acceptable
        * *BOM_ITEM_WORKSTEPNAME_MUST_MATCH_TO_WORKPLAN_WORKSTEP_NAME* Bom - The BomItems WorkstepName must match a Workstepname in the Workplan.
        * *DATA_MISMATCH* Given Data don't match with the data in the Persistence
        * *DATA_MUST_NOT_BE_CHANGED* It's not allowed to change the given Data
        * *DELETION_NOT_ALLOWED_DUE_EXISTING_REFERENCES* Deletion is not allowed, because the Object to delete is referenced by other objects
        * *DETECTION_FAILED_DUE_MULTIPLE_ASSIGNED_ORGANIZATIONUNITS* Automatic OrganizationUnit detection, requires only ONE OrganizationUnit assigned at the Workstep, but multiple are assigned
        * *DETECTION_FAILED_DUE_NONE_ASSIGNED_ORGANIZATIONUNIT* Automatic OrganizationUnit detection, requires one OrganizationUnit assigned at the Workstep, but none is assigned
        * *FIELD_UNKNOWN* Field not found in masterData
        * *HANDLING_UNIT_IS_SINGLE_VARIETY_REQUIRED_SERIALUNIT_IS_NOT_MATCHING* Handling Unit is single variety required. Serialunit is not matching!
        * *ID_MISMATCH* Id in path and id in body don't match
        * *ID_NAME_MISMATCH* Given Id and Name, don't match to the existing name for the id in the Persistence
        * *ILLEGAL_ARGUMENT* A argument is not acceptable
        * *ILLEGAL_MATERIALTYPE* MaterialType is not valid
        * *INSUFFICIENT_QUANTITY* Insufficient quantity, not usable
        * *INVALID_BOOKSTATE_FOR_LAST_MANDATORY_WORKSTEP* Workstep has an invalid bookstate at the last mandatory Workstep
        * *INVALID_BOOKSTATE_FOR_PREVIOUS_WORKSTEP* A previous workstep has an invalid bookstate
        * *INVALID_DEREGISTRATION_DATE_BEFORE_REGISTERED_DATE* The given Deregistrationdate is before the RegistrationDate
        * *INVALID_QUANTITY* invalid quantity
        * *INVALID_STATE* State is not acceptable
        * *INVALID_UNIT* invalid unit
        * *IS_EMPTY* A Object is NULL or empty
        * *KEY_IS_NOT_UNIQUE* The given key is not unique in the data structure
        * *LESS_WORKSTEPS_TO_IMPORT_FOR_RELEASED_WORKORDER* There a less Worksteps given in the Import than the current amount of Workorder Worksteps for the Released Workorder
        * *LOCATION_IS_NOT_UNIQUE* Location of all BomItem has to be unique within the BOM.
        * *LOCKED* Object is locked
        * *MATERIALTYPE_PRODUCT_REQUIRED_FOR_THIS_OPERATION* The Part has to have MaterialType:PRODUCT to create a BOM, Workplan or Workorder
        * *MAXIMUM_EXCEEDED* Maximal value exceeded
        * *MAX_BOOKING_COUNT_WORKSTEP_ORGANIZATIONUNIT_REACHED* Maximum allowed bookings for a Serialunit at the OrganizatioUnit for the current Workstep reached
        * *MAX_BOOKING_COUNT_WORKSTEP_REACHED* Maximum allowed bookings for a Serialunit at the current Workstep reached
        * *MERGE_LOACTION_IS_ALREADY_USED* The Location is already used by another merge
        * *MERGE_LOACTION_IS_NOT_DEFINED_IN_PARENT_BOM* The given Location for the merge is not defined  in the Parent-BOM
        * *MERGE_PART_OF_SERIALUNIT_IS_NOT_DEFINED_IN_PARENT_BOM* the Partnumber of the Serialunit is not defined in the Parent-BOM
        * *MISSING_BOOKING_FOR_LAST_MANDATORY_WORKSTEP* There is no booking for the last mandatory workstep
        * *MISSING_BOOKING_FOR_PREVIOUS_MANDATORY_WORKSTEP* There is no booking for a previous mandatory workstep
        * *MUST_CONTAIN_AT_LEAST_ONE_ORGANIZATION_UNIT* Workplan - The Workcenter must contain at least one OrganizationUnit.
        * *NOT_AUDITED* Object is not audited
        * *NO_COMMON_ORGANIZATIONUNIT_AT_ANY_WORKSTEP_OF_ALL_WORKORDERS_OF_THE_WORKORDERCLUSTER* No common organizationUnit at any workstep of all workorders of the workorderCluster
        * *NO_COMMON_ORGANIZATIONUNIT_AT_FIRST_WORKSTEP* No common organizationUnit at first workstep of all workorders of the workorderCluster
        * *NO_FILTER_PARAMETER* No Filter parameter given. Call without any Filter Condition is not allowed
        * *NO_POSITION_CHANGE_OF_WORKSTEP_TO_IMPORT_FOR_RELEASED_WORKORDER* The Worksteps given in the Import must not be change the  postions during Import for the Released Workorder
        * *NO_WORKSTEP_WITH_SAME_NAME_FOUND_FOR_ANY_STATION* No workstep with same name found for any station
        * *ONLY_ONE_COMPONENT_ALLOWED* Only one Component is allowed
        * *ORGANIZATION_UNIT_IS_NOT_ASSIGNED_THE_WORKSTEP* OrganizationUnit is not assigned to the workstep
        * *PLANNED_DELIVERY_DATE_BEFORE_PLANNED_END_DATE* The planned delivery date must be after the planned end date.
        * *PLANNED_DELIVERY_DATE_BEFORE_PLANNED_START_DATE* The planned delivery date must be after the planned start date.
        * *PLANNED_END_DATE_BEFORE_PLANNED_START_DATE* The planned start date must be before the planned end date.
        * *REQUIRED_VALUE_MISSING* A require value is missing
        * *SERIALUNIT_ALREADY_ASSIGNED_TO_ANOTHER_HANDLING_UNIT* Serialunit is already assigned to another HandlingUnit
        * *SERIALUNIT_IS_ALREADY_MERGED* Serialunit is already merged
        * *SERIALUNIT_IS_NOT_MERGED* Serialunit is no merged
        * *SERIALUNIT_IS_SCRAP* The Serialunit is booked as SCRAP
        * *SERIALUNIT_NOT_ASSIGNED_TO_GIVEN_HANDLINGUNIT* Serialunit is not assigned to given HandlingUnit
        * *STATE_CHANGE_NOT_SUPPORTED* The change of the state is not supported for the given combination
        * *STATE_INVALID_ALL_MUST_BE_RELEASED* State invalid. All must be in State(Released)
        * *STORED* Object is stored in
        * *TYPE_IS_NOT_SUPPORTED* The given Type is not supported
        * *WORKER_ALREADY_REGISTRED_AT_ALL_LINE_STATIONS* the Worker is already registred at all Stations of the Line
        * *WORKER_ALREADY_REGISTRED_AT_THIS_STATION* the Worker is already registred at the Station
        * *WORKER_IS_NOT_REGISTERED_AT_ANY_LINE_STATION* The Worker is not registered at any Station of the Line
        * *WORKER_IS_NOT_REGISTERED_AT_THIS_STATION* The Worker is not registered at this Station
        * *WORKPLAN_MUST_CONTAIN_AT_LEAST_ONE_MANDATORY_WORKSTEP* The Workplan must contain at least one mandatory Workstep.
        * *WORKSTEP_CONFIRMATION_NUMBER_HAS_TO_BE_UNIQUE* The confirmationNumber of a Workstep has to be unique or null
        * *WORKSTEP_NAME_AT_A_POSITION_Of_RELEASED_WORKORDER_MUST_NOT_BE_CHANGED* Change the Name of Worksteps for a Position is not allowed
        * *WORKSTEP_NAME_HAS_TO_BE_UNIQUE* The Name of a WorkorderWorkstep has to be unique within a Workorder
        * *WRONG_MASTERDATA_TYPE* Field not found in masterData
    ResponseCodeMapping409:
      description: |-
        Conflict
        * *CANNOT_BE_CREATED* Object cannot be created due missing or inconsistent data
        * *UNIQUE_KEY_ALREADY_EXISTS* There is a unique key violation, because a key defintion already exists.
    ResponseCodeMapping403:
      description: |-
        Forbidden
        * *FORBIDDEN* The requested Task is forbidden
    ResponseCodeMapping401:
      description: |-
        Unauthorized
        * *SESSION_PLANT_CONFLICT* The Session references another plant. It's prohibit to work on objects of other plants.
    ResponseCodeMapping404:
      description: |-
        Not Found
        * *NOT_FOUND* Object Not found
        * *NO_VALID_WORKSTEPS_FOUND* No valid worksteps found, either the worksteps don't exists or the worksteps are finished
        * *URL_NOT_FOUND* URL Not found
    ResponseCodeMapping500:
      description: |-
        Internal Server Error
        * *SERVER_EXCEPTION* Unexpected Server Exception
    Warning:
      description: |-
        Additional to mapped error-codes following warning-codes are defined (see Schema 'GecWarning', field 'failure')
        * *BOOKINFO_IS_TOO_LONG_CUT_IT*: the given BookInfo is too long, so cut it
        * *BOOK_STATE_IN_CURRENT_WORKSTEP_IS_FAIL*: the BookState in the current workstep is FAIL
        * *ID_NAME_MISMATCH_USE_ID*: Given Id and Name, don't match to the existing name for the id in the Persistence, use the given ID
        * *IGNORE_DELETE_FOR_A_NONE_EXISTING_ITEM*: A Delete Request is send for a none existing Item, ignore Delete Request
        * *IS_EMPTY_USE_DEFAULT*: A Object is NULL or empty, use a default instead
        * *MORE_DATA_IS_AVAILABLE*: More data is available, but not returned due to size-restrictions
        * *NOT_ENABLED*: A Feature or Functionality is not enable, so no Data is available
        * *NOT_EXISTS_HAS_TO_BE_CREATED*: Object doesn't exists and has to be created
        * *NOT_REQUIRED*: the given Object is not required
        * *NOT_SETUP*: the given Object is not set up
        * *NOT_VALID_USE_DEFAULT*: a value is invalid, the serverside default is used instead
        * *REQUIRED_VALUE_MISSING_USE_DEFAULT*: A required value is missing, use a default instead
        * *SECTION_REFERENCE_DO_NOT_MATCH_ANY_MATERIAL_BIN_SECTION*: The given sectionReference don't match any section of the materialBin
        * *SERIALUNIT_ALREADY_ASSIGNED_TO_GIVEN_HANDLING_UNIT*: Serialunit is already assigned to given HandlingUnit
        * *SERIALUNIT_IS_ALREADY_MERGED_IMPLICIT_UNMERGE_IS_DONE*: Serialunit is already merged. Implicit unmerged Serialunit from old ParentSerialunit, than merge it to the new ParentSerialunit
        * *SERIALUNIT_NOT_ASSIGNED_TO_A_HANDLINGUNIT*: Serialunit is not assigned to a HandlingUnit
        * *SETUP*: the given Object is set up
        * *UNABLE_TO_DECREMENT_QUANTITY_AUTOMATICALLY*: Multiple alternative setups found. Unable to decrement automatically. Please provide booking-quantities for exact material-consumption bookings.
  securitySchemes:
    keycloak_auth:
      type: oauth2
      description: Authentication
      flows:
        implicit:
          authorizationUrl: https://keycloak.devalm.gec.io/auth/realms/gec/protocol/openid-connect/auth
          tokenUrl: https://keycloak.devalm.gec.io/auth/realms/gec/protocol/openid-connect/token
          refreshUrl: https://keycloak.devalm.gec.io/auth/realms/gec/protocol/openid-connect/token
